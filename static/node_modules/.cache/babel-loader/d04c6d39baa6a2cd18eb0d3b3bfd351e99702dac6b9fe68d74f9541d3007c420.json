{"ast":null,"code":"/** @ignore */ /** */\nimport { __extends } from \"tslib\";\nimport { BlendMode } from \"./Renderer\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\n//import { Throttler } from \"../../util/Throttler\";\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\nimport { TextFormatter } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $object from \"../../util/Object\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n/**\r\n * @ignore\r\n */\nfunction checkArgs(name, actual, expected) {\n  if (actual !== expected) {\n    throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction checkMinArgs(name, actual, expected) {\n  if (actual < expected) {\n    throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction checkEvenArgs(name, actual, expected) {\n  checkMinArgs(name, actual, expected);\n  if (actual % expected !== 0) {\n    throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n  }\n}\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\nfunction splitArcFlags(args) {\n  for (var i = 0; i < args.length; i += 7) {\n    var index = i + 3;\n    var flag = args[index];\n    if (flag.length > 1) {\n      var a = /^([01])([01])(.*)$/.exec(flag);\n      if (a !== null) {\n        args.splice(index, 0, a[1]);\n        ++index;\n        args.splice(index, 0, a[2]);\n        ++index;\n        if (a[3].length > 0) {\n          args[index] = a[3];\n        } else {\n          args.splice(index, 1);\n        }\n      }\n    }\n    ++index;\n    flag = args[index];\n    if (flag.length > 1) {\n      var a = /^([01])(.+)$/.exec(flag);\n      if (a !== null) {\n        args.splice(index, 0, a[1]);\n        ++index;\n        args[index] = a[2];\n      }\n    }\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction assertBinary(value) {\n  if (value === 0 || value === 1) {\n    return value;\n  } else {\n    throw new Error(\"Flag must be 0 or 1\");\n  }\n}\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n// function distributeIdBAK(id: number): number {\n// \tif (id === 1) {\n// \t\treturn 0x000001;\n// \t} else {\n// \t\t// Finds the closest power of 2\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n// \t\t// Translates the id into an odd fraction index\n// \t\tconst index = ((base - id) * 2) + 1;\n// \t\t// TODO is Math.round correct ?\n// \t\treturn Math.round(0xffffff * (index / base));\n// \t}\n// }\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\nfunction distributeId(id) {\n  var rgb = [0, 0, 0];\n  for (var i = 0; i < 24; i++) {\n    rgb[i % 3] <<= 1;\n    rgb[i % 3] |= id & 0x01;\n    id >>= 1;\n  }\n  return (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\n}\n/**\r\n * @ignore\r\n */\nfunction eachTargets(hitTarget, f) {\n  for (;;) {\n    if (hitTarget.interactive) {\n      if (!f(hitTarget)) {\n        break;\n      }\n    }\n    if (hitTarget._parent) {\n      hitTarget = hitTarget._parent;\n    } else {\n      break;\n    }\n  }\n}\n// TODO feature detection for mouse/touch/pointer\n/**\r\n * @ignore\r\n */\nfunction onPointerEvent(element, name, f) {\n  return $utils.addEventListener(element, $utils.getRendererEvent(name), function (event) {\n    var touches = event.touches;\n    if (touches) {\n      if (touches.length == 0) {\n        touches = event.changedTouches;\n      }\n      f($array.copy(touches));\n    } else {\n      f([event]);\n    }\n  });\n}\n/**\r\n * @ignore\r\n */\nfunction isTainted(image) {\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = 1;\n  canvas.height = 1;\n  var context = canvas.getContext(\"2d\", {\n    willReadFrequently: true\n  });\n  context.drawImage(image, 0, 0, 1, 1);\n  try {\n    context.getImageData(0, 0, 1, 1);\n    return false;\n  } catch (err) {\n    console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n    return true;\n  }\n}\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\nfunction clearCanvas(view) {\n  view.width = 0;\n  view.height = 0;\n  view.style.width = \"0px\";\n  view.style.height = \"0px\";\n}\n/**\r\n * @ignore\r\n */\nvar CanvasPivot = /** @class */function () {\n  function CanvasPivot() {\n    Object.defineProperty(this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n  }\n  Object.defineProperty(CanvasPivot.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      this._x = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CanvasPivot.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      this._y = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CanvasPivot;\n}();\nexport { CanvasPivot };\n/**\r\n * @ignore\r\n */\nvar CanvasDisplayObject = /** @class */function (_super) {\n  __extends(CanvasDisplayObject, _super);\n  function CanvasDisplayObject(renderer) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"_layer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"mask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(_this, \"visible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"exportable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"interactive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"inactive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"wheelable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"cancelTouch\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"isMeasured\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"buttonMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"alpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"compoundAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"angle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"scale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"pivot\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new CanvasPivot()\n    });\n    Object.defineProperty(_this, \"filter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"cursorOverStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_replacedCursorStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_localMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(_this, \"_matrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    // TODO can this be replaced with _localMatrix ?\n    Object.defineProperty(_this, \"_uMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(_this, \"_renderer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_bounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    _this._renderer = renderer;\n    return _this;\n  }\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._renderer._removeObject(this);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getCanvas\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.getLayer().view;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var self = this;\n      for (;;) {\n        if (self._layer) {\n          return self._layer;\n        } else if (self._parent) {\n          self = self._parent;\n        } else {\n          return this._renderer.defaultLayer;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"setLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order, margin) {\n      if (order == null) {\n        this._layer = undefined;\n      } else {\n        var visible = true;\n        this._layer = this._renderer.getLayer(order, visible);\n        this._layer.visible = visible;\n        this._layer.margin = margin;\n        if (margin) {\n          $utils.setInteractive(this._layer.view, false);\n        }\n        if (this._parent) {\n          this._parent.registerChildLayer(this._layer);\n        }\n        this._renderer.resizeLayer(this._layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getLayer().dirty = true;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.invalidateBounds();\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"invalidateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._localBounds = undefined;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {}\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_getColorId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this._colorId === undefined) {\n        this._colorId = this._renderer.paintId(this);\n      }\n      return this._colorId;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractive\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.inactive == false && (this.interactive || this._renderer._forceInteractive > 0);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractiveMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._isInteractive();\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"contains\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      for (;;) {\n        if (child === this) {\n          return true;\n        } else if (child._parent) {\n          child = child._parent;\n        } else {\n          return false;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"toGlobal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._matrix.apply(point);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"toLocal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._matrix.applyInverse(point);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalMatrix\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n      return this._uMatrix;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._localBounds) {\n        var bn = 10000000;\n        this._localBounds = {\n          left: bn,\n          top: bn,\n          right: -bn,\n          bottom: -bn\n        };\n        this._addBounds(this._localBounds);\n      }\n      return this._localBounds;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getAdjustedBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      this._setMatrix();\n      var matrix = this.getLocalMatrix();\n      var p0 = matrix.apply({\n        x: bounds.left,\n        y: bounds.top\n      });\n      var p1 = matrix.apply({\n        x: bounds.right,\n        y: bounds.top\n      });\n      var p2 = matrix.apply({\n        x: bounds.right,\n        y: bounds.bottom\n      });\n      var p3 = matrix.apply({\n        x: bounds.left,\n        y: bounds.bottom\n      });\n      return {\n        left: Math.min(p0.x, p1.x, p2.x, p3.x),\n        top: Math.min(p0.y, p1.y, p2.y, p3.y),\n        right: Math.max(p0.x, p1.x, p2.x, p3.x),\n        bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n      };\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback, context) {\n      if (this.interactive) {\n        return this._renderer._addEvent(this, key, callback, context);\n      } else {\n        return new Disposer(function () {});\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_setMatrix\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // TODO only calculate this if it has actually changed\n      this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y,\n      // Converts degrees to radians\n      this.angle * Math.PI / 180, this.scale);\n      this._matrix.copyFrom(this._localMatrix);\n      if (this._parent) {\n        // TODO only calculate this if it has actually changed\n        this._matrix.prepend(this._parent._matrix);\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_transform\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, resolution) {\n      var m = this._matrix;\n      context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, m.tx * resolution, m.ty * resolution);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_transformMargin\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, resolution, margin) {\n      var m = this._matrix;\n      context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_transformLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, resolution, layer) {\n      if (layer.margin) {\n        this._transformMargin(context, layer.scale || resolution, layer.margin);\n      } else {\n        this._transform(context, layer.scale || resolution);\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n      if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n        this._setMatrix();\n        var resolution_1 = this._renderer.resolution;\n        var layers = this._renderer.layers;\n        var ghostContext = this._renderer._ghostContext;\n        var mask_1 = this.mask;\n        if (mask_1) {\n          mask_1._setMatrix();\n        }\n        // TODO improve this\n        $array.each(layers, function (layer) {\n          if (layer) {\n            var context = layer.context;\n            context.save();\n            // We must apply the mask before we transform the element\n            if (mask_1) {\n              mask_1._transformLayer(context, resolution_1, layer);\n              mask_1._runPath(context);\n              context.clip();\n            }\n            context.globalAlpha = _this.compoundAlpha * _this.alpha;\n            _this._transformLayer(context, resolution_1, layer);\n            if (_this.filter) {\n              context.filter = _this.filter;\n            }\n          }\n        });\n        ghostContext.save();\n        // We must apply the mask before we transform the element\n        if (mask_1 && this._isInteractiveMask()) {\n          mask_1._transform(ghostContext, resolution_1);\n          mask_1._runPath(ghostContext);\n          ghostContext.clip();\n        }\n        this._transform(ghostContext, resolution_1);\n        this._render(parentLayer);\n        ghostContext.restore();\n        $array.each(layers, function (layer) {\n          if (layer) {\n            layer.context.restore();\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      if (this.exportable === false) {\n        var layer = this._layer || parentLayer;\n        layer.tainted = true;\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"hovering\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._renderer._hovering.has(this);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"dragging\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      return this._renderer._dragging.some(function (x) {\n        return x.value === _this;\n      });\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getLayer().dirty = true;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"shouldCancelTouch\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var renderer = this._renderer;\n      if (renderer.tapToActivate && !renderer._touchActive) {\n        return false;\n      }\n      if (this.cancelTouch) {\n        return true;\n      } else if (this._parent) {\n        return this._parent.shouldCancelTouch();\n      }\n      return false;\n    }\n  });\n  return CanvasDisplayObject;\n}(DisposerClass);\nexport { CanvasDisplayObject };\n/**\r\n * @ignore\r\n */\nvar CanvasContainer = /** @class */function (_super) {\n  __extends(CanvasContainer, _super);\n  function CanvasContainer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"interactiveChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_childLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    return _this;\n  }\n  Object.defineProperty(CanvasContainer.prototype, \"_isInteractiveMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.interactiveChildren || _super.prototype._isInteractiveMask.call(this);\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"addChild\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      child._parent = this;\n      this._children.push(child);\n      if (child._layer) {\n        this.registerChildLayer(child._layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"addChildAt\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child, index) {\n      child._parent = this;\n      this._children.splice(index, 0, child);\n      if (child._layer) {\n        this.registerChildLayer(child._layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"removeChild\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      child._parent = undefined;\n      $array.removeFirst(this._children, child);\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n      _super.prototype._render.call(this, parentLayer);\n      var renderer = this._renderer;\n      if (this.interactive && this.interactiveChildren) {\n        ++renderer._forceInteractive;\n      }\n      var layer = this._layer || parentLayer;\n      $array.each(this._children, function (child) {\n        child.compoundAlpha = _this.compoundAlpha * _this.alpha;\n        child.render(layer);\n      });\n      if (this.interactive && this.interactiveChildren) {\n        --renderer._forceInteractive;\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"registerChildLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      if (!this._childLayers) {\n        this._childLayers = [];\n      }\n      $array.pushOne(this._childLayers, layer);\n      if (this._parent) {\n        this._parent.registerChildLayer(layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (deep) {\n      if (deep === void 0) {\n        deep = false;\n      }\n      _super.prototype.markDirtyLayer.call(this);\n      if (deep && this._childLayers) {\n        $array.each(this._childLayers, function (layer) {\n          return layer.dirty = true;\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.dispose.call(this);\n      if (this._childLayers) {\n        $array.each(this._childLayers, function (layer) {\n          layer.dirty = true;\n        });\n      }\n    }\n  });\n  return CanvasContainer;\n}(CanvasDisplayObject);\nexport { CanvasContainer };\n/**\r\n * @ignore\r\n */\nfunction setPoint(bounds, point) {\n  bounds.left = Math.min(bounds.left, point.x);\n  bounds.top = Math.min(bounds.top, point.y);\n  bounds.right = Math.max(bounds.right, point.x);\n  bounds.bottom = Math.max(bounds.bottom, point.y);\n}\n/**\r\n * @ignore\r\n */\nvar Op = /** @class */function () {\n  function Op() {}\n  Object.defineProperty(Op.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_context, _forceColor) {}\n  });\n  Object.defineProperty(Op.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_context) {}\n  });\n  Object.defineProperty(Op.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {}\n  });\n  return Op;\n}();\n/**\r\n * @ignore\r\n */\nvar BeginFill = /** @class */function (_super) {\n  __extends(BeginFill, _super);\n  function BeginFill(color) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    return _this;\n  }\n  Object.defineProperty(BeginFill.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, forceColor) {\n      if (forceColor !== undefined) {\n        context.fillStyle = forceColor;\n      } else {\n        context.fillStyle = this.color;\n      }\n    }\n  });\n  return BeginFill;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar EndFill = /** @class */function (_super) {\n  __extends(EndFill, _super);\n  function EndFill(clearShadow) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"clearShadow\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: clearShadow\n    });\n    return _this;\n  }\n  Object.defineProperty(EndFill.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.fill();\n      if (this.clearShadow) {\n        context.shadowColor = \"\";\n        context.shadowBlur = 0;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n      }\n    }\n  });\n  return EndFill;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar EndStroke = /** @class */function (_super) {\n  __extends(EndStroke, _super);\n  function EndStroke() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(EndStroke.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.stroke();\n    }\n  });\n  return EndStroke;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineStyle = /** @class */function (_super) {\n  __extends(LineStyle, _super);\n  function LineStyle(width, color, lineJoin) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    Object.defineProperty(_this, \"lineJoin\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: lineJoin\n    });\n    return _this;\n  }\n  Object.defineProperty(LineStyle.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, forceColor) {\n      if (forceColor !== undefined) {\n        context.strokeStyle = forceColor;\n      } else {\n        context.strokeStyle = this.color;\n      }\n      context.lineWidth = this.width;\n      if (this.lineJoin) {\n        context.lineJoin = this.lineJoin;\n      }\n    }\n  });\n  return LineStyle;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineDash = /** @class */function (_super) {\n  __extends(LineDash, _super);\n  function LineDash(dash) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"dash\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dash\n    });\n    return _this;\n  }\n  Object.defineProperty(LineDash.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.setLineDash(this.dash);\n    }\n  });\n  return LineDash;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineDashOffset = /** @class */function (_super) {\n  __extends(LineDashOffset, _super);\n  function LineDashOffset(dashOffset) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"dashOffset\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dashOffset\n    });\n    return _this;\n  }\n  Object.defineProperty(LineDashOffset.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.lineDashOffset = this.dashOffset;\n    }\n  });\n  return LineDashOffset;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar DrawRect = /** @class */function (_super) {\n  __extends(DrawRect, _super);\n  function DrawRect(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(_this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: height\n    });\n    return _this;\n  }\n  Object.defineProperty(DrawRect.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.rect(this.x, this.y, this.width, this.height);\n    }\n  });\n  Object.defineProperty(DrawRect.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var l = this.x;\n      var t = this.y;\n      var r = l + this.width;\n      var b = t + this.height;\n      setPoint(bounds, {\n        x: l,\n        y: t\n      });\n      setPoint(bounds, {\n        x: r,\n        y: t\n      });\n      setPoint(bounds, {\n        x: l,\n        y: b\n      });\n      setPoint(bounds, {\n        x: r,\n        y: b\n      });\n    }\n  });\n  return DrawRect;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar DrawCircle = /** @class */function (_super) {\n  __extends(DrawCircle, _super);\n  function DrawCircle(x, y, radius) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    return _this;\n  }\n  Object.defineProperty(DrawCircle.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.moveTo(this.x + this.radius, this.y);\n      context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    }\n  });\n  // TODO handle skewing and rotation\n  Object.defineProperty(DrawCircle.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x - this.radius,\n        y: this.y - this.radius\n      });\n      setPoint(bounds, {\n        x: this.x + this.radius,\n        y: this.y + this.radius\n      });\n    }\n  });\n  return DrawCircle;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar DrawEllipse = /** @class */function (_super) {\n  __extends(DrawEllipse, _super);\n  function DrawEllipse(x, y, radiusX, radiusY) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(_this, \"radiusX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radiusX\n    });\n    Object.defineProperty(_this, \"radiusY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radiusY\n    });\n    return _this;\n  }\n  Object.defineProperty(DrawEllipse.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\n    }\n  });\n  // TODO handle skewing and rotation\n  Object.defineProperty(DrawEllipse.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x - this.radiusX,\n        y: this.y - this.radiusY\n      });\n      setPoint(bounds, {\n        x: this.x + this.radiusX,\n        y: this.y + this.radiusY\n      });\n    }\n  });\n  return DrawEllipse;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar Arc = /** @class */function (_super) {\n  __extends(Arc, _super);\n  function Arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"cx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cx\n    });\n    Object.defineProperty(_this, \"cy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cy\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    Object.defineProperty(_this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: startAngle\n    });\n    Object.defineProperty(_this, \"endAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: endAngle\n    });\n    Object.defineProperty(_this, \"anticlockwise\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: anticlockwise\n    });\n    return _this;\n  }\n  Object.defineProperty(Arc.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.radius > 0) {\n        context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n      }\n    }\n  });\n  Object.defineProperty(Arc.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n      setPoint(bounds, {\n        x: arcBounds.left,\n        y: arcBounds.top\n      });\n      setPoint(bounds, {\n        x: arcBounds.right,\n        y: arcBounds.bottom\n      });\n    }\n  });\n  return Arc;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar ArcTo = /** @class */function (_super) {\n  __extends(ArcTo, _super);\n  function ArcTo(x1, y1, x2, y2, radius) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x1\n    });\n    Object.defineProperty(_this, \"y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y1\n    });\n    Object.defineProperty(_this, \"x2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x2\n    });\n    Object.defineProperty(_this, \"y2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y2\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    return _this;\n  }\n  Object.defineProperty(ArcTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.radius > 0) {\n        context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n      }\n    }\n  });\n  // TODO: add points\n  Object.defineProperty(ArcTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {\n      /*\r\n      // not finished\r\n      https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n            if (prevPoint) {\r\n          let x1 = prevPoint.x;\r\n          let y1 = prevPoint.y;\r\n          let x2 = this.x2;\r\n          let y2 = this.y2;\r\n          let r = this.radius;\r\n                let xa = (x2 - x1) / 2;\r\n          let ya = (y2 - y1) / 2;\r\n                let x0 = x1 + xa;\r\n          let y0 = y1 + ya;\r\n                let a = Math.hypot(xa, ya);\r\n          let b = Math.sqrt(r * r - a * a);\r\n                let cx = x0 + b * ya / a;\r\n          let cy = y0 - b * xa / a;\r\n                console.log(cx, cy);\r\n      }*/\n    }\n  });\n  return ArcTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineTo = /** @class */function (_super) {\n  __extends(LineTo, _super);\n  function LineTo(x, y) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    return _this;\n  }\n  Object.defineProperty(LineTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.lineTo(this.x, this.y);\n    }\n  });\n  Object.defineProperty(LineTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x,\n        y: this.y\n      });\n    }\n  });\n  return LineTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar MoveTo = /** @class */function (_super) {\n  __extends(MoveTo, _super);\n  function MoveTo(x, y) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    return _this;\n  }\n  Object.defineProperty(MoveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.moveTo(this.x, this.y);\n    }\n  });\n  Object.defineProperty(MoveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x,\n        y: this.y\n      });\n    }\n  });\n  return MoveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar ClosePath = /** @class */function (_super) {\n  __extends(ClosePath, _super);\n  function ClosePath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(ClosePath.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.closePath();\n    }\n  });\n  return ClosePath;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar BezierCurveTo = /** @class */function (_super) {\n  __extends(BezierCurveTo, _super);\n  function BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(_this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(_this, \"cpX2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX2\n    });\n    Object.defineProperty(_this, \"cpY2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY2\n    });\n    Object.defineProperty(_this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(_this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n    return _this;\n  }\n  Object.defineProperty(BezierCurveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n    }\n  });\n  // TODO: OK?\n  Object.defineProperty(BezierCurveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.cpX,\n        y: this.cpY\n      });\n      setPoint(bounds, {\n        x: this.cpX2,\n        y: this.cpY2\n      });\n      setPoint(bounds, {\n        x: this.toX,\n        y: this.toY\n      });\n    }\n  });\n  return BezierCurveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar QuadraticCurveTo = /** @class */function (_super) {\n  __extends(QuadraticCurveTo, _super);\n  function QuadraticCurveTo(cpX, cpY, toX, toY) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(_this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(_this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(_this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n    return _this;\n  }\n  Object.defineProperty(QuadraticCurveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n    }\n  });\n  // TODO: OK?\n  Object.defineProperty(QuadraticCurveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.cpX,\n        y: this.cpY\n      });\n      setPoint(bounds, {\n        x: this.toX,\n        y: this.toY\n      });\n    }\n  });\n  return QuadraticCurveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar Shadow = /** @class */function (_super) {\n  __extends(Shadow, _super);\n  function Shadow(color, blur, offsetX, offsetY, opacity) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    Object.defineProperty(_this, \"blur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: blur\n    });\n    Object.defineProperty(_this, \"offsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetX\n    });\n    Object.defineProperty(_this, \"offsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetY\n    });\n    Object.defineProperty(_this, \"opacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: opacity\n    });\n    return _this;\n  }\n  Object.defineProperty(Shadow.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      if (this.opacity) {\n        context.fillStyle = this.color;\n      }\n      context.shadowColor = this.color;\n      context.shadowBlur = this.blur;\n      context.shadowOffsetX = this.offsetX;\n      context.shadowOffsetY = this.offsetY;\n    }\n  });\n  return Shadow;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar GraphicsImage = /** @class */function (_super) {\n  __extends(GraphicsImage, _super);\n  function GraphicsImage(image, width, height, x, y) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"image\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: image\n    });\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(_this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: height\n    });\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    return _this;\n  }\n  Object.defineProperty(GraphicsImage.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.drawImage(this.image, this.x, this.y, this.width, this.height);\n    }\n  });\n  // TODO: OK?\n  Object.defineProperty(GraphicsImage.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x,\n        y: this.y\n      });\n      setPoint(bounds, {\n        x: this.width,\n        y: this.height\n      });\n    }\n  });\n  return GraphicsImage;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar CanvasGraphics = /** @class */function (_super) {\n  __extends(CanvasGraphics, _super);\n  function CanvasGraphics() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_operations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"blendMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: BlendMode.NORMAL\n    });\n    Object.defineProperty(_this, \"_hasShadows\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_fillAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  Object.defineProperty(CanvasGraphics.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.clear.call(this);\n      this._operations.length = 0;\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_pushOp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (op) {\n      this._operations.push(op);\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"beginFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (color, alpha) {\n      if (alpha === void 0) {\n        alpha = 1;\n      }\n      this._fillAlpha = alpha;\n      if (color) {\n        if (color instanceof Color) {\n          this._pushOp(new BeginFill(color.toCSS(alpha)));\n        } else {\n          this.isMeasured = true;\n          this._pushOp(new BeginFill(color));\n        }\n      } else {\n        this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"endFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new EndFill(this._hasShadows));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"endStroke\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new EndStroke());\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"lineStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (width, color, alpha, lineJoin) {\n      if (width === void 0) {\n        width = 0;\n      }\n      if (alpha === void 0) {\n        alpha = 1;\n      }\n      this._strokeAlpha = alpha;\n      if (color) {\n        if (color instanceof Color) {\n          this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\n        } else {\n          this._pushOp(new LineStyle(width, color, lineJoin));\n        }\n      } else {\n        this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"setLineDash\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dash) {\n      this._pushOp(new LineDash(dash ? dash : []));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"setLineDashOffset\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dashOffset) {\n      if (dashOffset === void 0) {\n        dashOffset = 0;\n      }\n      this._pushOp(new LineDashOffset(dashOffset));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"drawRect\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, width, height) {\n      this._pushOp(new DrawRect(x, y, width, height));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"drawCircle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, radius) {\n      this._pushOp(new DrawCircle(x, y, radius));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"drawEllipse\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, radiusX, radiusY) {\n      this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"arc\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cx, cy, radius, startAngle, endAngle, anticlockwise) {\n      if (anticlockwise === void 0) {\n        anticlockwise = false;\n      }\n      this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"arcTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, x2, y2, radius) {\n      this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"lineTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      this._pushOp(new LineTo(x, y));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"moveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      this._pushOp(new MoveTo(x, y));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"bezierCurveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cpX, cpY, cpX2, cpY2, toX, toY) {\n      this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"quadraticCurveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cpX, cpY, toX, toY) {\n      this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"closePath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new ClosePath());\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"shadow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (color, blur, offsetX, offsetY, opacity) {\n      if (blur === void 0) {\n        blur = 0;\n      }\n      if (offsetX === void 0) {\n        offsetX = 0;\n      }\n      if (offsetY === void 0) {\n        offsetY = 0;\n      }\n      this._hasShadows = true;\n      this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"image\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (image, width, height, x, y) {\n      this._pushOp(new GraphicsImage(image, width, height, x, y));\n    }\n  });\n  // https://svgwg.org/svg2-draft/paths.html#DProperty\n  // TODO better error checking\n  Object.defineProperty(CanvasGraphics.prototype, \"svgPath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (path) {\n      var _this = this;\n      var x = 0;\n      var y = 0;\n      var cpx = null;\n      var cpy = null;\n      var qcpx = null;\n      var qcpy = null;\n      var SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n      var ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n      var match;\n      while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n        var name_1 = match[1];\n        var rest = match[2];\n        var args = [];\n        while ((match = ARGS_REGEXP.exec(rest)) !== null) {\n          args.push(match[1]);\n        }\n        // Reset control point\n        if (name_1 !== \"S\" && name_1 !== \"s\" && name_1 !== \"C\" && name_1 !== \"c\") {\n          cpx = null;\n          cpy = null;\n        }\n        // Reset control point\n        if (name_1 !== \"Q\" && name_1 !== \"q\" && name_1 !== \"T\" && name_1 !== \"t\") {\n          qcpx = null;\n          qcpy = null;\n        }\n        switch (name_1) {\n          case \"M\":\n            checkEvenArgs(name_1, args.length, 2);\n            x = +args[0];\n            y = +args[1];\n            this.moveTo(x, y);\n            for (var i = 2; i < args.length; i += 2) {\n              x = +args[i];\n              y = +args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"m\":\n            checkEvenArgs(name_1, args.length, 2);\n            x += +args[0];\n            y += +args[1];\n            this.moveTo(x, y);\n            for (var i = 2; i < args.length; i += 2) {\n              x += +args[i];\n              y += +args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"L\":\n            checkEvenArgs(name_1, args.length, 2);\n            for (var i = 0; i < args.length; i += 2) {\n              x = +args[i];\n              y = +args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"l\":\n            checkEvenArgs(name_1, args.length, 2);\n            for (var i = 0; i < args.length; i += 2) {\n              x += +args[i];\n              y += +args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"H\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              x = +args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"h\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              x += +args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"V\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              y = +args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"v\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              y += +args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"C\":\n            checkEvenArgs(name_1, args.length, 6);\n            for (var i = 0; i < args.length; i += 6) {\n              var x1 = +args[i];\n              var y1 = +args[i + 1];\n              cpx = +args[i + 2];\n              cpy = +args[i + 3];\n              x = +args[i + 4];\n              y = +args[i + 5];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"c\":\n            checkEvenArgs(name_1, args.length, 6);\n            for (var i = 0; i < args.length; i += 6) {\n              var x1 = +args[i] + x;\n              var y1 = +args[i + 1] + y;\n              cpx = +args[i + 2] + x;\n              cpy = +args[i + 3] + y;\n              x += +args[i + 4];\n              y += +args[i + 5];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"S\":\n            checkEvenArgs(name_1, args.length, 4);\n            if (cpx === null || cpy === null) {\n              cpx = x;\n              cpy = y;\n            }\n            for (var i = 0; i < args.length; i += 4) {\n              var x1 = 2 * x - cpx;\n              var y1 = 2 * y - cpy;\n              cpx = +args[i];\n              cpy = +args[i + 1];\n              x = +args[i + 2];\n              y = +args[i + 3];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"s\":\n            checkEvenArgs(name_1, args.length, 4);\n            if (cpx === null || cpy === null) {\n              cpx = x;\n              cpy = y;\n            }\n            for (var i = 0; i < args.length; i += 4) {\n              var x1 = 2 * x - cpx;\n              var y1 = 2 * y - cpy;\n              cpx = +args[i] + x;\n              cpy = +args[i + 1] + y;\n              x += +args[i + 2];\n              y += +args[i + 3];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"Q\":\n            checkEvenArgs(name_1, args.length, 4);\n            for (var i = 0; i < args.length; i += 4) {\n              qcpx = +args[i];\n              qcpy = +args[i + 1];\n              x = +args[i + 2];\n              y = +args[i + 3];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"q\":\n            checkEvenArgs(name_1, args.length, 4);\n            for (var i = 0; i < args.length; i += 4) {\n              qcpx = +args[i] + x;\n              qcpy = +args[i + 1] + y;\n              x += +args[i + 2];\n              y += +args[i + 3];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"T\":\n            checkEvenArgs(name_1, args.length, 2);\n            if (qcpx === null || qcpy === null) {\n              qcpx = x;\n              qcpy = y;\n            }\n            for (var i = 0; i < args.length; i += 2) {\n              qcpx = 2 * x - qcpx;\n              qcpy = 2 * y - qcpy;\n              x = +args[i];\n              y = +args[i + 1];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"t\":\n            checkEvenArgs(name_1, args.length, 2);\n            if (qcpx === null || qcpy === null) {\n              qcpx = x;\n              qcpy = y;\n            }\n            for (var i = 0; i < args.length; i += 2) {\n              qcpx = 2 * x - qcpx;\n              qcpy = 2 * y - qcpy;\n              x += +args[i];\n              y += +args[i + 1];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"A\":\n          case \"a\":\n            var relative = name_1 === \"a\";\n            splitArcFlags(args);\n            checkEvenArgs(name_1, args.length, 7);\n            for (var i = 0; i < args.length; i += 7) {\n              var cx = +args[i + 5];\n              var cy = +args[i + 6];\n              if (relative) {\n                cx += x;\n                cy += y;\n              }\n              var bs = arcToBezier({\n                px: x,\n                py: y,\n                rx: +args[i],\n                ry: +args[i + 1],\n                xAxisRotation: +args[i + 2],\n                largeArcFlag: assertBinary(+args[i + 3]),\n                sweepFlag: assertBinary(+args[i + 4]),\n                cx: cx,\n                cy: cy\n              });\n              $array.each(bs, function (b) {\n                _this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n                x = b.x;\n                y = b.y;\n              });\n            }\n            break;\n          case \"Z\":\n          case \"z\":\n            checkArgs(name_1, args.length, 0);\n            this.closePath();\n            break;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_runPath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.beginPath();\n      $array.each(this._operations, function (op) {\n        op.path(context);\n      });\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      _super.prototype._render.call(this, parentLayer);\n      var layer = this._layer || parentLayer;\n      var layerDirty = layer.dirty;\n      var interactive = this._isInteractive();\n      if (layerDirty || interactive) {\n        var context_1 = layer.context;\n        var ghostContext_1 = this._renderer._ghostContext;\n        if (layerDirty) {\n          context_1.globalCompositeOperation = this.blendMode;\n          context_1.beginPath();\n        }\n        var color_1;\n        if (interactive) {\n          ghostContext_1.beginPath();\n          color_1 = this._getColorId();\n        }\n        $array.each(this._operations, function (op) {\n          if (layerDirty) {\n            op.path(context_1);\n            op.colorize(context_1, undefined);\n          }\n          if (interactive) {\n            op.path(ghostContext_1);\n            op.colorize(ghostContext_1, color_1);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"renderDetached\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.visible) {\n        this._setMatrix();\n        context.save();\n        // We must apply the mask before we transform the element\n        var mask = this.mask;\n        if (mask) {\n          mask._setMatrix();\n          mask._transform(context, 1);\n          mask._runPath(context);\n          context.clip();\n        }\n        // TODO handle compoundAlpha somehow ?\n        context.globalAlpha = this.compoundAlpha * this.alpha;\n        this._transform(context, 1);\n        if (this.filter) {\n          context.filter = this.filter;\n        }\n        context.globalCompositeOperation = this.blendMode;\n        context.beginPath();\n        $array.each(this._operations, function (op) {\n          op.path(context);\n          op.colorize(context, undefined);\n        });\n        context.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      if (this.visible && this.isMeasured) {\n        $array.each(this._operations, function (op) {\n          op.addBounds(bounds);\n        });\n      }\n    }\n  });\n  return CanvasGraphics;\n}(CanvasDisplayObject);\nexport { CanvasGraphics };\n/**\r\n * @ignore\r\n */\nvar CanvasText = /** @class */function (_super) {\n  __extends(CanvasText, _super);\n  function CanvasText(renderer, text, style) {\n    var _this = _super.call(this, renderer) || this;\n    Object.defineProperty(_this, \"text\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"style\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_textInfo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_textVisible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_originalScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    _this.text = text;\n    _this.style = style;\n    return _this;\n  }\n  Object.defineProperty(CanvasText.prototype, \"invalidateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.invalidateBounds.call(this);\n      this._textInfo = undefined;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_shared\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.style.textAlign) {\n        context.textAlign = this.style.textAlign;\n      }\n      if (this.style.direction) {\n        context.direction = this.style.direction;\n      }\n      if (this.style.textBaseline) {\n        context.textBaseline = this.style.textBaseline;\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_prerender\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer, ignoreGhost, ignoreFontWeight) {\n      if (ignoreGhost === void 0) {\n        ignoreGhost = false;\n      }\n      if (ignoreFontWeight === void 0) {\n        ignoreFontWeight = false;\n      }\n      _super.prototype._render.call(this, layer);\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext;\n      // Font style\n      var style = this.style;\n      var fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n      context.font = fontStyle;\n      if (this._isInteractive() && !ignoreGhost) {\n        ghostContext.font = fontStyle;\n      }\n      // Other parameters\n      if (style.fill) {\n        if (style.fill instanceof Color) {\n          context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\n        } else {\n          context.fillStyle = style.fill;\n        }\n      }\n      if (style.shadowColor) {\n        layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n      }\n      if (style.shadowBlur) {\n        layer.context.shadowBlur = style.shadowBlur;\n      }\n      if (style.shadowOffsetX) {\n        layer.context.shadowOffsetX = style.shadowOffsetX;\n      }\n      if (style.shadowOffsetY) {\n        layer.context.shadowOffsetY = style.shadowOffsetY;\n      }\n      this._shared(context);\n      if (this._isInteractive() && !ignoreGhost) {\n        ghostContext.fillStyle = this._getColorId();\n        this._shared(ghostContext);\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_getFontStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (style2, ignoreFontWeight) {\n      if (ignoreFontWeight === void 0) {\n        ignoreFontWeight = false;\n      }\n      // Process defaults\n      var style = this.style;\n      var fontStyle = [];\n      if (style2 && style2.fontVariant) {\n        fontStyle.push(style2.fontVariant);\n      } else if (style.fontVariant) {\n        fontStyle.push(style.fontVariant);\n      }\n      if (!ignoreFontWeight) {\n        if (style2 && style2.fontWeight) {\n          fontStyle.push(style2.fontWeight);\n        } else if (style.fontWeight) {\n          fontStyle.push(style.fontWeight);\n        }\n      }\n      if (style2 && style2.fontStyle) {\n        fontStyle.push(style2.fontStyle);\n      } else if (style.fontStyle) {\n        fontStyle.push(style.fontStyle);\n      }\n      if (style2 && style2.fontSize) {\n        if ($type.isNumber(style2.fontSize)) {\n          style2.fontSize = style2.fontSize + \"px\";\n        }\n        fontStyle.push(style2.fontSize);\n      } else if (style.fontSize) {\n        if ($type.isNumber(style.fontSize)) {\n          style.fontSize = style.fontSize + \"px\";\n        }\n        fontStyle.push(style.fontSize);\n      }\n      if (style2 && style2.fontFamily) {\n        fontStyle.push(style2.fontFamily);\n      } else if (style.fontFamily) {\n        fontStyle.push(style.fontFamily);\n      } else if (fontStyle.length) {\n        fontStyle.push(\"Arial\");\n      }\n      return fontStyle.join(\" \");\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n      var layer = this._layer || parentLayer;\n      // We need measurements in order to properly position text for alignment\n      if (!this._textInfo) {\n        this._measure(layer);\n      }\n      if (this._textVisible) {\n        var interactive_1 = this._isInteractive();\n        var context_2 = layer.context;\n        var layerDirty_1 = layer.dirty;\n        var ghostContext_2 = this._renderer._ghostContext;\n        context_2.save();\n        ghostContext_2.save();\n        this._prerender(layer);\n        // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n        // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n        // Process text info produced by _measure()\n        $array.each(this._textInfo, function (line, _index) {\n          $array.each(line.textChunks, function (chunk, _index) {\n            // Set style\n            if (chunk.style) {\n              context_2.save();\n              ghostContext_2.save();\n              context_2.font = chunk.style;\n              if (_this._isInteractive()) {\n                ghostContext_2.font = chunk.style;\n              }\n            }\n            if (chunk.fill) {\n              context_2.save();\n              context_2.fillStyle = chunk.fill.toCSS();\n              // Color does not affect ghostContext so we not set it\n            }\n            // Draw text\n            if (layerDirty_1) {\n              context_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n            }\n            // Draw underline\n            if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\n              var thickness = 1;\n              var offset = 1;\n              var fontSize = chunk.height;\n              var offsetX = chunk.offsetX;\n              switch (_this.style.textAlign) {\n                case \"right\":\n                case \"end\":\n                  offsetX -= chunk.width;\n                  break;\n                case \"center\":\n                  offsetX -= chunk.width / 2;\n                  break;\n              }\n              if (chunk.style) {\n                var format = TextFormatter.getTextStyle(chunk.style);\n                switch (format.fontWeight) {\n                  case \"bolder\":\n                  case \"bold\":\n                  case \"700\":\n                  case \"800\":\n                  case \"900\":\n                    thickness = 2;\n                    break;\n                }\n              }\n              if (fontSize) {\n                offset = fontSize / 20;\n              }\n              var y = void 0;\n              if (chunk.textDecoration == \"line-through\") {\n                y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\n              } else {\n                y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\n              }\n              context_2.save();\n              context_2.beginPath();\n              if (chunk.fill) {\n                context_2.strokeStyle = chunk.fill.toCSS();\n              } else if (_this.style.fill && _this.style.fill instanceof Color) {\n                context_2.strokeStyle = _this.style.fill.toCSS();\n              }\n              context_2.lineWidth = thickness * offset;\n              context_2.moveTo(offsetX, y);\n              context_2.lineTo(offsetX + chunk.width, y);\n              context_2.stroke();\n              context_2.restore();\n            }\n            if (interactive_1 && _this.interactive) {\n              // Draw text in ghost canvas ONLY if it is set as interactive\n              // explicitly. This way we avoid hit test anomalies caused by anti\n              // aliasing of text.\n              ghostContext_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n            }\n            if (chunk.fill) {\n              context_2.restore();\n              // Color does not affect ghostContext so we not set it\n            }\n            // Reset style\n            if (chunk.style) {\n              context_2.restore();\n              ghostContext_2.restore();\n            }\n          });\n        });\n        context_2.restore();\n        ghostContext_2.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      if (this.visible && this.isMeasured) {\n        //if (this._textVisible) {\n        var x = this._measure(this.getLayer());\n        setPoint(bounds, {\n          x: x.left,\n          y: x.top\n        });\n        setPoint(bounds, {\n          x: x.right,\n          y: x.bottom\n        });\n        //}\n      }\n    }\n  });\n\n  Object.defineProperty(CanvasText.prototype, \"_ignoreFontWeight\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return /apple/i.test(navigator.vendor);\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_measure\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      var _this = this;\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext;\n      var rtl = this.style.direction == \"rtl\";\n      // Reset text info\n      this._textInfo = [];\n      // Init\n      var oversizedBehavior = this.style.oversizedBehavior;\n      var maxWidth = this.style.maxWidth;\n      var truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n      var wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n      // Pre-render\n      context.save();\n      ghostContext.save();\n      this._prerender(layer, true, this._ignoreFontWeight());\n      // Get default font metrix\n      var refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n      // Split up text into lines\n      var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n      var styleRestored = true;\n      var minX = 0;\n      var maxX = 0;\n      // Iterate through the lines\n      var offsetY = 0;\n      var currentStyle;\n      $array.each(lines, function (line, _index) {\n        // Split up line into format/value chunks\n        var chunks;\n        if (line == \"\") {\n          chunks = [{\n            type: \"value\",\n            text: \"\"\n          }];\n        } else {\n          chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting);\n        }\n        var _loop_1 = function () {\n          // Init line object\n          var lineInfo = {\n            offsetY: offsetY,\n            ascent: 0,\n            width: 0,\n            height: 0,\n            left: 0,\n            right: 0,\n            textChunks: []\n          };\n          // Measure reference text\n          var metrics = _this._measureText(refText, context);\n          var height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n          lineInfo.height = height;\n          lineInfo.ascent = metrics.actualBoundingBoxAscent;\n          var currentFormat;\n          var currentDecoration = _this.style.textDecoration;\n          var currentFill;\n          var currentChunkWidth;\n          var skipFurtherText = false;\n          var firstTextChunk = true;\n          var leftoverChunks = [];\n          var currentVerticalAlign;\n          //let offsetX = 0;\n          //let chunk;\n          //while(chunk = chunks.shift()) {\n          $array.eachContinue(chunks, function (chunk, index) {\n            // Format chunk\n            if (chunk.type == \"format\") {\n              if (chunk.text == \"[/]\") {\n                if (!styleRestored) {\n                  context.restore();\n                  ghostContext.restore();\n                  styleRestored = true;\n                }\n                currentFill = undefined;\n                currentStyle = undefined;\n                currentChunkWidth = undefined;\n                currentDecoration = _this.style.textDecoration;\n                currentVerticalAlign = undefined;\n                currentFormat = chunk.text;\n              } else {\n                if (!styleRestored) {\n                  context.restore();\n                  ghostContext.restore();\n                }\n                var format = TextFormatter.getTextStyle(chunk.text);\n                var fontStyle = _this._getFontStyle(format);\n                context.save();\n                ghostContext.save();\n                context.font = fontStyle;\n                currentStyle = fontStyle;\n                currentFormat = chunk.text;\n                if (format.textDecoration) {\n                  currentDecoration = format.textDecoration;\n                }\n                if (format.fill) {\n                  currentFill = format.fill;\n                }\n                if (format.width) {\n                  currentChunkWidth = $type.toNumber(format.width);\n                }\n                if (format.verticalAlign) {\n                  currentVerticalAlign = format.verticalAlign;\n                }\n                styleRestored = false;\n                // Measure reference text after change of format\n                var metrics_1 = _this._measureText(refText, context);\n                var height_1 = metrics_1.actualBoundingBoxAscent + metrics_1.actualBoundingBoxDescent;\n                if (height_1 > lineInfo.height) {\n                  lineInfo.height = height_1;\n                }\n                if (metrics_1.actualBoundingBoxAscent > lineInfo.ascent) {\n                  lineInfo.ascent = metrics_1.actualBoundingBoxAscent;\n                }\n              }\n            }\n            // Text chunk\n            else if (chunk.type == \"value\" && !skipFurtherText) {\n              // Measure\n              var metrics_2 = _this._measureText(chunk.text, context);\n              var chunkWidth = metrics_2.actualBoundingBoxLeft + metrics_2.actualBoundingBoxRight;\n              // Check for fit\n              if (truncate) {\n                // Break words?\n                var breakWords = firstTextChunk || _this.style.breakWords || false;\n                // Measure ellipsis and check if it fits\n                var ellipsis = _this.style.ellipsis || \"\";\n                var ellipsisMetrics = _this._measureText(ellipsis, context);\n                var ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n                // Check fit\n                if (lineInfo.width + chunkWidth > maxWidth) {\n                  var excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n                  chunk.text = _this._truncateText(context, chunk.text, excessWidth, breakWords);\n                  chunk.text += ellipsis;\n                  skipFurtherText = true;\n                }\n              } else if (wrap) {\n                // Check fit\n                if (lineInfo.width + chunkWidth > maxWidth) {\n                  var excessWidth = maxWidth - lineInfo.width;\n                  var tmpText = _this._truncateText(context, chunk.text, excessWidth, false, firstTextChunk && _this.style.oversizedBehavior != \"wrap-no-break\");\n                  if (tmpText == \"\") {\n                    // Unable to fit a single letter - hide the whole label\n                    _this._textVisible = true;\n                    return false;\n                  }\n                  //skipFurtherText = true;\n                  //Add remaining chunks for the next line\n                  leftoverChunks = chunks.slice(index + 1);\n                  //Add remaining text of current chunk if it was forced-cut\n                  if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n                    leftoverChunks.unshift({\n                      type: \"value\",\n                      text: chunk.text.substr(tmpText.length)\n                    });\n                    if (currentFormat) {\n                      leftoverChunks.unshift({\n                        type: \"format\",\n                        text: currentFormat\n                      });\n                    }\n                  }\n                  // Set current chunk (truncated)\n                  chunk.text = $utils.trim(tmpText);\n                  chunks = [];\n                  skipFurtherText = true;\n                }\n              }\n              // Chunk width?\n              var leftBoundMod = 1;\n              var rightBoundMod = 1;\n              if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n                // increase horizontal bounding boxes accordingly\n                var boundsMod = chunkWidth / currentChunkWidth;\n                switch (_this.style.textAlign) {\n                  case \"right\":\n                  case \"end\":\n                    leftBoundMod = boundsMod;\n                    break;\n                  case \"center\":\n                    leftBoundMod = boundsMod;\n                    rightBoundMod = boundsMod;\n                    break;\n                  default:\n                    rightBoundMod = boundsMod;\n                }\n                chunkWidth = currentChunkWidth;\n              }\n              var chunkHeight = metrics_2.actualBoundingBoxAscent + metrics_2.actualBoundingBoxDescent;\n              if (chunkHeight > lineInfo.height) {\n                lineInfo.height = chunkHeight;\n              }\n              if (metrics_2.actualBoundingBoxAscent > lineInfo.ascent) {\n                lineInfo.ascent = metrics_2.actualBoundingBoxAscent;\n              }\n              lineInfo.width += chunkWidth;\n              lineInfo.left += metrics_2.actualBoundingBoxLeft / leftBoundMod;\n              lineInfo.right += metrics_2.actualBoundingBoxRight / rightBoundMod;\n              lineInfo.textChunks.push({\n                style: currentStyle,\n                fill: currentFill,\n                text: chunk.text,\n                width: chunkWidth,\n                height: chunkHeight,\n                left: metrics_2.actualBoundingBoxLeft,\n                right: metrics_2.actualBoundingBoxRight,\n                ascent: metrics_2.actualBoundingBoxAscent,\n                offsetX: 0,\n                offsetY: 0,\n                textDecoration: currentDecoration,\n                verticalAlign: currentVerticalAlign\n              });\n              //offsetX += chunkWidth;\n              firstTextChunk = false;\n            }\n            if (leftoverChunks) {\n              //return false;\n            }\n            return true;\n            //}\n          });\n\n          if (_this.style.lineHeight instanceof Percent) {\n            lineInfo.height *= _this.style.lineHeight.value;\n            lineInfo.ascent *= _this.style.lineHeight.value;\n          } else {\n            lineInfo.height *= _this.style.lineHeight || 1.2;\n            lineInfo.ascent *= _this.style.lineHeight || 1.2;\n          }\n          if (minX < lineInfo.left) {\n            minX = lineInfo.left;\n          }\n          if (maxX < lineInfo.right) {\n            maxX = lineInfo.right;\n          }\n          _this._textInfo.push(lineInfo);\n          //lineInfo.offsetY += lineInfo.ascent;\n          offsetY += lineInfo.height;\n          // Reset chunks so that it can proceed to the next line\n          chunks = leftoverChunks || [];\n        };\n        while (chunks.length > 0) {\n          _loop_1();\n        }\n      });\n      if (!styleRestored) {\n        context.restore();\n        ghostContext.restore();\n      }\n      // Adjust chunk internal offsets\n      $array.each(this._textInfo, function (lineInfo, _index) {\n        var currentChunkOffset = 0;\n        $array.each(lineInfo.textChunks, function (chunk) {\n          chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n          chunk.offsetY += lineInfo.height - lineInfo.height * (_this.style.baselineRatio || 0.19);\n          currentChunkOffset += chunk.width;\n          if (chunk.verticalAlign) {\n            switch (chunk.verticalAlign) {\n              case \"super\":\n                chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\n                break;\n              case \"sub\":\n                chunk.offsetY += chunk.height / 2;\n                break;\n            }\n          }\n        });\n      });\n      var bounds = {\n        left: rtl ? -maxX : -minX,\n        top: 0,\n        right: rtl ? minX : maxX,\n        bottom: offsetY\n      };\n      // We need to fit?\n      if (oversizedBehavior !== \"none\") {\n        var ratio = this._fitRatio(bounds);\n        if (ratio < 1) {\n          if (oversizedBehavior == \"fit\") {\n            if ($type.isNumber(this.style.minScale) && ratio < this.style.minScale) {\n              this._textVisible = false;\n            } else {\n              if (!this._originalScale || this._originalScale == 1) {\n                this._originalScale = this.scale;\n              }\n              this.scale = ratio;\n              this._textVisible = true;\n            }\n          } else if (oversizedBehavior == \"hide\") {\n            this._textVisible = false;\n          } else {\n            switch (this.style.textAlign) {\n              case \"right\":\n              case \"end\":\n                bounds.left = -maxWidth;\n                bounds.right = 0;\n                break;\n              case \"center\":\n                bounds.left = -maxWidth / 2;\n                bounds.right = maxWidth / 2;\n                break;\n              default:\n                bounds.left = 0;\n                bounds.right = maxWidth;\n            }\n            this.scale = this._originalScale || 1;\n            this._originalScale = undefined;\n            this._textVisible = true;\n          }\n        } else {\n          this.scale = this._originalScale || 1;\n          this._originalScale = undefined;\n          this._textVisible = true;\n        }\n      }\n      context.restore();\n      ghostContext.restore();\n      return bounds;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_fitRatio\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var maxW = this.style.maxWidth;\n      var maxH = this.style.maxHeight;\n      if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n        return 1;\n      }\n      var w = bounds.right - bounds.left;\n      var h = bounds.bottom - bounds.top;\n      return Math.min(maxW / w || 1, maxH / h || 1);\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_truncateText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, text, maxWidth, breakWords, fallbackBreakWords) {\n      if (breakWords === void 0) {\n        breakWords = false;\n      }\n      if (fallbackBreakWords === void 0) {\n        fallbackBreakWords = true;\n      }\n      var width;\n      do {\n        if (breakWords) {\n          text = text.slice(0, -1);\n        } else {\n          var tmp = text.replace(/[^,;:!?\\\\\\/\\s]+[,;:!?\\\\\\/\\s]*$/g, \"\");\n          if (tmp == \"\" && fallbackBreakWords) {\n            breakWords = true;\n          } else if (tmp == \"\") {\n            return text;\n          } else {\n            text = tmp;\n          }\n        }\n        var metrics = this._measureText(text, context);\n        width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n      } while (width > maxWidth && text != \"\");\n      return text;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_measureText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, context) {\n      var metrics = context.measureText(text);\n      var fakeMetrics = {};\n      if (metrics.actualBoundingBoxAscent == null) {\n        var div = document.createElement(\"div\");\n        div.innerText = text;\n        div.style.visibility = \"hidden\";\n        div.style.position = \"absolute\";\n        div.style.top = \"-1000000px;\";\n        div.style.fontFamily = this.style.fontFamily || \"\";\n        div.style.fontSize = this.style.fontSize + \"\";\n        document.body.appendChild(div);\n        var bbox = div.getBoundingClientRect();\n        document.body.removeChild(div);\n        var h = bbox.height;\n        var w_1 = metrics.width;\n        var left = 0;\n        var right = w_1;\n        fakeMetrics = {\n          actualBoundingBoxAscent: h,\n          actualBoundingBoxDescent: 0,\n          actualBoundingBoxLeft: left,\n          actualBoundingBoxRight: right,\n          fontBoundingBoxAscent: h,\n          fontBoundingBoxDescent: 0,\n          width: w_1\n        };\n        //return fake;\n      } else {\n        fakeMetrics = {\n          actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n          actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n          actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n          actualBoundingBoxRight: metrics.actualBoundingBoxRight,\n          fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n          fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n          width: metrics.width\n        };\n      }\n      var w = metrics.width;\n      switch (this.style.textAlign) {\n        case \"right\":\n        case \"end\":\n          fakeMetrics.actualBoundingBoxLeft = w;\n          fakeMetrics.actualBoundingBoxRight = 0;\n          break;\n        case \"center\":\n          fakeMetrics.actualBoundingBoxLeft = w / 2;\n          fakeMetrics.actualBoundingBoxRight = w / 2;\n          break;\n        default:\n          fakeMetrics.actualBoundingBoxLeft = 0;\n          fakeMetrics.actualBoundingBoxRight = w;\n      }\n      return fakeMetrics;\n    }\n  });\n  return CanvasText;\n}(CanvasDisplayObject);\nexport { CanvasText };\n/**\r\n * @ignore\r\n */\nvar CanvasTextStyle = /** @class */function () {\n  function CanvasTextStyle() {\n    //public wordWrapWidth: number = 100;\n    Object.defineProperty(this, \"fill\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fillOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textAlign\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontFamily\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontWeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontVariant\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textDecoration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // leading?: number;\n    // letterSpacing?: number;\n    Object.defineProperty(this, \"lineHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: percent(120)\n    });\n    Object.defineProperty(this, \"baselineRatio\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0.19\n    });\n    // padding?: number;\n    // stroke?: number;\n    // strokeThickness?: number;\n    // trim?: number;\n    // wordWrap?: boolean;\n    Object.defineProperty(this, \"direction\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textBaseline\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"oversizedBehavior\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"none\"\n    });\n    Object.defineProperty(this, \"breakWords\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ellipsis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"…\"\n    });\n    Object.defineProperty(this, \"maxWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"maxHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"minScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ignoreFormatting\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  return CanvasTextStyle;\n}();\nexport { CanvasTextStyle };\n/**\r\n * @ignore\r\n */\nvar CanvasRadialText = /** @class */function (_super) {\n  __extends(CanvasRadialText, _super);\n  function CanvasRadialText() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"textType\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"circular\"\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"inside\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"orientation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"auto\"\n    });\n    Object.defineProperty(_this, \"kerning\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_textReversed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n  Object.defineProperty(CanvasRadialText.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      switch (this.textType) {\n        case \"circular\":\n          this._renderCircular(parentLayer);\n          break;\n        default:\n          _super.prototype._render.call(this, parentLayer);\n          break;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_renderCircular\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      if (this._textVisible) {\n        var layer = this._layer || parentLayer;\n        this._prerender(layer);\n        var interactive_2 = this._isInteractive();\n        var context_3 = layer.context;\n        var layerDirty_2 = layer.dirty;\n        var ghostContext_3 = this._renderer._ghostContext;\n        // Savepoint\n        context_3.save();\n        if (interactive_2) {\n          ghostContext_3.save();\n        }\n        // Init\n        var radius_1 = this.radius || 0;\n        var startAngle_1 = this.startAngle || 0;\n        var deltaAngle_1 = 0;\n        var orientation_1 = this.orientation;\n        var inward_1 = orientation_1 == \"auto\" ? \"auto\" : orientation_1 == \"inward\";\n        var inside_1 = this.inside;\n        var align_1 = this.style.textAlign || \"left\";\n        var kerning_1 = this.kerning || 0;\n        var clockwise_1 = align_1 == \"left\" ? 1 : -1;\n        var shouldReverse_1 = !this._textReversed;\n        // We need measurements in order to properly position text for alignment\n        if (!this._textInfo) {\n          this._measure(layer);\n        }\n        // Check if we need to invert the whole stuff\n        if (inward_1 == \"auto\") {\n          // Calc max angle so we know whether we need to flip it\n          var maxAngle_1 = 0;\n          var midAngle = 0;\n          $array.each(this._textInfo, function (line, _index) {\n            var deltaAngle = startAngle_1 + line.width / (radius_1 - line.height) / 2 * -clockwise_1;\n            if (deltaAngle > maxAngle_1) {\n              maxAngle_1 = deltaAngle;\n            }\n          });\n          if (align_1 == \"left\") {\n            midAngle = (maxAngle_1 + deltaAngle_1 / 2) * $math.DEGREES;\n          } else if (align_1 == \"right\") {\n            midAngle = (maxAngle_1 - deltaAngle_1 / 2) * $math.DEGREES;\n          } else {\n            midAngle = startAngle_1 * $math.DEGREES;\n          }\n          midAngle = $math.normalizeAngle(midAngle);\n          inward_1 = midAngle >= 270 || midAngle <= 90;\n        }\n        if (inward_1 == true && shouldReverse_1) {\n          this._textInfo.reverse();\n          this._textReversed = true;\n        }\n        // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n        // \tclockwise *= -1;\n        // }\n        // Process text info produced by _measure()\n        $array.each(this._textInfo, function (line, _index) {\n          var textHeight = line.height;\n          // Adjust radius (for `inside = false`)\n          // Radius adjustment for `inside = false` is below the line calculation\n          if (!inside_1) {\n            radius_1 += textHeight;\n          }\n          // Reverse letters if we're painting them counter-clockwise\n          if ((clockwise_1 == -1 && inward_1 || clockwise_1 == 1 && !inward_1) && shouldReverse_1) {\n            line.textChunks.reverse();\n          }\n          // Init angles\n          var lineStartAngle = startAngle_1;\n          deltaAngle_1 = 0;\n          // Adjust for center-align\n          if (align_1 == \"center\") {\n            lineStartAngle += line.width / (radius_1 - textHeight) / 2 * -clockwise_1;\n            deltaAngle_1 = lineStartAngle - startAngle_1;\n          }\n          // if (inward == \"auto\") {\n          // \tlet midAngle;\n          // \tif (align == \"left\") {\n          // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n          // \t}\n          // \telse if () {\n          // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n          // \t}\n          // \tinward = (midAngle >= 270) || (midAngle <= 90);\n          // }\n          // Rotate letters if they are facing outward\n          lineStartAngle += Math.PI * (inward_1 ? 0 : 1); // Rotate 180 if outward\n          // Savepoint\n          context_3.save();\n          if (interactive_2) {\n            ghostContext_3.save();\n          }\n          // Assume starting angle\n          context_3.rotate(lineStartAngle);\n          if (interactive_2) {\n            ghostContext_3.rotate(lineStartAngle);\n          }\n          var angleShift = 0;\n          $array.each(line.textChunks, function (chunk, _index) {\n            // Draw the letter\n            var char = chunk.text;\n            var charWidth = chunk.width;\n            // Rotate half a letter\n            angleShift = charWidth / 2 / (radius_1 - textHeight) * clockwise_1;\n            context_3.rotate(angleShift);\n            if (interactive_2) {\n              ghostContext_3.rotate(angleShift);\n            }\n            // Set style\n            if (chunk.style) {\n              context_3.save();\n              ghostContext_3.save();\n              context_3.font = chunk.style;\n              if (interactive_2) {\n                ghostContext_3.font = chunk.style;\n              }\n            }\n            if (chunk.fill) {\n              context_3.save();\n              context_3.fillStyle = chunk.fill.toCSS();\n              // Color does not affect ghostContext so we not set it\n            }\n            // Center letters\n            context_3.textBaseline = \"middle\";\n            context_3.textAlign = \"center\";\n            if (interactive_2) {\n              ghostContext_3.textBaseline = \"middle\";\n              ghostContext_3.textAlign = \"center\";\n            }\n            // Plop the letter\n            if (layerDirty_2) {\n              context_3.fillText(char, 0, (inward_1 ? 1 : -1) * (0 - radius_1 + textHeight / 2));\n            }\n            if (interactive_2) {\n              ghostContext_3.fillText(char, 0, (inward_1 ? 1 : -1) * (0 - radius_1 + textHeight / 2));\n            }\n            if (chunk.fill) {\n              context_3.restore();\n              // Color does not affect ghostContext so we not set it\n            }\n            // Reset style\n            if (chunk.style) {\n              context_3.restore();\n              ghostContext_3.restore();\n            }\n            // Rotate half a letter and add spacing\n            angleShift = (charWidth / 2 + kerning_1) / (radius_1 - textHeight) * clockwise_1;\n            context_3.rotate(angleShift);\n            if (interactive_2) {\n              ghostContext_3.rotate(angleShift);\n            }\n          });\n          // Restore angle\n          context_3.restore();\n          if (interactive_2) {\n            ghostContext_3.restore();\n          }\n          // Adjust radius (for `inside = true`)\n          if (inside_1) {\n            radius_1 -= textHeight;\n          }\n        });\n        // Restore\n        context_3.restore();\n        if (interactive_2) {\n          ghostContext_3.restore();\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_measure\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      switch (this.textType) {\n        case \"circular\":\n          return this._measureCircular(layer);\n        default:\n          return _super.prototype._measure.call(this, layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_measureCircular\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      var _this = this;\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext;\n      var rtl = this.style.direction == \"rtl\";\n      var oversizedBehavior = this.style.oversizedBehavior;\n      var maxWidth = this.style.maxWidth;\n      var truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n      var ellipsis = this.style.ellipsis || \"\";\n      var ellipsisMetrics;\n      //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n      // Reset text info\n      this._textVisible = true;\n      this._textInfo = [];\n      this._textReversed = false;\n      // Pre-render\n      context.save();\n      ghostContext.save();\n      this._prerender(layer, true);\n      // Split up text into lines\n      var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n      var styleRestored = true;\n      var totalWidth = 0;\n      // Iterate through the lines\n      var offsetY = 0;\n      $array.each(lines, function (line, _index) {\n        // Split up line into format/value chunks\n        var chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting);\n        // Init line object\n        var lineInfo = {\n          offsetY: offsetY,\n          ascent: 0,\n          width: 0,\n          height: 0,\n          left: 0,\n          right: 0,\n          textChunks: []\n        };\n        var currentStyle;\n        var currentFill;\n        var currentChunkWidth;\n        //while(chunk = chunks.shift()) {\n        $array.each(chunks, function (chunk, _index) {\n          // Format chunk\n          if (chunk.type == \"format\") {\n            if (chunk.text == \"[/]\") {\n              if (!styleRestored) {\n                context.restore();\n                ghostContext.restore();\n                styleRestored = true;\n              }\n              currentFill = undefined;\n              currentStyle = undefined;\n              currentChunkWidth = undefined;\n            } else {\n              var format = TextFormatter.getTextStyle(chunk.text);\n              var fontStyle = _this._getFontStyle(format);\n              context.save();\n              ghostContext.save();\n              context.font = fontStyle;\n              currentStyle = fontStyle;\n              if (format.fill) {\n                currentFill = format.fill;\n              }\n              if (format.width) {\n                currentChunkWidth = $type.toNumber(format.width);\n              }\n              styleRestored = false;\n            }\n            if (truncate) {\n              ellipsisMetrics = _this._measureText(ellipsis, context);\n            }\n          }\n          // Text format\n          else if (chunk.type == \"value\") {\n            // Measure each letter\n            var chars = chunk.text.match(/./ug) || [];\n            if (rtl) {\n              chars.reverse();\n            }\n            for (var i = 0; i < chars.length; i++) {\n              var char = chars[i];\n              // Measure\n              var metrics = _this._measureText(char, context);\n              var chunkWidth = metrics.width;\n              // Chunk width?\n              if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n                chunkWidth = currentChunkWidth;\n              }\n              var chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n              if (chunkHeight > lineInfo.height) {\n                lineInfo.height = chunkHeight;\n              }\n              if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\n              }\n              lineInfo.width += chunkWidth;\n              lineInfo.left += metrics.actualBoundingBoxLeft;\n              lineInfo.right += metrics.actualBoundingBoxRight;\n              lineInfo.textChunks.push({\n                style: currentStyle,\n                fill: currentFill,\n                text: char,\n                width: chunkWidth,\n                height: chunkHeight + metrics.actualBoundingBoxDescent,\n                left: metrics.actualBoundingBoxLeft,\n                right: metrics.actualBoundingBoxRight,\n                ascent: metrics.actualBoundingBoxAscent,\n                offsetX: 0,\n                offsetY: chunkHeight,\n                textDecoration: undefined\n              });\n              totalWidth += chunkWidth;\n              // Handle oversized behavior\n              if (truncate) {\n                // Measure ellipsis and check if it fits\n                if (!ellipsisMetrics) {\n                  ellipsisMetrics = _this._measureText(ellipsis, context);\n                }\n                var ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n                totalWidth += ellipsisWidth;\n                if (totalWidth + ellipsisWidth > maxWidth) {\n                  if (lineInfo.textChunks.length == 1) {\n                    _this._textVisible = false;\n                  } else {\n                    lineInfo.width += ellipsisWidth;\n                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\n                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\n                    lineInfo.textChunks.push({\n                      style: currentStyle,\n                      fill: currentFill,\n                      text: ellipsis,\n                      width: ellipsisWidth,\n                      height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\n                      left: ellipsisMetrics.actualBoundingBoxLeft,\n                      right: ellipsisMetrics.actualBoundingBoxRight,\n                      ascent: ellipsisMetrics.actualBoundingBoxAscent,\n                      offsetX: 0,\n                      offsetY: chunkHeight,\n                      textDecoration: undefined\n                    });\n                  }\n                  break;\n                }\n              }\n              if (rtl) {\n                break;\n              }\n            }\n          }\n        });\n        if (_this.style.lineHeight instanceof Percent) {\n          lineInfo.height *= _this.style.lineHeight.value;\n        } else {\n          lineInfo.height *= _this.style.lineHeight || 1.2;\n        }\n        _this._textInfo.push(lineInfo);\n        //lineInfo.offsetY += lineInfo.ascent;\n        offsetY += lineInfo.height;\n      });\n      if (!styleRestored) {\n        context.restore();\n        ghostContext.restore();\n      }\n      if (oversizedBehavior == \"hide\" && totalWidth > maxWidth) {\n        this._textVisible = false;\n      }\n      // Adjust chunk internal offsets\n      $array.each(this._textInfo, function (lineInfo) {\n        $array.each(lineInfo.textChunks, function (chunk) {\n          chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n        });\n      });\n      context.restore();\n      ghostContext.restore();\n      return {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n    }\n  });\n  return CanvasRadialText;\n}(CanvasText);\nexport { CanvasRadialText };\n/**\r\n * @ignore\r\n */\nvar CanvasImage = /** @class */function (_super) {\n  __extends(CanvasImage, _super);\n  function CanvasImage(renderer, image) {\n    var _this = _super.call(this, renderer) || this;\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"image\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"tainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_imageMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    _this.image = image;\n    return _this;\n  }\n  Object.defineProperty(CanvasImage.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._dispose.call(this);\n      if (this._imageMask) {\n        clearCanvas(this._imageMask);\n      }\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"getLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._localBounds) {\n        var w = 0;\n        var h = 0;\n        if (this.width) {\n          w = this.width;\n        }\n        if (this.height) {\n          h = this.height;\n        }\n        this._localBounds = {\n          left: 0,\n          top: 0,\n          right: w,\n          bottom: h\n        };\n        this._addBounds(this._localBounds);\n      }\n      return this._localBounds;\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      _super.prototype._render.call(this, parentLayer);\n      if (this.image) {\n        var layer = this._layer || parentLayer;\n        if (this.tainted === undefined) {\n          this.tainted = isTainted(this.image);\n          layer.tainted = true;\n        }\n        if (this.tainted && this._renderer._omitTainted) {\n          return;\n        }\n        if (layer.dirty) {\n          if (this.shadowColor) {\n            layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n          }\n          if (this.shadowBlur) {\n            layer.context.shadowBlur = this.shadowBlur;\n          }\n          if (this.shadowOffsetX) {\n            layer.context.shadowOffsetX = this.shadowOffsetX;\n          }\n          if (this.shadowOffsetY) {\n            layer.context.shadowOffsetY = this.shadowOffsetY;\n          }\n          // TODO should this round ?\n          var width = this.width || this.image.naturalWidth;\n          var height = this.height || this.image.naturalHeight;\n          layer.context.drawImage(this.image, 0, 0, width, height);\n        }\n        if (this.interactive && this._isInteractive()) {\n          var mask = this._getMask(this.image);\n          this._renderer._ghostContext.drawImage(mask, 0, 0);\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.clear.call(this);\n      this.image = undefined;\n      this._imageMask = undefined;\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"_getMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (image) {\n      if (this._imageMask === undefined) {\n        // TODO should this round ?\n        var width = this.width || image.naturalWidth;\n        var height = this.height || image.naturalHeight;\n        // We need to create a second canvas because destination-in clears out the entire canvas\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = width;\n        canvas.height = height;\n        var context = canvas.getContext(\"2d\");\n        context.imageSmoothingEnabled = false;\n        context.fillStyle = this._getColorId();\n        context.fillRect(0, 0, width, height);\n        if (!isTainted(image)) {\n          context.globalCompositeOperation = \"destination-in\";\n          context.drawImage(image, 0, 0, width, height);\n        }\n        this._imageMask = canvas;\n      }\n      return this._imageMask;\n    }\n  });\n  return CanvasImage;\n}(CanvasDisplayObject);\nexport { CanvasImage };\n/**\r\n * @ignore\r\n */\nvar CanvasRendererEvent = /** @class */function () {\n  function CanvasRendererEvent(event, point, bbox) {\n    Object.defineProperty(this, \"event\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: event\n    });\n    Object.defineProperty(this, \"point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: point\n    });\n    Object.defineProperty(this, \"bbox\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: bbox\n    });\n    Object.defineProperty(this, \"id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"simulated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"native\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    if ($utils.supports(\"touchevents\") && event instanceof Touch) {\n      this.id = event.identifier;\n    } else {\n      this.id = null;\n    }\n  }\n  return CanvasRendererEvent;\n}();\nexport { CanvasRendererEvent };\n/**\r\n * @ignore\r\n */\nvar CanvasRenderer = /** @class */function (_super) {\n  __extends(CanvasRenderer, _super);\n  /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n      this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n  });\r\n  */\n  function CanvasRenderer(resolution) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(_this, \"_layerDom\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(_this, \"layers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_dirtyLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"defaultLayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.getLayer(0)\n    });\n    Object.defineProperty(_this, \"_ghostView\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_ghostContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_patternCanvas\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"canvas\")\n    });\n    Object.defineProperty(_this, \"_patternContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._patternCanvas.getContext(\"2d\")\n    });\n    Object.defineProperty(_this, \"_width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_clientWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_clientHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"interactionsEnabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_listeners\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_colorMap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_forceInteractive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_omitTainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // TODO this should store the Id as well\n    Object.defineProperty(_this, \"_hovering\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Set()\n    });\n    Object.defineProperty(_this, \"_dragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_mousedown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_lastPointerMoveEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"tapToActivate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"tapToActivateTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 3000\n    });\n    Object.defineProperty(_this, \"_touchActive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_touchActiveTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (resolution == null) {\n      _this.resolution = window.devicePixelRatio;\n    } else {\n      _this.resolution = resolution;\n    }\n    _this.view.style.position = \"absolute\";\n    _this.view.appendChild(_this._layerDom);\n    _this._disposers.push(new Disposer(function () {\n      $object.each(_this._events, function (_key, events) {\n        events.disposer.dispose();\n      });\n      $array.each(_this.layers, function (layer) {\n        clearCanvas(layer.view);\n        if (layer.exportableView) {\n          clearCanvas(layer.exportableView);\n        }\n      });\n      clearCanvas(_this._ghostView);\n      clearCanvas(_this._patternCanvas);\n    }));\n    // @todo : do the same for ghost\n    _this._ghostView = document.createElement(\"canvas\");\n    _this._ghostContext = _this._ghostView.getContext(\"2d\", {\n      alpha: false,\n      willReadFrequently: true\n    });\n    _this._ghostContext.imageSmoothingEnabled = false;\n    _this._ghostView.style.position = \"absolute\";\n    _this._ghostView.style.top = \"0px\";\n    _this._ghostView.style.left = \"0px\";\n    _this._disposers.push($utils.addEventListener(_this._ghostView, \"click\", function (originalEvent) {\n      var event = _this.getEvent(originalEvent);\n      var target = _this._getHitTarget(event.point, event.bbox);\n      console.debug(target);\n    }));\n    // Monitor for possible pixel ratio changes (when page is zoomed)\n    _this._disposers.push($utils.onZoom(function () {\n      if (resolution == null) {\n        _this.resolution = window.devicePixelRatio;\n      }\n    }));\n    // We need this in order top prevent default touch gestures when dragging\n    // draggable elements\n    if ($utils.supports(\"touchevents\")) {\n      var listener = function (ev) {\n        if (_this._dragging.length !== 0) {\n          $array.eachContinue(_this._dragging, function (item) {\n            if (item.value.shouldCancelTouch()) {\n              ev.preventDefault();\n              return false;\n            }\n            return true;\n          });\n        }\n        // If touch down happends, delay touch out\n        if (_this._touchActiveTimeout) {\n          _this._delayTouchDeactivate();\n        }\n      };\n      _this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, {\n        passive: false\n      }));\n      _this._disposers.push($utils.addEventListener(_this.view, \"touchstart\", listener, {\n        passive: false\n      }));\n      _this._disposers.push($utils.addEventListener(_this.view, \"touchmove\", function () {\n        // If touch is moving, delay touch out\n        if (_this._touchActiveTimeout) {\n          _this._delayTouchDeactivate();\n        }\n      }, {\n        passive: true\n      }));\n      _this._disposers.push($utils.addEventListener(window, \"click\", function (_ev) {\n        _this._touchActive = false;\n      }, {\n        passive: true\n      }));\n      _this._disposers.push($utils.addEventListener(_this.view, \"click\", function (_ev) {\n        window.setTimeout(function () {\n          _this._touchActive = true;\n          _this._delayTouchDeactivate();\n        }, 100);\n      }, {\n        passive: true\n      }));\n    }\n    // Prevent scrolling of the window when hovering on \"wheelable\" object\n    if ($utils.supports(\"wheelevents\")) {\n      _this._disposers.push($utils.addEventListener(_this.view, \"wheel\", function (ev) {\n        var prevent = false;\n        _this._hovering.forEach(function (obj) {\n          if (obj.wheelable) {\n            prevent = true;\n            return false;\n          }\n        });\n        if (prevent) {\n          ev.preventDefault();\n        }\n      }, {\n        passive: false\n      }));\n    }\n    return _this;\n  }\n  Object.defineProperty(CanvasRenderer.prototype, \"_delayTouchDeactivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      if (this._touchActiveTimeout) {\n        clearTimeout(this._touchActiveTimeout);\n      }\n      if (this.tapToActivateTimeout > 0) {\n        this._touchActiveTimeout = window.setTimeout(function () {\n          _this._touchActive = false;\n        }, this.tapToActivateTimeout);\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"debugGhostView\", {\n    get: function () {\n      return !!this._ghostView.parentNode;\n    },\n    set: function (value) {\n      if (value) {\n        if (!this._ghostView.parentNode) {\n          this.view.appendChild(this._ghostView);\n        }\n      } else {\n        if (this._ghostView.parentNode) {\n          this._ghostView.parentNode.removeChild(this._ghostView);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createLinearGradient\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, x2, y2) {\n      return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createRadialGradient\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, radius1, x2, y2, radius2) {\n      return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createPattern\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (graphics, background, repetition, width, height) {\n      // const patternCanvas = document.createElement(\"canvas\");\n      // const patternContext = patternCanvas.getContext(\"2d\")!;\n      // patternCanvas.width = width;\n      // patternCanvas.height = height;\n      // if (fill) {\n      // \tpatternContext.fillStyle = fill.toCSS();\n      // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n      // }\n      // const layer = {\n      // \tview: patternCanvas,\n      // \tcontext: patternContext,\n      // \tvisible: true,\n      // \torder: 0,\n      // \twidth: width,\n      // \theight: height,\n      // \tdirty: true\n      // };\n      // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n      // // patternContext.stroke();\n      // image.targetLayer = layer;\n      // image.render(layer);\n      //this._layerDom.appendChild(patternCanvas);\n      this._patternCanvas.width = width;\n      this._patternCanvas.height = height;\n      this._patternContext.clearRect(0, 0, width, height);\n      // patternCanvas.style.width = width * this.resolution + \"px\";\n      // patternCanvas.style.height = height * this.resolution + \"px\";\n      background.renderDetached(this._patternContext);\n      graphics.renderDetached(this._patternContext);\n      return this._patternContext.createPattern(this._patternCanvas, repetition);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasContainer(this);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasGraphics(this);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, style) {\n      return new CanvasText(this, text, style);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeTextStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasTextStyle();\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeRadialText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, style) {\n      return new CanvasRadialText(this, text, style);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makePicture\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (image) {\n      return new CanvasImage(this, image);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"resizeLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      layer.dirty = true;\n      layer.resize(this._clientWidth, this._clientHeight, this.resolution);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"resize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (width, height) {\n      var _this = this;\n      this._clientWidth = width;\n      this._clientHeight = height;\n      this._width = Math.floor(width * this.resolution);\n      this._height = Math.floor(height * this.resolution);\n      $array.each(this.layers, function (layer) {\n        if (layer) {\n          _this.resizeLayer(layer);\n        }\n      });\n      // @todo: do the same for ghost canvases\n      this._ghostView.width = this._width;\n      this._ghostView.height = this._height;\n      this._ghostView.style.width = width + \"px\";\n      this._ghostView.style.height = height + \"px\";\n      this.view.style.width = width + \"px\";\n      this.view.style.height = height + \"px\";\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createDetachedLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (willReadFrequently) {\n      if (willReadFrequently === void 0) {\n        willReadFrequently = false;\n      }\n      var view = document.createElement(\"canvas\");\n      var context = view.getContext(\"2d\", {\n        willReadFrequently: willReadFrequently\n      });\n      var layer = new CanvasLayer(view, context);\n      view.style.position = \"absolute\";\n      view.style.top = \"0px\";\n      view.style.left = \"0px\";\n      return layer;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getLayerByOrder\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order) {\n      var layers = this.layers;\n      var length = layers.length;\n      for (var i = 0; i < length; i++) {\n        var layer = layers[i];\n        if (layer.order == order) {\n          return layer;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order, visible) {\n      if (visible === void 0) {\n        visible = true;\n      }\n      var existingLayer = this.getLayerByOrder(order);\n      if (existingLayer) {\n        return existingLayer;\n      }\n      var layer = this.createDetachedLayer(order == 99);\n      layer.order = order;\n      layer.visible = visible;\n      if (layer.visible && this._width) {\n        layer.view.width = this._width;\n        layer.view.style.width = this._clientWidth + \"px\";\n        layer.view.height = this._height;\n        layer.view.style.height = this._clientHeight + \"px\";\n      }\n      var layers = this.layers;\n      layers.push(layer);\n      layers.sort(function (a, b) {\n        if (a.order > b.order) {\n          return 1;\n        } else if (a.order < b.order) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      var length = layers.length;\n      var layerIndex = $array.indexOf(layers, layer);\n      var next;\n      for (var i = layerIndex + 1; i < length; i++) {\n        if (layers[i].visible) {\n          next = layers[i];\n          break;\n        }\n      }\n      if (layer.visible) {\n        if (next === undefined) {\n          this._layerDom.appendChild(layer.view);\n        } else {\n          this._layerDom.insertBefore(layer.view, next.view);\n        }\n      }\n      return layer;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root) {\n      var _this = this;\n      this._dirtyLayers.length = 0;\n      $array.each(this.layers, function (layer) {\n        if (layer) {\n          if (layer.dirty && layer.visible) {\n            _this._dirtyLayers.push(layer);\n            layer.clear();\n          }\n        }\n      });\n      this._ghostContext.save();\n      //this._ghostContext.clearRect(0, 0, this._width, this._height);\n      //this._ghostContext.beginPath();\n      this._ghostContext.fillStyle = '#000';\n      this._ghostContext.fillRect(0, 0, this._width, this._height);\n      root.render(this.defaultLayer);\n      this._ghostContext.restore();\n      //setTimeout(() => {\n      // Remove this after the Chrome bug is fixed:\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\n      $array.each(this.layers, function (layer) {\n        if (layer) {\n          var context = layer.context;\n          context.beginPath();\n          context.moveTo(0, 0);\n          context.stroke();\n        }\n      });\n      $array.each(this._dirtyLayers, function (layer) {\n        layer.context.restore();\n        layer.dirty = false;\n      });\n      //}, 100)\n      if (this._hovering.size && this._lastPointerMoveEvent) {\n        //this._mouseMoveThrottler.run();\n        var native_1 = this._lastPointerMoveEvent.native;\n        $array.each(this._lastPointerMoveEvent.events, function (event) {\n          _this._dispatchGlobalMousemove(event, native_1);\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"paintId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (obj) {\n      var id = distributeId(++this._colorId);\n      var color = Color.fromHex(id).toCSS();\n      this._colorMap[color] = obj;\n      return color;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_removeObject\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (obj) {\n      if (obj._colorId !== undefined) {\n        delete this._colorMap[obj._colorId];\n      }\n    }\n  });\n  // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n  // \treturn this._colorMap[colorId];\n  // }\n  Object.defineProperty(CanvasRenderer.prototype, \"getEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent, adjustPoint) {\n      if (adjustPoint === void 0) {\n        adjustPoint = true;\n      }\n      var bbox = adjustPoint ? this.view.getBoundingClientRect() : new DOMRect(0, 0, 0, 0);\n      return new CanvasRendererEvent(originalEvent, originalEvent.clientX || originalEvent.clientY ? {\n        x: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\n        y: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0)\n      } : {\n        x: 0,\n        y: 0\n      }, bbox);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_getHitTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point, bbox) {\n      if (bbox.width === 0 || bbox.height === 0 || point.x < 0 || point.x > bbox.width || point.y < 0 || point.y > bbox.height) {\n        return;\n      } else {\n        var pixel = this._ghostContext.getImageData(\n        // TODO should this round ?\n        Math.round(point.x / bbox.width * this._width), Math.round(point.y / bbox.height * this._height), 1, 1);\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n          return false;\n        }\n        var colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n        var hit = this._colorMap[colorId];\n        return hit;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_withEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, f) {\n      var events = this._events[key];\n      if (events !== undefined) {\n        events.dispatching = true;\n        try {\n          f(events);\n        } finally {\n          events.dispatching = false;\n          if (events.cleanup) {\n            events.cleanup = false;\n            $array.keepIf(events.callbacks, function (callback) {\n              return !callback.disposed;\n            });\n            if (events.callbacks.length === 0) {\n              events.disposer.dispose();\n              delete this._events[key];\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEventAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, event) {\n      if (!this.interactionsEnabled) {\n        return;\n      }\n      this._withEvents(key, function (events) {\n        $array.each(events.callbacks, function (callback) {\n          if (!callback.disposed) {\n            callback.callback.call(callback.context, event);\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, target, event) {\n      if (!this.interactionsEnabled) {\n        return false;\n      }\n      var dispatched = false;\n      this._withEvents(key, function (events) {\n        $array.each(events.callbacks, function (callback) {\n          if (!callback.disposed && callback.object === target) {\n            callback.callback.call(callback.context, event);\n            dispatched = true;\n          }\n        });\n      });\n      return dispatched;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchMousedown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var button = originalEvent.button;\n      if (button != 0 && button != 2 && button != 1 && button !== undefined) {\n        // Ignore non-primary mouse buttons\n        return;\n      }\n      var event = this.getEvent(originalEvent);\n      var target = this._getHitTarget(event.point, event.bbox);\n      if (target) {\n        var id_1 = event.id;\n        var dragged_1 = false;\n        eachTargets(target, function (obj) {\n          var info = {\n            id: id_1,\n            value: obj\n          };\n          _this._mousedown.push(info);\n          if (!dragged_1 && _this._dispatchEvent(\"pointerdown\", obj, event)) {\n            // Only dispatch the first element which matches\n            dragged_1 = true;\n            var has = _this._dragging.some(function (x) {\n              return x.value === obj && x.id === id_1;\n            });\n            if (!has) {\n              _this._dragging.push(info);\n            }\n          }\n          return true;\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMousemove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent, native) {\n      var _this = this;\n      var event = this.getEvent(originalEvent);\n      var target = this._getHitTarget(event.point, event.bbox);\n      event.native = native;\n      if (target) {\n        this._hovering.forEach(function (obj) {\n          if (!obj.contains(target)) {\n            _this._hovering.delete(obj);\n            if (obj.cursorOverStyle) {\n              $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n            }\n            _this._dispatchEvent(\"pointerout\", obj, event);\n          }\n        });\n        if (event.native) {\n          eachTargets(target, function (obj) {\n            if (!_this._hovering.has(obj)) {\n              _this._hovering.add(obj);\n              if (obj.cursorOverStyle) {\n                obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n                $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n              }\n              _this._dispatchEvent(\"pointerover\", obj, event);\n            }\n            return true;\n          });\n        }\n        //} else if (target === false) {\n      } else {\n        this._hovering.forEach(function (obj) {\n          if (obj.cursorOverStyle) {\n            $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n          }\n          _this._dispatchEvent(\"pointerout\", obj, event);\n        });\n        this._hovering.clear();\n      }\n      this._dispatchEventAll(\"globalpointermove\", event);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMouseup\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent, native) {\n      var event = this.getEvent(originalEvent);\n      event.native = native;\n      //const target = this._getHitTarget(event.point);\n      this._dispatchEventAll(\"globalpointerup\", event);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      if (this._dragging.length !== 0) {\n        var event_1 = this.getEvent(originalEvent);\n        var id_2 = event_1.id;\n        this._dragging.forEach(function (obj) {\n          if (obj.id === id_2) {\n            _this._dispatchEvent(\"pointermove\", obj.value, event_1);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragEnd\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var button = originalEvent.button;\n      var clickevent;\n      if (button == 0 || button === undefined) {\n        clickevent = \"click\";\n      } else if (button == 2) {\n        clickevent = \"rightclick\";\n      } else if (button == 1) {\n        clickevent = \"middleclick\";\n      } else {\n        // Ignore non-primary mouse buttons\n        return;\n      }\n      var event = this.getEvent(originalEvent);\n      var id = event.id;\n      if (this._mousedown.length !== 0) {\n        var target_1 = this._getHitTarget(event.point, event.bbox);\n        if (target_1) {\n          this._mousedown.forEach(function (obj) {\n            if (obj.id === id && obj.value.contains(target_1)) {\n              _this._dispatchEvent(clickevent, obj.value, event);\n            }\n          });\n        }\n        this._mousedown.length = 0;\n      }\n      if (this._dragging.length !== 0) {\n        this._dragging.forEach(function (obj) {\n          if (obj.id === id) {\n            _this._dispatchEvent(\"pointerup\", obj.value, event);\n          }\n        });\n        this._dragging.length = 0;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDoubleClick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var event = this.getEvent(originalEvent);\n      var target = this._getHitTarget(event.point, event.bbox);\n      if (target) {\n        eachTargets(target, function (obj) {\n          if (_this._dispatchEvent(\"dblclick\", obj, event)) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchWheel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var event = this.getEvent(originalEvent);\n      var target = this._getHitTarget(event.point, event.bbox);\n      if (target) {\n        eachTargets(target, function (obj) {\n          if (_this._dispatchEvent(\"wheel\", obj, event)) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_makeSharedEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, f) {\n      var _this = this;\n      if (this._listeners[key] === undefined) {\n        var listener_1 = f();\n        this._listeners[key] = new CounterDisposer(function () {\n          delete _this._listeners[key];\n          listener_1.dispose();\n        });\n      }\n      return this._listeners[key].increment();\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_onPointerEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, f) {\n      var native = false;\n      var timer = null;\n      function clear() {\n        timer = null;\n        native = false;\n      }\n      return new MultiDisposer([new Disposer(function () {\n        if (timer !== null) {\n          clearTimeout(timer);\n        }\n        clear();\n      }), $utils.addEventListener(this.view, $utils.getRendererEvent(name), function (_) {\n        native = true;\n        if (timer !== null) {\n          clearTimeout(timer);\n        }\n        timer = window.setTimeout(clear, 0);\n      }), onPointerEvent(window, name, function (ev) {\n        if (timer !== null) {\n          clearTimeout(timer);\n          timer = null;\n        }\n        f(ev, native);\n        native = false;\n      })]);\n    }\n  });\n  // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n  Object.defineProperty(CanvasRenderer.prototype, \"_initEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var _this = this;\n      switch (key) {\n        case \"globalpointermove\":\n        case \"pointerover\":\n        case \"pointerout\":\n          return this._makeSharedEvent(\"pointermove\", function () {\n            var listener = function (events, native) {\n              _this._lastPointerMoveEvent = {\n                events: events,\n                native: native\n              };\n              $array.each(events, function (event) {\n                _this._dispatchGlobalMousemove(event, native);\n              });\n            };\n            return new MultiDisposer([_this._onPointerEvent(\"pointerdown\", listener), _this._onPointerEvent(\"pointermove\", listener)]);\n          });\n        case \"globalpointerup\":\n          return this._makeSharedEvent(\"pointerup\", function () {\n            var mouseup = _this._onPointerEvent(\"pointerup\", function (events, native) {\n              $array.each(events, function (event) {\n                _this._dispatchGlobalMouseup(event, native);\n              });\n              _this._lastPointerMoveEvent = {\n                events: events,\n                native: native\n              };\n            });\n            var pointercancel = _this._onPointerEvent(\"pointercancel\", function (events, native) {\n              $array.each(events, function (event) {\n                _this._dispatchGlobalMouseup(event, native);\n              });\n              _this._lastPointerMoveEvent = {\n                events: events,\n                native: native\n              };\n            });\n            return new Disposer(function () {\n              mouseup.dispose();\n              pointercancel.dispose();\n            });\n          });\n        case \"click\":\n        case \"rightclick\":\n        case \"middleclick\":\n        case \"pointerdown\":\n        /*\r\n            return this._makeSharedEvent(\"pointerdown\", () => {\r\n                return this._onPointerEvent(\"pointerdown\", (event, native) => {\r\n                    this._lastPointerMoveEvent = { event, native };\r\n                    this._dispatchMousedown(event)\r\n                });\r\n            });\r\n        */\n        case \"pointermove\":\n        case \"pointerup\":\n          return this._makeSharedEvent(\"pointerdown\", function () {\n            //const throttler = new Throttler();\n            var mousedown = onPointerEvent(_this.view, \"pointerdown\", function (events) {\n              $array.each(events, function (ev) {\n                _this._dispatchMousedown(ev);\n              });\n            });\n            // TODO handle throttling properly for multitouch\n            var mousemove = _this._onPointerEvent(\"pointermove\", function (ev) {\n              //throttler.throttle(() => {\n              $array.each(ev, function (ev) {\n                _this._dispatchDragMove(ev);\n              });\n              //});\n            });\n\n            var mouseup = _this._onPointerEvent(\"pointerup\", function (ev) {\n              $array.each(ev, function (ev) {\n                _this._dispatchDragEnd(ev);\n              });\n            });\n            var pointercancel = _this._onPointerEvent(\"pointercancel\", function (ev) {\n              $array.each(ev, function (ev) {\n                _this._dispatchDragEnd(ev);\n              });\n            });\n            return new Disposer(function () {\n              mousedown.dispose();\n              mousemove.dispose();\n              mouseup.dispose();\n              pointercancel.dispose();\n            });\n          });\n        case \"dblclick\":\n          return this._makeSharedEvent(\"dblclick\", function () {\n            return _this._onPointerEvent(\"dblclick\", function (ev) {\n              $array.each(ev, function (ev) {\n                _this._dispatchDoubleClick(ev);\n              });\n            });\n          });\n        case \"wheel\":\n          return this._makeSharedEvent(\"wheel\", function () {\n            return $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), function (event) {\n              _this._dispatchWheel(event);\n            }, {\n              passive: false\n            });\n          });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_addEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (object, key, callback, context) {\n      var _this = this;\n      var events = this._events[key];\n      if (events === undefined) {\n        events = this._events[key] = {\n          disposer: this._initEvent(key),\n          callbacks: [],\n          dispatching: false,\n          cleanup: false\n        };\n      }\n      var listener = {\n        object: object,\n        context: context,\n        callback: callback,\n        disposed: false\n      };\n      events.callbacks.push(listener);\n      return new Disposer(function () {\n        listener.disposed = true;\n        if (events.dispatching) {\n          events.cleanup = true;\n        } else {\n          $array.removeFirst(events.callbacks, listener);\n          if (events.callbacks.length === 0) {\n            events.disposer.dispose();\n            delete _this._events[key];\n          }\n        }\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getCanvas\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root, options) {\n      var _this = this;\n      // Make sure everything is rendered\n      this.render(root);\n      if (!options) {\n        options = {};\n      }\n      var scale = this.resolution;\n      // Check if we need to scale\n      if (options.minWidth && options.minWidth > this._width) {\n        var minScale = options.minWidth / this._width;\n        if (minScale > scale) {\n          scale = minScale * this.resolution;\n        }\n      }\n      if (options.minHeight && options.minHeight > this._height) {\n        var minScale = options.minHeight / this._height;\n        if (minScale > scale) {\n          scale = minScale * this.resolution;\n        }\n      }\n      if (options.maxWidth && options.maxWidth < this._width) {\n        var maxScale = options.maxWidth / this._width;\n        if (maxScale < scale) {\n          scale = maxScale * this.resolution;\n        }\n      }\n      if (options.maxHeight && options.maxHeight > this._height) {\n        var maxScale = options.maxHeight / this._height;\n        if (maxScale < scale) {\n          scale = maxScale * this.resolution;\n        }\n      }\n      // Check if we need to compensate for pixel ratio\n      if (options.maintainPixelRatio) {\n        scale /= this.resolution;\n      }\n      // Init list canvases to remove from DOM after export\n      var canvases = [];\n      // Set up new canvas for export\n      var forceRender = false;\n      var canvasWidth = this._width;\n      var canvasHeight = this._height;\n      var canvas = document.createElement(\"canvas\");\n      if (scale != this.resolution) {\n        forceRender = true;\n        canvasWidth = this._width * scale / this.resolution;\n        canvasHeight = this._height * scale / this.resolution;\n      }\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      // Add to DOM so it inherits CSS\n      canvas.style.position = \"fixed\";\n      canvas.style.top = \"-10000px\";\n      this.view.appendChild(canvas);\n      canvases.push(canvas);\n      // Context\n      var context = canvas.getContext(\"2d\");\n      var width = 0;\n      var height = 0;\n      var needRerender = false;\n      $array.each(this.layers, function (layer) {\n        if (layer && layer.visible) {\n          if (layer.tainted || forceRender) {\n            needRerender = true;\n            layer.exportableView = layer.view;\n            layer.exportableContext = layer.context;\n            layer.view = document.createElement(\"canvas\");\n            // Add to DOM so it inherits CSS\n            layer.view.style.position = \"fixed\";\n            layer.view.style.top = \"-10000px\";\n            _this.view.appendChild(layer.view);\n            canvases.push(layer.view);\n            layer.view.width = canvasWidth;\n            layer.view.height = canvasHeight;\n            layer.context = layer.view.getContext(\"2d\");\n            layer.dirty = true;\n            layer.scale = scale;\n          }\n        }\n      });\n      if (needRerender) {\n        this._omitTainted = true;\n        this.render(root);\n        this._omitTainted = false;\n      }\n      $array.each(this.layers, function (layer) {\n        if (layer && layer.visible) {\n          // Layer is fine. Just plop it into our target canvas\n          context.drawImage(layer.view, 0, 0);\n          // Restore layer original canvas\n          if (layer.exportableView) {\n            layer.view = layer.exportableView;\n            layer.exportableView = undefined;\n          }\n          if (layer.exportableContext) {\n            layer.context = layer.exportableContext;\n            layer.exportableContext = undefined;\n          }\n          if (width < layer.view.clientWidth) {\n            width = layer.view.clientWidth;\n          }\n          if (height < layer.view.clientHeight) {\n            height = layer.view.clientHeight;\n          }\n          layer.scale = undefined;\n        }\n      });\n      canvas.style.width = width + \"px\";\n      canvas.style.height = height + \"px\";\n      $array.each(canvases, function (canvas) {\n        canvas.style.position = \"\";\n        canvas.style.top = \"\";\n        _this.view.removeChild(canvas);\n      });\n      return canvas;\n    }\n  });\n  return CanvasRenderer;\n}(ArrayDisposer);\nexport { CanvasRenderer };\n/**\r\n * @ignore\r\n */\nvar CanvasLayer = /** @class */function () {\n  function CanvasLayer(view, context) {\n    Object.defineProperty(this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"margin\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"order\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"visible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"scale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"dirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"exportableView\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"exportableContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    this.view = view;\n    this.context = context;\n  }\n  Object.defineProperty(CanvasLayer.prototype, \"resize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (width, height, resolution) {\n      if (this.width != null) {\n        width = this.width;\n      }\n      if (this.height != null) {\n        height = this.height;\n      }\n      if (this.margin) {\n        width += this.margin.left + this.margin.right;\n        height += this.margin.top + this.margin.bottom;\n        this.view.style.left = -this.margin.left + \"px\";\n        this.view.style.top = -this.margin.top + \"px\";\n      } else {\n        this.view.style.left = \"0px\";\n        this.view.style.top = \"0px\";\n      }\n      this._width = Math.floor(width * resolution);\n      this._height = Math.floor(height * resolution);\n      this.view.width = this._width;\n      this.view.style.width = width + \"px\";\n      this.view.height = this._height;\n      this.view.style.height = height + \"px\";\n    }\n  });\n  Object.defineProperty(CanvasLayer.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.context.save();\n      this.context.clearRect(0, 0, this._width, this._height);\n    }\n  });\n  return CanvasLayer;\n}();\nexport { CanvasLayer };","map":{"version":3,"mappings":"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","names":["BlendMode","Color","Matrix","Percent","percent","ArrayDisposer","Disposer","DisposerClass","CounterDisposer","MultiDisposer","TextFormatter","$utils","$array","$object","$type","$math","arcToBezier","checkArgs","name","actual","expected","Error","checkMinArgs","checkEvenArgs","splitArcFlags","args","i","length","index","flag","a","exec","splice","assertBinary","value","distributeId","id","rgb","eachTargets","hitTarget","f","interactive","_parent","onPointerEvent","element","addEventListener","getRendererEvent","event","touches","changedTouches","copy","isTainted","image","canvas","document","createElement","width","height","context","getContext","willReadFrequently","drawImage","getImageData","err","console","warn","src","clearCanvas","view","style","Object","CanvasPivot","_x","_y","__extends","renderer","_super","_this","_renderer","_removeObject","getLayer","self","_layer","defaultLayer","order","margin","undefined","visible","setInteractive","registerChildLayer","resizeLayer","dirty","invalidateBounds","_localBounds","_bounds","_colorId","paintId","inactive","_forceInteractive","_isInteractive","child","point","_matrix","apply","applyInverse","_uMatrix","setTransform","pivot","x","y","angle","Math","PI","scale","bn","left","top","right","bottom","_addBounds","bounds","_setMatrix","matrix","getLocalMatrix","p0","p1","p2","p3","min","max","key","callback","_addEvent","_localMatrix","copyFrom","prepend","resolution","m","b","c","d","tx","ty","layer","_transformMargin","_transform","parentLayer","exportable","_omitTainted","resolution_1","layers","ghostContext","_ghostContext","mask_1","mask","each","save","_transformLayer","_runPath","clip","globalAlpha","compoundAlpha","alpha","filter","_isInteractiveMask","_render","restore","tainted","_hovering","has","_dragging","some","tapToActivate","_touchActive","cancelTouch","shouldCancelTouch","interactiveChildren","_children","push","removeFirst","render","_childLayers","pushOne","deep","markDirtyLayer","dispose","CanvasDisplayObject","setPoint","_context","_forceColor","color","forceColor","fillStyle","Op","clearShadow","fill","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","stroke","lineJoin","strokeStyle","lineWidth","dash","setLineDash","dashOffset","lineDashOffset","rect","l","t","r","radius","moveTo","arc","radiusX","radiusY","ellipse","cx","cy","startAngle","endAngle","anticlockwise","arcBounds","getArcBounds","DEGREES","x1","y1","x2","y2","arcTo","lineTo","closePath","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","quadraticCurveTo","blur","offsetX","offsetY","opacity","NORMAL","clear","_operations","op","_fillAlpha","_pushOp","BeginFill","toCSS","isMeasured","EndFill","_hasShadows","EndStroke","_strokeAlpha","LineStyle","LineDash","LineDashOffset","DrawRect","DrawCircle","DrawEllipse","Arc","ArcTo","LineTo","MoveTo","BezierCurveTo","QuadraticCurveTo","ClosePath","Shadow","GraphicsImage","path","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","match","name_1","rest","relative","bs","px","py","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","beginPath","layerDirty","context_1","ghostContext_1","globalCompositeOperation","blendMode","color_1","_getColorId","colorize","addBounds","text","_textInfo","textAlign","direction","textBaseline","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","fillOpacity","shadowOpacity","_shared","style2","fontVariant","fontWeight","fontSize","isNumber","fontFamily","join","_measure","_textVisible","interactive_1","context_2","layerDirty_1","ghostContext_2","_prerender","line","_index","textChunks","chunk","fillText","textDecoration","thickness","offset","format","getTextStyle","test","navigator","vendor","rtl","oversizedBehavior","maxWidth","truncate","wrap","_ignoreFontWeight","refText","lines","toString","replace","split","styleRestored","minX","maxX","currentStyle","chunks","type","ignoreFormatting","lineInfo","ascent","metrics","_measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","currentFormat","currentDecoration","currentFill","currentChunkWidth","skipFurtherText","firstTextChunk","leftoverChunks","currentVerticalAlign","eachContinue","toNumber","verticalAlign","metrics_1","height_1","metrics_2","chunkWidth","actualBoundingBoxLeft","actualBoundingBoxRight","breakWords","ellipsis","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","slice","trim","unshift","substr","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","ratio","_fitRatio","minScale","_originalScale","maxW","maxH","maxHeight","w","h","fallbackBreakWords","tmp","measureText","fakeMetrics","div","innerText","visibility","position","body","appendChild","bbox","getBoundingClientRect","removeChild","w_1","fontBoundingBoxAscent","fontBoundingBoxDescent","textType","_renderCircular","interactive_2","context_3","layerDirty_2","ghostContext_3","radius_1","startAngle_1","deltaAngle_1","orientation_1","orientation","inward_1","inside_1","inside","align_1","kerning_1","kerning","clockwise_1","shouldReverse_1","_textReversed","maxAngle_1","midAngle","deltaAngle","normalizeAngle","reverse","textHeight","lineStartAngle","rotate","angleShift","char","charWidth","_measureCircular","totalWidth","chars","round","CanvasText","_dispose","_imageMask","naturalWidth","naturalHeight","_getMask","imageSmoothingEnabled","fillRect","supports","Touch","identifier","_patternCanvas","Set","window","devicePixelRatio","_layerDom","_disposers","_events","_key","events","disposer","exportableView","_ghostView","originalEvent","getEvent","target","_getHitTarget","debug","onZoom","listener","ev","item","preventDefault","_touchActiveTimeout","_delayTouchDeactivate","passive","_ev","setTimeout","prevent","forEach","obj","wheelable","clearTimeout","tapToActivateTimeout","CanvasRenderer","parentNode","createLinearGradient","radius1","radius2","createRadialGradient","graphics","background","repetition","_patternContext","clearRect","renderDetached","createPattern","CanvasContainer","CanvasGraphics","CanvasTextStyle","CanvasRadialText","CanvasImage","resize","_clientWidth","_clientHeight","_width","floor","_height","CanvasLayer","existingLayer","getLayerByOrder","createDetachedLayer","sort","layerIndex","indexOf","next","insertBefore","root","_dirtyLayers","size","_lastPointerMoveEvent","native_1","native","_dispatchGlobalMousemove","fromHex","_colorMap","adjustPoint","DOMRect","CanvasRendererEvent","clientX","clientY","pixel","data","colorId","fromRGB","hit","dispatching","cleanup","keepIf","callbacks","disposed","interactionsEnabled","_withEvents","call","dispatched","object","button","id_1","dragged_1","info","_mousedown","_dispatchEvent","contains","delete","cursorOverStyle","setStyle","_replacedCursorStyle","add","getStyle","_dispatchEventAll","event_1","id_2","clickevent","target_1","_listeners","listener_1","increment","timer","_","_makeSharedEvent","_onPointerEvent","mouseup","_dispatchGlobalMouseup","pointercancel","mousedown","_dispatchMousedown","mousemove","_dispatchDragMove","_dispatchDragEnd","_dispatchDoubleClick","_dispatchWheel","_initEvent","options","minWidth","minHeight","maxScale","maintainPixelRatio","canvases","forceRender","canvasWidth","canvasHeight","needRerender","exportableContext","clientWidth","clientHeight"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\render\\backend\\CanvasRenderer.ts"],"sourcesContent":["/** @ignore *//** */\n\nimport {\n\tIRenderer, IContainer, IDisplayObject, IGraphics, IRendererEvents, IMargin,\n\tIText, ITextStyle, IRadialText, IPicture, IRendererEvent, ILayer, ICanvasOptions, BlendMode, IPointerEvent, Id\n} from \"./Renderer\";\nimport type { IBounds } from \"../../util/IBounds\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\n//import { Throttler } from \"../../util/Throttler\";\nimport { ArrayDisposer, Disposer, DisposerClass, IDisposer, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\nimport { TextFormatter, ITextChunk } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $object from \"../../util/Object\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n\n\n/**\n * @ignore\n */\nfunction checkArgs(name: string, actual: number, expected: number) {\n\tif (actual !== expected) {\n\t\tthrow new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkMinArgs(name: string, actual: number, expected: number) {\n\tif (actual < expected) {\n\t\tthrow new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkEvenArgs(name: string, actual: number, expected: number) {\n\tcheckMinArgs(name, actual, expected);\n\n\tif ((actual % expected) !== 0) {\n\t\tthrow new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n\t}\n}\n\n/**\n * @ignore\n * This splits the flag so that way 0017 will be processed as 0 0 17\n *\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\n */\nfunction splitArcFlags(args: Array<string>) {\n\tfor (let i = 0; i < args.length; i += 7) {\n\t\tlet index = i + 3;\n\t\tlet flag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])([01])(.*)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs.splice(index, 0, a[2]);\n\t\t\t\t++index;\n\n\t\t\t\tif (a[3].length > 0) {\n\t\t\t\t\targs[index] = a[3];\n\n\t\t\t\t} else {\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++index;\n\n\t\tflag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])(.+)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs[index] = a[2];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction assertBinary(value: number): 0 | 1 {\n\tif (value === 0 || value === 1) {\n\t\treturn value;\n\n\t} else {\n\t\tthrow new Error(\"Flag must be 0 or 1\");\n\t}\n}\n\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n// function distributeIdBAK(id: number): number {\n// \tif (id === 1) {\n// \t\treturn 0x000001;\n\n// \t} else {\n// \t\t// Finds the closest power of 2\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n\n// \t\t// Translates the id into an odd fraction index\n// \t\tconst index = ((base - id) * 2) + 1;\n\n// \t\t// TODO is Math.round correct ?\n// \t\treturn Math.round(0xffffff * (index / base));\n// \t}\n// }\n\n/**\n * Function by smeans:\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\n * @ignore\n */\nfunction distributeId(id: number): number {\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 24; i++) {\n\t\trgb[i % 3] <<= 1;\n\t\trgb[i % 3] |= id & 0x01;\n\t\tid >>= 1;\n\t}\n\treturn (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\n}\n\n/**\n * @ignore\n */\nfunction eachTargets(hitTarget: CanvasDisplayObject, f: (target: CanvasDisplayObject) => boolean): void {\n\tfor (; ;) {\n\t\tif (hitTarget.interactive) {\n\t\t\tif (!f(hitTarget)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (hitTarget._parent) {\n\t\t\thitTarget = hitTarget._parent;\n\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// TODO feature detection for mouse/touch/pointer\n/**\n * @ignore\n */\nfunction onPointerEvent(element: EventTarget, name: string, f: (event: Array<IPointerEvent>) => void): IDisposer {\n\treturn $utils.addEventListener(element, $utils.getRendererEvent(name), (event: MouseEvent | TouchEvent) => {\n\t\tlet touches = (<any>event).touches;\n\t\tif (touches) {\n\t\t\tif (touches.length == 0) {\n\t\t\t\ttouches = (<any>event).changedTouches;\n\t\t\t}\n\n\t\t\tf($array.copy(<TouchList>touches));\n\n\t\t} else {\n\t\t\tf([<MouseEvent>event]);\n\t\t}\n\t});\n}\n\n/**\n * @ignore\n */\nfunction isTainted(image: HTMLImageElement): boolean {\n\tconst canvas = document.createElement(\"canvas\");\n\tcanvas.width = 1;\n\tcanvas.height = 1;\n\tconst context = canvas.getContext(\"2d\", { willReadFrequently: true })! as CanvasRenderingContext2D;\n\tcontext.drawImage(image, 0, 0, 1, 1);\n\n\ttry {\n\t\tcontext.getImageData(0, 0, 1, 1);\n\t\treturn false;\n\t}\n\tcatch (err) {\n\t\tconsole.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n\t\treturn true;\n\t}\n}\n\n/**\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\n *\n * @ignore\n */\nfunction clearCanvas(view: HTMLCanvasElement) {\n\tview.width = 0;\n\tview.height = 0;\n\tview.style.width = \"0px\";\n\tview.style.height = \"0px\";\n}\n\n/**\n * @ignore\n */\nexport class CanvasPivot implements IPoint {\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\tget y(): number {\n\t\treturn this._y;\n\t}\n\n\tset x(value: number) {\n\t\tthis._x = value;\n\t}\n\n\tset y(value: number) {\n\t\tthis._y = value;\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasDisplayObject extends DisposerClass implements IDisplayObject, IDisposer {\n\tpublic _layer?: CanvasLayer;\n\n\tpublic mask: CanvasGraphics | null = null;\n\tpublic visible: boolean = true;\n\tpublic exportable?: boolean = true;\n\tpublic interactive: boolean = false;\n\tpublic inactive: boolean = false;\n\tpublic wheelable: boolean = false;\n\tpublic cancelTouch: boolean = false;\n\tpublic isMeasured: boolean = false;\n\tpublic buttonMode: boolean = false;\n\tpublic alpha: number = 1;\n\tpublic compoundAlpha: number = 1;\n\tpublic angle: number = 0;\n\tpublic scale: number = 1;\n\tpublic x: number = 0;\n\tpublic y: number = 0;\n\tpublic pivot: CanvasPivot = new CanvasPivot();\n\n\tpublic filter?: string;\n\n\tpublic cursorOverStyle?: string;\n\tpublic _replacedCursorStyle?: string;\n\n\tpublic _localMatrix: Matrix = new Matrix();\n\tpublic _matrix: Matrix = new Matrix();\n\t// TODO can this be replaced with _localMatrix ?\n\tprotected _uMatrix: Matrix = new Matrix();\n\n\tpublic _renderer: CanvasRenderer;\n\tpublic _parent: CanvasContainer | undefined;\n\n\tprotected _localBounds: IBounds | undefined;\n\tprotected _bounds: IBounds | undefined;\n\tpublic _colorId: string | undefined;\n\n\tconstructor(renderer: CanvasRenderer) {\n\t\tsuper();\n\t\tthis._renderer = renderer;\n\t}\n\n\tprotected _dispose(): void {\n\t\tthis._renderer._removeObject(this);\n\t}\n\n\tpublic getCanvas(): HTMLCanvasElement {\n\t\treturn this.getLayer().view;\n\t}\n\n\tpublic getLayer(): CanvasLayer {\n\t\tlet self: CanvasDisplayObject = this;\n\n\t\tfor (; ;) {\n\t\t\tif (self._layer) {\n\t\t\t\treturn self._layer;\n\n\t\t\t} else if (self._parent) {\n\t\t\t\tself = self._parent;\n\n\t\t\t} else {\n\t\t\t\treturn this._renderer.defaultLayer;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setLayer(order: number | undefined, margin: IMargin | undefined): void {\n\t\tif (order == null) {\n\t\t\tthis._layer = undefined;\n\n\t\t} else {\n\t\t\tconst visible = true;\n\t\t\tthis._layer = this._renderer.getLayer(order, visible);\n\t\t\tthis._layer.visible = visible;\n\t\t\tthis._layer.margin = margin;\n\t\t\tif (margin) {\n\t\t\t\t$utils.setInteractive(this._layer.view, false);\n\t\t\t}\n\n\t\t\tif (this._parent) {\n\t\t\t\tthis._parent.registerChildLayer(this._layer);\n\t\t\t}\n\n\t\t\tthis._renderer.resizeLayer(this._layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(): void {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic clear(): void {\n\t\tthis.invalidateBounds();\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tthis._localBounds = undefined;\n\t}\n\n\tpublic _addBounds(_bounds: IBounds): void { }\n\n\tprotected _getColorId(): string {\n\t\tif (this._colorId === undefined) {\n\t\t\tthis._colorId = this._renderer.paintId(this);\n\t\t}\n\n\t\treturn this._colorId;\n\t}\n\n\tprotected _isInteractive(): boolean {\n\t\treturn this.inactive == false && (this.interactive || this._renderer._forceInteractive > 0);\n\t}\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this._isInteractive();\n\t}\n\n\tpublic contains(child: CanvasDisplayObject): boolean {\n\t\tfor (; ;) {\n\t\t\tif (child === this) {\n\t\t\t\treturn true;\n\n\t\t\t} else if (child._parent) {\n\t\t\t\tchild = child._parent;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\ttoGlobal(point: IPoint): IPoint {\n\t\treturn this._matrix.apply(point);\n\t}\n\n\ttoLocal(point: IPoint): IPoint {\n\t\treturn this._matrix.applyInverse(point);\n\t}\n\n\tpublic getLocalMatrix(): Matrix {\n\t\tthis._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n\t\treturn this._uMatrix;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\t\t\tconst bn = 10000000;\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: bn,\n\t\t\t\ttop: bn,\n\t\t\t\tright: -bn,\n\t\t\t\tbottom: -bn\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tgetAdjustedBounds(bounds: IBounds): IBounds {\n\t\tthis._setMatrix();\n\n\t\tconst matrix = this.getLocalMatrix();\n\n\t\tconst p0 = matrix.apply({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = matrix.apply({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tif (this.interactive) {\n\t\t\treturn this._renderer._addEvent(this, key, callback, context);\n\n\t\t} else {\n\t\t\treturn new Disposer(() => { });\n\t\t}\n\t}\n\n\tpublic _setMatrix(): void {\n\t\t// TODO only calculate this if it has actually changed\n\t\tthis._localMatrix.setTransform(\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.pivot.x,\n\t\t\tthis.pivot.y,\n\t\t\t// Converts degrees to radians\n\t\t\tthis.angle * Math.PI / 180,\n\t\t\tthis.scale\n\t\t);\n\n\t\tthis._matrix.copyFrom(this._localMatrix);\n\n\t\tif (this._parent) {\n\t\t\t// TODO only calculate this if it has actually changed\n\t\t\tthis._matrix.prepend(this._parent._matrix);\n\t\t}\n\t}\n\n\tpublic _transform(context: CanvasRenderingContext2D, resolution: number): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\tm.tx * resolution,\n\t\t\tm.ty * resolution\n\t\t);\n\t}\n\n\tpublic _transformMargin(context: CanvasRenderingContext2D, resolution: number, margin: IMargin): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\t(m.tx + margin.left) * resolution,\n\t\t\t(m.ty + margin.top) * resolution\n\t\t);\n\t}\n\n\tpublic _transformLayer(context: CanvasRenderingContext2D, resolution: number, layer: CanvasLayer): void {\n\t\tif (layer.margin) {\n\t\t\tthis._transformMargin(context, layer.scale || resolution, layer.margin);\n\n\t\t} else {\n\t\t\tthis._transform(context, layer.scale || resolution);\n\t\t}\n\t}\n\n\tpublic render(parentLayer: CanvasLayer): void {\n\t\tif (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n\t\t\tthis._setMatrix();\n\n\t\t\tconst resolution = this._renderer.resolution;\n\n\t\t\tconst layers = this._renderer.layers;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t}\n\n\t\t\t// TODO improve this\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tconst context = layer.context;\n\t\t\t\t\tcontext.save();\n\n\t\t\t\t\t// We must apply the mask before we transform the element\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tmask._transformLayer(context, resolution, layer);\n\t\t\t\t\t\tmask._runPath(context);\n\t\t\t\t\t\tcontext.clip();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\t\t\tthis._transformLayer(context, resolution, layer);\n\n\t\t\t\t\tif (this.filter) {\n\t\t\t\t\t\tcontext.filter = this.filter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tghostContext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tif (mask && this._isInteractiveMask()) {\n\t\t\t\tmask._transform(ghostContext, resolution);\n\t\t\t\tmask._runPath(ghostContext);\n\t\t\t\tghostContext.clip();\n\t\t\t}\n\n\t\t\tthis._transform(ghostContext, resolution);\n\n\t\t\tthis._render(parentLayer);\n\n\t\t\tghostContext.restore();\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.restore();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tif (this.exportable === false) {\n\t\t\tconst layer = this._layer || parentLayer;\n\t\t\tlayer.tainted = true;\n\t\t}\n\t}\n\n\thovering(): boolean {\n\t\treturn this._renderer._hovering.has(this);\n\t}\n\n\tdragging(): boolean {\n\t\treturn this._renderer._dragging.some((x) => x.value === this);\n\t}\n\n\tpublic dispose() {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic shouldCancelTouch(): boolean {\n\t\tconst renderer = this._renderer;\n\t\tif (renderer.tapToActivate && !renderer._touchActive) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.cancelTouch) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (this._parent) {\n\t\t\treturn this._parent.shouldCancelTouch();\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasContainer extends CanvasDisplayObject implements IContainer {\n\tpublic interactiveChildren: boolean = true;\n\tprivate _childLayers?: CanvasLayer[];\n\n\tprotected _children: Array<CanvasDisplayObject> = [];\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this.interactiveChildren || super._isInteractiveMask();\n\t}\n\n\taddChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = this;\n\t\tthis._children.push(child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\taddChildAt(child: CanvasDisplayObject, index: number): void {\n\t\tchild._parent = this;\n\t\tthis._children.splice(index, 0, child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\tremoveChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = undefined;\n\t\t$array.removeFirst(this._children, child);\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst renderer = this._renderer;\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t++renderer._forceInteractive;\n\t\t}\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t$array.each(this._children, (child) => {\n\t\t\tchild.compoundAlpha = this.compoundAlpha * this.alpha;\n\t\t\tchild.render(layer);\n\t\t});\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t--renderer._forceInteractive;\n\t\t}\n\t}\n\n\tregisterChildLayer(layer: CanvasLayer): void {\n\t\tif (!this._childLayers) {\n\t\t\tthis._childLayers = [];\n\t\t}\n\t\t$array.pushOne(this._childLayers, layer);\n\t\tif (this._parent) {\n\t\t\tthis._parent.registerChildLayer(layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(deep: boolean = false): void {\n\t\tsuper.markDirtyLayer();\n\t\tif (deep && this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => layer.dirty = true);\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\tif (this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => {\n\t\t\t\tlayer.dirty = true;\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction setPoint(bounds: IBounds, point: IPoint): void {\n\tbounds.left = Math.min(bounds.left, point.x);\n\tbounds.top = Math.min(bounds.top, point.y);\n\tbounds.right = Math.max(bounds.right, point.x);\n\tbounds.bottom = Math.max(bounds.bottom, point.y);\n}\n\n/**\n * @ignore\n */\nabstract class Op {\n\tpublic colorize(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void { }\n\n\tpublic path(_context: CanvasRenderingContext2D): void { }\n\n\tpublic addBounds(_bounds: IBounds): void { }\n}\n\n/**\n * @ignore\n */\nclass BeginFill extends Op {\n\tconstructor(public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.fillStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndFill extends Op {\n\tconstructor(public clearShadow: boolean) { super(); }\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.fill();\n\t\tif (this.clearShadow) {\n\t\t\tcontext.shadowColor = \"\";\n\t\t\tcontext.shadowBlur = 0;\n\t\t\tcontext.shadowOffsetX = 0;\n\t\t\tcontext.shadowOffsetY = 0;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndStroke extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.stroke();\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineStyle extends Op {\n\tconstructor(public width: number, public color: string | CanvasGradient | CanvasPattern, public lineJoin?: \"miter\" | \"round\" | \"bevel\") { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.strokeStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t}\n\n\t\tcontext.lineWidth = this.width;\n\t\tif (this.lineJoin) {\n\t\t\tcontext.lineJoin = this.lineJoin;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDash extends Op {\n\tconstructor(public dash: number[]) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.setLineDash(this.dash);\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDashOffset extends Op {\n\tconstructor(public dashOffset: number) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.lineDashOffset = this.dashOffset;\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawRect extends Op {\n\tconstructor(public x: number, public y: number, public width: number, public height: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tconst l = this.x;\n\t\tconst t = this.y;\n\t\tconst r = l + this.width;\n\t\tconst b = t + this.height;\n\n\t\tsetPoint(bounds, { x: l, y: t });\n\t\tsetPoint(bounds, { x: r, y: t });\n\t\tsetPoint(bounds, { x: l, y: b });\n\t\tsetPoint(bounds, { x: r, y: b });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawCircle extends Op {\n\tconstructor(public x: number, public y: number, public radius: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x + this.radius, this.y);\n\t\tcontext.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\n\t\tsetPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawEllipse extends Op {\n\tconstructor(public x: number, public y: number, public radiusX: number, public radiusY: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\n\t\tsetPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Arc extends Op {\n\tconstructor(\n\t\tpublic cx: number,\n\t\tpublic cy: number,\n\t\tpublic radius: number,\n\t\tpublic startAngle: number,\n\t\tpublic endAngle: number,\n\t\tpublic anticlockwise: boolean,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n\t\t}\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tlet arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n\t\tsetPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\n\t\tsetPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ArcTo extends Op {\n\tconstructor(\n\t\tpublic x1: number,\n\t\tpublic y1: number,\n\t\tpublic x2: number,\n\t\tpublic y2: number,\n\t\tpublic radius: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n\t\t}\n\t}\n\n\t// TODO: add points\n\tpublic addBounds(_bounds: IBounds): void {\n\t\t/*\n\t\t// not finished\n\t\thttps://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\n\n\t\tif (prevPoint) {\n\t\t\tlet x1 = prevPoint.x;\n\t\t\tlet y1 = prevPoint.y;\n\t\t\tlet x2 = this.x2;\n\t\t\tlet y2 = this.y2;\n\t\t\tlet r = this.radius;\n\n\t\t\tlet xa = (x2 - x1) / 2;\n\t\t\tlet ya = (y2 - y1) / 2;\n\n\t\t\tlet x0 = x1 + xa;\n\t\t\tlet y0 = y1 + ya;\n\n\t\t\tlet a = Math.hypot(xa, ya);\n\t\t\tlet b = Math.sqrt(r * r - a * a);\n\n\t\t\tlet cx = x0 + b * ya / a;\n\t\t\tlet cy = y0 - b * xa / a;\n\n\t\t\tconsole.log(cx, cy);\n\t\t}*/\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.lineTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass MoveTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ClosePath extends Op {\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.closePath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BezierCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic cpX2: number,\n\t\tpublic cpY2: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.cpX2, y: this.cpY2 });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass QuadraticCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Shadow extends Op {\n\tconstructor(\n\t\tpublic color: string,\n\t\tpublic blur: number,\n\t\tpublic offsetX: number,\n\t\tpublic offsetY: number,\n\t\tpublic opacity?: number\n\t) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tif (this.opacity) {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t\tcontext.shadowColor = this.color;\n\t\tcontext.shadowBlur = this.blur;\n\t\tcontext.shadowOffsetX = this.offsetX;\n\t\tcontext.shadowOffsetY = this.offsetY;\n\t}\n}\n\n/**\n * @ignore\n */\nclass GraphicsImage extends Op {\n\tconstructor(\n\t\tpublic image: HTMLImageElement,\n\t\tpublic width: number,\n\t\tpublic height: number,\n\t\tpublic x: number,\n\t\tpublic y: number\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.drawImage(this.image, this.x, this.y, this.width, this.height);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t\tsetPoint(bounds, { x: this.width, y: this.height });\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasGraphics extends CanvasDisplayObject implements IGraphics {\n\tprotected _operations: Array<Op> = [];\n\n\tpublic blendMode: BlendMode = BlendMode.NORMAL;\n\n\tprotected _hasShadows: boolean = false;\n\tprotected _fillAlpha?: number;\n\tprotected _strokeAlpha?: number;\n\n\tclear(): void {\n\t\tsuper.clear();\n\t\tthis._operations.length = 0;\n\t}\n\n\tprotected _pushOp(op: Op): void {\n\t\tthis._operations.push(op);\n\t}\n\n\tbeginFill(color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._fillAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new BeginFill(color.toCSS(alpha)));\n\n\t\t\t} else {\n\t\t\t\tthis.isMeasured = true;\n\t\t\t\tthis._pushOp(new BeginFill(color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tendFill(): void {\n\t\tthis._pushOp(new EndFill(this._hasShadows));\n\t}\n\n\tendStroke(): void {\n\t\tthis._pushOp(new EndStroke());\n\t}\n\n\tlineStyle(width: number = 0, color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1, lineJoin?: \"miter\" | \"round\" | \"bevel\"): void {\n\t\tthis._strokeAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\n\t\t\t} else {\n\t\t\t\tthis._pushOp(new LineStyle(width, color, lineJoin));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\n\t\t}\n\t}\n\n\tsetLineDash(dash?: number[]): void {\n\t\tthis._pushOp(new LineDash(dash ? dash : []));\n\t}\n\n\tsetLineDashOffset(dashOffset: number = 0): void {\n\t\tthis._pushOp(new LineDashOffset(dashOffset));\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number): void {\n\t\tthis._pushOp(new DrawRect(x, y, width, height));\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number): void {\n\t\tthis._pushOp(new DrawCircle(x, y, radius));\n\t}\n\n\tdrawEllipse(x: number, y: number, radiusX: number, radiusY: number): void {\n\t\tthis._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\n\t}\n\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): void {\n\t\tthis._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\n\t\tthis._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\tlineTo(x: number, y: number): void {\n\t\tthis._pushOp(new LineTo(x, y));\n\t}\n\n\tmoveTo(x: number, y: number): void {\n\t\tthis._pushOp(new MoveTo(x, y));\n\t}\n\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n\t}\n\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n\t}\n\n\tclosePath(): void {\n\t\tthis._pushOp(new ClosePath());\n\t}\n\n\tshadow(color: Color, blur: number = 0, offsetX: number = 0, offsetY: number = 0, opacity?: number): void {\n\t\tthis._hasShadows = true;\n\t\tthis._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n\t}\n\n\timage(image: HTMLImageElement, width: number, height: number, x: number, y: number): void {\n\t\tthis._pushOp(new GraphicsImage(image, width, height, x, y));\n\t}\n\n\t// https://svgwg.org/svg2-draft/paths.html#DProperty\n\t// TODO better error checking\n\tsvgPath(path: string): void {\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tlet cpx: number | null = null;\n\t\tlet cpy: number | null = null;\n\t\tlet qcpx: number | null = null;\n\t\tlet qcpy: number | null = null;\n\n\t\tconst SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n\t\tconst ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n\n\t\tlet match;\n\n\t\twhile ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n\t\t\tconst name = match[1];\n\t\t\tconst rest = match[2];\n\n\t\t\tconst args: Array<string> = [];\n\n\t\t\twhile ((match = ARGS_REGEXP.exec(rest)) !== null) {\n\t\t\t\targs.push(match[1]);\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n\t\t\t\tcpx = null;\n\t\t\t\tcpy = null;\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n\t\t\t\tqcpx = null;\n\t\t\t\tqcpy = null;\n\t\t\t}\n\n\t\t\tswitch (name) {\n\t\t\t\tcase \"M\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx = +args[0];\n\t\t\t\t\ty = +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx += +args[0];\n\t\t\t\t\ty += +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"L\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"V\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"C\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i];\n\t\t\t\t\t\tconst y1 = +args[i + 1];\n\t\t\t\t\t\tcpx = +args[i + 2];\n\t\t\t\t\t\tcpy = +args[i + 3];\n\t\t\t\t\t\tx = +args[i + 4];\n\t\t\t\t\t\ty = +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i] + x;\n\t\t\t\t\t\tconst y1 = +args[i + 1] + y;\n\t\t\t\t\t\tcpx = +args[i + 2] + x;\n\t\t\t\t\t\tcpy = +args[i + 3] + y;\n\t\t\t\t\t\tx += +args[i + 4];\n\t\t\t\t\t\ty += +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i];\n\t\t\t\t\t\tcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i] + x;\n\t\t\t\t\t\tcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i];\n\t\t\t\t\t\tqcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i] + x;\n\t\t\t\t\t\tqcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"T\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"t\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"A\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\tconst relative = (name === \"a\");\n\n\t\t\t\t\tsplitArcFlags(args);\n\t\t\t\t\tcheckEvenArgs(name, args.length, 7);\n\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 7) {\n\t\t\t\t\t\tlet cx = +args[i + 5];\n\t\t\t\t\t\tlet cy = +args[i + 6];\n\n\t\t\t\t\t\tif (relative) {\n\t\t\t\t\t\t\tcx += x;\n\t\t\t\t\t\t\tcy += y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bs = arcToBezier({\n\t\t\t\t\t\t\tpx: x,\n\t\t\t\t\t\t\tpy: y,\n\t\t\t\t\t\t\trx: +args[i],\n\t\t\t\t\t\t\try: +args[i + 1],\n\t\t\t\t\t\t\txAxisRotation: +args[i + 2],\n\t\t\t\t\t\t\tlargeArcFlag: assertBinary(+args[i + 3]),\n\t\t\t\t\t\t\tsweepFlag: assertBinary(+args[i + 4]),\n\t\t\t\t\t\t\tcx,\n\t\t\t\t\t\t\tcy,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$array.each(bs, (b) => {\n\t\t\t\t\t\t\tthis.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n\t\t\t\t\t\t\tx = b.x;\n\t\t\t\t\t\t\ty = b.y;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"z\":\n\t\t\t\t\tcheckArgs(name, args.length, 0);\n\t\t\t\t\tthis.closePath();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _runPath(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\n\t\t$array.each(this._operations, (op) => {\n\t\t\top.path(context);\n\t\t});\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\tconst layerDirty = layer.dirty;\n\t\tconst interactive = this._isInteractive();\n\n\t\tif (layerDirty || interactive) {\n\n\t\t\tconst context = layer.context;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tif (layerDirty) {\n\t\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\t\tcontext.beginPath();\n\t\t\t}\n\n\t\t\tlet color: string | undefined;\n\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.beginPath();\n\t\t\t\tcolor = this._getColorId();\n\t\t\t}\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\tif (layerDirty) {\n\t\t\t\t\top.path(context);\n\t\t\t\t\top.colorize(context, undefined);\n\t\t\t\t}\n\n\t\t\t\tif (interactive) {\n\t\t\t\t\top.path(ghostContext);\n\t\t\t\t\top.colorize(ghostContext, color);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic renderDetached(context: CanvasRenderingContext2D): void {\n\t\tif (this.visible) {\n\t\t\tthis._setMatrix();\n\n\t\t\tcontext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t\tmask._transform(context, 1);\n\t\t\t\tmask._runPath(context);\n\t\t\t\tcontext.clip();\n\t\t\t}\n\n\t\t\t// TODO handle compoundAlpha somehow ?\n\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\tthis._transform(context, 1);\n\n\t\t\tif (this.filter) {\n\t\t\t\tcontext.filter = this.filter;\n\t\t\t}\n\n\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\tcontext.beginPath();\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.path(context);\n\t\t\t\top.colorize(context, undefined);\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.addBounds(bounds);\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ILineChunk {\n\tstyle: string | undefined,\n\tfill: Color | undefined,\n\ttext: string,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\tascent: number,\n\toffsetX: number,\n\toffsetY: number,\n\ttextDecoration: string | undefined,\n\tverticalAlign?: \"baseline\" | \"sub\" | \"super\"\n}\n\n/**\n * @ignore\n */\ninterface ILine {\n\toffsetY: number,\n\tascent: number,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttextChunks: Array<ILineChunk>,\n}\n\n/**\n * @ignore\n */\nexport class CanvasText extends CanvasDisplayObject implements IText {\n\tpublic text: string;\n\tpublic style: CanvasTextStyle;\n\tpublic resolution: number = 1;\n\n\tprotected _textInfo: Array<ILine> | undefined;\n\tprotected _textVisible: boolean = true;\n\tprotected _originalScale?: number = 1;\n\n\tconstructor(renderer: CanvasRenderer, text: string, style: CanvasTextStyle) {\n\t\tsuper(renderer);\n\t\tthis.text = text;\n\t\tthis.style = style;\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tsuper.invalidateBounds();\n\t\tthis._textInfo = undefined;\n\t}\n\n\tprivate _shared(context: CanvasRenderingContext2D) {\n\t\tif (this.style.textAlign) {\n\t\t\tcontext.textAlign = this.style.textAlign;\n\t\t}\n\n\t\tif (this.style.direction) {\n\t\t\tcontext.direction = this.style.direction;\n\t\t}\n\n\t\tif (this.style.textBaseline) {\n\t\t\tcontext.textBaseline = this.style.textBaseline;\n\t\t}\n\n\t}\n\n\tprotected _prerender(layer: CanvasLayer, ignoreGhost = false, ignoreFontWeight = false): void {\n\t\tsuper._render(layer);\n\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Font style\n\n\t\tconst style = this.style;\n\t\tlet fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n\n\t\tcontext.font = fontStyle;\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.font = fontStyle;\n\t\t}\n\n\t\t// Other parameters\n\t\tif (style.fill) {\n\t\t\tif (style.fill instanceof Color) {\n\t\t\t\tcontext.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = style.fill;\n\t\t\t}\n\t\t}\n\n\t\tif (style.shadowColor) {\n\t\t\tlayer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n\t\t}\n\t\tif (style.shadowBlur) {\n\t\t\tlayer.context.shadowBlur = style.shadowBlur;\n\t\t}\n\t\tif (style.shadowOffsetX) {\n\t\t\tlayer.context.shadowOffsetX = style.shadowOffsetX;\n\t\t}\n\t\tif (style.shadowOffsetY) {\n\t\t\tlayer.context.shadowOffsetY = style.shadowOffsetY;\n\t\t}\n\n\t\tthis._shared(context);\n\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.fillStyle = this._getColorId();\n\t\t\tthis._shared(ghostContext);\n\t\t}\n\t}\n\n\tprotected _getFontStyle(style2?: ITextStyle, ignoreFontWeight = false): string {\n\n\t\t// Process defaults\n\t\tconst style = this.style;\n\t\tlet fontStyle: string[] = [];\n\n\t\tif (style2 && style2.fontVariant) {\n\t\t\tfontStyle.push(style2.fontVariant);\n\t\t}\n\t\telse if (style.fontVariant) {\n\t\t\tfontStyle.push(style.fontVariant);\n\t\t}\n\n\t\tif (!ignoreFontWeight) {\n\t\t\tif (style2 && style2.fontWeight) {\n\t\t\t\tfontStyle.push(style2.fontWeight);\n\t\t\t}\n\t\t\telse if (style.fontWeight) {\n\t\t\t\tfontStyle.push(style.fontWeight);\n\t\t\t}\n\t\t}\n\n\t\tif (style2 && style2.fontStyle) {\n\t\t\tfontStyle.push(style2.fontStyle);\n\t\t}\n\t\telse if (style.fontStyle) {\n\t\t\tfontStyle.push(style.fontStyle);\n\t\t}\n\n\t\tif (style2 && style2.fontSize) {\n\t\t\tif ($type.isNumber(style2.fontSize)) {\n\t\t\t\tstyle2.fontSize = style2.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style2.fontSize);\n\t\t}\n\t\telse if (style.fontSize) {\n\t\t\tif ($type.isNumber(style.fontSize)) {\n\t\t\t\tstyle.fontSize = style.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style.fontSize);\n\t\t}\n\n\t\tif (style2 && style2.fontFamily) {\n\t\t\tfontStyle.push(style2.fontFamily);\n\t\t}\n\t\telse if (style.fontFamily) {\n\t\t\tfontStyle.push(style.fontFamily);\n\t\t}\n\t\telse if (fontStyle.length) {\n\t\t\tfontStyle.push(\"Arial\");\n\t\t}\n\n\t\treturn fontStyle.join(\" \");\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(layer);\n\t\t}\n\n\t\tif (this._textVisible) {\n\n\t\t\tconst interactive = this._isInteractive();\n\t\t\tconst context = layer.context;\n\t\t\tconst layerDirty = layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tcontext.save();\n\t\t\tghostContext.save();\n\t\t\tthis._prerender(layer);\n\n\t\t\t// const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\t\t// const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (this._isInteractive()) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw text\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw underline\n\t\t\t\t\tif (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\n\n\t\t\t\t\t\tlet thickness = 1;\n\t\t\t\t\t\tlet offset = 1;\n\t\t\t\t\t\tlet fontSize = chunk.height;\n\n\t\t\t\t\t\tlet offsetX = chunk.offsetX;\n\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width / 2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\t\tconst format = TextFormatter.getTextStyle(chunk.style);\n\t\t\t\t\t\t\tswitch (format.fontWeight) {\n\t\t\t\t\t\t\t\tcase \"bolder\":\n\t\t\t\t\t\t\t\tcase \"bold\":\n\t\t\t\t\t\t\t\tcase \"700\":\n\t\t\t\t\t\t\t\tcase \"800\":\n\t\t\t\t\t\t\t\tcase \"900\":\n\t\t\t\t\t\t\t\t\tthickness = 2;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fontSize) {\n\t\t\t\t\t\t\toffset = fontSize / 20;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet y: number;\n\n\t\t\t\t\t\tif (chunk.textDecoration == \"line-through\") {\n\t\t\t\t\t\t\ty = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ty = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\t\tcontext.strokeStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (this.style.fill && this.style.fill instanceof Color) {\n\t\t\t\t\t\t\tcontext.strokeStyle = this.style.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.lineWidth = thickness * offset;\n\t\t\t\t\t\tcontext.moveTo(offsetX, y);\n\t\t\t\t\t\tcontext.lineTo(offsetX + chunk.width, y);\n\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interactive && this.interactive) {\n\t\t\t\t\t\t// Draw text in ghost canvas ONLY if it is set as interactive\n\t\t\t\t\t\t// explicitly. This way we avoid hit test anomalies caused by anti\n\t\t\t\t\t\t// aliasing of text.\n\t\t\t\t\t\tghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t//if (this._textVisible) {\n\t\t\tconst x = this._measure(this.getLayer());\n\t\t\tsetPoint(bounds, { x: x.left, y: x.top });\n\t\t\tsetPoint(bounds, { x: x.right, y: x.bottom });\n\t\t\t//}\n\t\t}\n\t}\n\n\tprotected _ignoreFontWeight(): boolean {\n\t\treturn /apple/i.test(navigator.vendor);\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\n\t\t// Init\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true, this._ignoreFontWeight());\n\n\t\t// Get default font metrix\n\t\tconst refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet minX = 0;\n\t\tlet maxX = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\tlet currentStyle: string | undefined;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks: ITextChunk[];\n\t\t\tif (line == \"\") {\n\t\t\t\tchunks = [{\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t\ttext: \"\"\n\t\t\t\t}];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\t\t\t}\n\n\t\t\twhile (chunks.length > 0) {\n\n\t\t\t\t// Init line object\n\t\t\t\tlet lineInfo: ILine = {\n\t\t\t\t\toffsetY: offsetY,\n\t\t\t\t\tascent: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextChunks: []\n\t\t\t\t};\n\n\t\t\t\t// Measure reference text\n\t\t\t\tconst metrics = this._measureText(refText, context);\n\n\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\tlineInfo.height = height;\n\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\n\t\t\t\tlet currentFormat: string;\n\t\t\t\tlet currentDecoration: string | undefined = this.style.textDecoration;\n\t\t\t\tlet currentFill: Color | undefined;\n\t\t\t\tlet currentChunkWidth: number | undefined;\n\t\t\t\tlet skipFurtherText = false;\n\t\t\t\tlet firstTextChunk = true;\n\t\t\t\tlet leftoverChunks: Array<ITextChunk> = [];\n\t\t\t\tlet currentVerticalAlign: \"baseline\" | \"sub\" | \"super\" | undefined;\n\t\t\t\t//let offsetX = 0;\n\t\t\t\t//let chunk;\n\n\t\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t\t$array.eachContinue(chunks, (chunk, index) => {\n\n\t\t\t\t\t// Format chunk\n\t\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t\t\tcurrentDecoration = this.style.textDecoration;\n\t\t\t\t\t\t\tcurrentVerticalAlign = undefined\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t\tif (format.textDecoration) {\n\t\t\t\t\t\t\t\tcurrentDecoration = format.textDecoration;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.verticalAlign) {\n\t\t\t\t\t\t\t\tcurrentVerticalAlign = format.verticalAlign;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyleRestored = false;\n\n\t\t\t\t\t\t\t// Measure reference text after change of format\n\t\t\t\t\t\t\tconst metrics = this._measureText(refText, context);\n\t\t\t\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\t\tif (height > lineInfo.height) {\n\t\t\t\t\t\t\t\tlineInfo.height = height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text chunk\n\t\t\t\t\telse if (chunk.type == \"value\" && !skipFurtherText) {\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t// Check for fit\n\t\t\t\t\t\tif (truncate) {\n\n\t\t\t\t\t\t\t// Break words?\n\t\t\t\t\t\t\tlet breakWords = firstTextChunk || this.style.breakWords || false;\n\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\t\t\t\t\t\tconst ellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n\t\t\t\t\t\t\t\tchunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n\t\t\t\t\t\t\t\tchunk.text += ellipsis;\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (wrap) {\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width;\n\t\t\t\t\t\t\t\tconst tmpText = this._truncateText(\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\tchunk.text,\n\t\t\t\t\t\t\t\t\texcessWidth,\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t(firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\")\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (tmpText == \"\") {\n\t\t\t\t\t\t\t\t\t// Unable to fit a single letter - hide the whole label\n\t\t\t\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//skipFurtherText = true;\n\n\t\t\t\t\t\t\t\t//Add remaining chunks for the next line\n\t\t\t\t\t\t\t\tleftoverChunks = chunks.slice(index + 1);\n\n\t\t\t\t\t\t\t\t//Add remaining text of current chunk if it was forced-cut\n\t\t\t\t\t\t\t\tif ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\ttype: \"value\",\n\t\t\t\t\t\t\t\t\t\ttext: chunk.text.substr(tmpText.length)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (currentFormat) {\n\t\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"format\",\n\t\t\t\t\t\t\t\t\t\t\ttext: currentFormat\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Set current chunk (truncated)\n\t\t\t\t\t\t\t\tchunk.text = $utils.trim(tmpText);\n\n\t\t\t\t\t\t\t\tchunks = [];\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tlet leftBoundMod = 1;\n\t\t\t\t\t\tlet rightBoundMod = 1;\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\t// increase horizontal bounding boxes accordingly\n\t\t\t\t\t\t\tconst boundsMod = chunkWidth / currentChunkWidth\n\t\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: chunk.text,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: 0,\n\t\t\t\t\t\t\ttextDecoration: currentDecoration,\n\t\t\t\t\t\t\tverticalAlign: currentVerticalAlign\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//offsetX += chunkWidth;\n\n\t\t\t\t\t\tfirstTextChunk = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (leftoverChunks) {\n\t\t\t\t\t\t//return false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\t//}\n\t\t\t\t});\n\n\t\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight.value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight || 1.2;\n\t\t\t\t}\n\n\t\t\t\tif (minX < lineInfo.left) {\n\t\t\t\t\tminX = lineInfo.left;\n\t\t\t\t}\n\n\t\t\t\tif (maxX < lineInfo.right) {\n\t\t\t\t\tmaxX = lineInfo.right;\n\t\t\t\t}\n\n\t\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\t\toffsetY += lineInfo.height;\n\n\t\t\t\t// Reset chunks so that it can proceed to the next line\n\t\t\t\tchunks = leftoverChunks || [];\n\t\t\t}\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo, _index: number) => {\n\t\t\tlet currentChunkOffset = 0\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n\t\t\t\tchunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n\t\t\t\tcurrentChunkOffset += chunk.width;\n\n\t\t\t\tif (chunk.verticalAlign) {\n\t\t\t\t\tswitch (chunk.verticalAlign) {\n\t\t\t\t\t\tcase \"super\":\n\t\t\t\t\t\t\tchunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"sub\":\n\t\t\t\t\t\t\tchunk.offsetY += chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst bounds = {\n\t\t\tleft: rtl ? -maxX : -minX,\n\t\t\ttop: 0,\n\t\t\tright: rtl ? minX : maxX,\n\t\t\tbottom: offsetY,\n\t\t};\n\n\n\t\t// We need to fit?\n\t\tif (oversizedBehavior !== \"none\") {\n\t\t\tconst ratio = this._fitRatio(bounds);\n\t\t\tif (ratio < 1) {\n\t\t\t\tif (oversizedBehavior == \"fit\") {\n\t\t\t\t\tif ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\n\t\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!this._originalScale || this._originalScale == 1) {\n\t\t\t\t\t\t\tthis._originalScale = this.scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.scale = ratio;\n\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (oversizedBehavior == \"hide\") {\n\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth;\n\t\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth / 2;\n\t\t\t\t\t\t\tbounds.right = maxWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\t\tbounds.right = maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\t\tthis._originalScale = undefined;\n\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\tthis._originalScale = undefined;\n\t\t\t\tthis._textVisible = true;\n\t\t\t}\n\t\t}\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn bounds;\n\t}\n\n\tprotected _fitRatio(bounds: IBounds): number {\n\t\tconst maxW = this.style.maxWidth;\n\t\tconst maxH = this.style.maxHeight;\n\t\tif (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst w = bounds.right - bounds.left;\n\t\tconst h = bounds.bottom - bounds.top;\n\t\treturn Math.min(maxW! / w || 1, maxH! / h || 1);\n\t}\n\n\tprotected _truncateText(context: CanvasRenderingContext2D, text: string, maxWidth: number, breakWords: boolean = false, fallbackBreakWords: boolean = true): string {\n\t\tlet width: number;\n\t\tdo {\n\t\t\tif (breakWords) {\n\t\t\t\ttext = text.slice(0, -1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet tmp = text.replace(/[^,;:!?\\\\\\/\\s]+[,;:!?\\\\\\/\\s]*$/g, \"\");\n\t\t\t\tif (tmp == \"\" && fallbackBreakWords) {\n\t\t\t\t\tbreakWords = true;\n\t\t\t\t}\n\t\t\t\telse if (tmp == \"\") {\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst metrics = this._measureText(text, context);\n\t\t\twidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t} while ((width > maxWidth) && text != \"\");\n\t\treturn text;\n\t}\n\n\tprotected _measureText(text: string, context: CanvasRenderingContext2D): TextMetrics {\n\t\tlet metrics = context.measureText(text);\n\t\tlet fakeMetrics: any = {};\n\t\tif (metrics.actualBoundingBoxAscent == null) {\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tdiv.innerText = text;\n\t\t\tdiv.style.visibility = \"hidden\";\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tdiv.style.top = \"-1000000px;\"\n\t\t\tdiv.style.fontFamily = this.style.fontFamily || \"\";\n\t\t\tdiv.style.fontSize = this.style.fontSize + \"\";\n\t\t\tdocument.body.appendChild(div);\n\t\t\tconst bbox = div.getBoundingClientRect();\n\t\t\tdocument.body.removeChild(div);\n\t\t\tconst h = bbox.height;\n\t\t\tconst w = metrics.width;\n\t\t\tlet left = 0;\n\t\t\tlet right = w;\n\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: h,\n\t\t\t\tactualBoundingBoxDescent: 0,\n\t\t\t\tactualBoundingBoxLeft: left,\n\t\t\t\tactualBoundingBoxRight: right,\n\t\t\t\tfontBoundingBoxAscent: h,\n\t\t\t\tfontBoundingBoxDescent: 0,\n\t\t\t\twidth: w\n\t\t\t}\n\t\t\t//return fake;\n\t\t}\n\t\telse {\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tactualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\tactualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n\t\t\t\tactualBoundingBoxRight: metrics.actualBoundingBoxRight,\n\t\t\t\tfontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tfontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\twidth: metrics.width\n\t\t\t}\n\t\t}\n\n\t\tconst w = metrics.width;\n\t\tswitch (this.style.textAlign) {\n\t\t\tcase \"right\":\n\t\t\tcase \"end\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w / 2;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = 0;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w;\n\t\t}\n\n\t\treturn fakeMetrics;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasTextStyle implements ITextStyle {\n\t//public wordWrapWidth: number = 100;\n\tpublic fill?: Color | CanvasGradient | CanvasPattern;\n\tpublic fillOpacity?: number;\n\tpublic textAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tpublic fontFamily?: string;\n\tpublic fontSize?: string | number;\n\tpublic fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tpublic fontStyle?: 'normal' | 'italic' | 'oblique';\n\tpublic fontVariant?: \"normal\" | \"small-caps\";\n\tpublic textDecoration?: \"underline\" | \"line-through\";\n\tpublic shadowColor?: Color | null;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tpublic lineHeight?: number | Percent = percent(120);\n\tpublic baselineRatio?: number = 0.19;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tpublic direction?: \"ltr\" | \"rtl\";\n\tpublic textBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\tpublic oversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\" = \"none\";\n\tpublic breakWords?: boolean = false;\n\tpublic ellipsis?: string = \"…\";\n\tpublic maxWidth?: number;\n\tpublic maxHeight?: number;\n\tpublic minScale?: number;\n\tpublic ignoreFormatting?: boolean = false;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRadialText extends CanvasText implements IRadialText {\n\tpublic textType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\" = \"circular\";\n\tpublic radius?: number;\n\tpublic startAngle?: number;\n\tpublic inside?: boolean = false;\n\tpublic orientation?: \"inward\" | \"outward\" | \"auto\" = \"auto\";\n\tpublic kerning?: number = 0;\n\n\tprivate _textReversed: boolean = false;\n\n\tpublic _render(parentLayer: CanvasLayer): void {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\tthis._renderCircular(parentLayer);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._render(parentLayer);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic _renderCircular(parentLayer: CanvasLayer): void {\n\t\tif (this._textVisible) {\n\t\t\tconst layer = this._layer || parentLayer;\n\n\t\t\tthis._prerender(layer);\n\n\t\t\tconst interactive = this._isInteractive();\n\t\t\tconst context = layer.context;\n\t\t\tconst layerDirty = layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\t// Savepoint\n\t\t\tcontext.save();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.save();\n\t\t\t}\n\n\t\t\t// Init\n\t\t\tlet radius = (this.radius || 0);\n\t\t\tlet startAngle = (this.startAngle || 0);\n\t\t\tlet deltaAngle = 0;\n\t\t\tlet orientation = this.orientation;\n\t\t\tlet inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n\t\t\tconst inside = this.inside;\n\t\t\tconst align = this.style.textAlign || \"left\";\n\t\t\tconst kerning = this.kerning || 0;\n\t\t\tlet clockwise = align == \"left\" ? 1 : -1;\n\t\t\tconst shouldReverse = !this._textReversed;\n\n\t\t\t// We need measurements in order to properly position text for alignment\n\t\t\tif (!this._textInfo) {\n\t\t\t\tthis._measure(layer);\n\t\t\t}\n\n\t\t\t// Check if we need to invert the whole stuff\n\t\t\tif (inward == \"auto\") {\n\t\t\t\t// Calc max angle so we know whether we need to flip it\n\t\t\t\tlet maxAngle = 0;\n\t\t\t\tlet midAngle = 0;\n\t\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t\tconst deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\n\t\t\t\t\tif (deltaAngle > maxAngle) {\n\t\t\t\t\t\tmaxAngle = deltaAngle;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (align == \"left\") {\n\t\t\t\t\tmidAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse if (align == \"right\") {\n\t\t\t\t\tmidAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmidAngle = startAngle * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\tmidAngle = $math.normalizeAngle(midAngle);\n\t\t\t\tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t}\n\n\t\t\tif (inward == true && shouldReverse) {\n\t\t\t\tthis._textInfo!.reverse();\n\t\t\t\tthis._textReversed = true;\n\t\t\t}\n\n\t\t\t// if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n\t\t\t// \tclockwise *= -1;\n\t\t\t// }\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\n\t\t\t\tconst textHeight = line.height;\n\n\t\t\t\t// Adjust radius (for `inside = false`)\n\t\t\t\t// Radius adjustment for `inside = false` is below the line calculation\n\t\t\t\tif (!inside) {\n\t\t\t\t\tradius += textHeight;\n\t\t\t\t}\n\n\t\t\t\t// Reverse letters if we're painting them counter-clockwise\n\t\t\t\tif (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\n\t\t\t\t\tline.textChunks.reverse();\n\t\t\t\t}\n\n\t\t\t\t// Init angles\n\t\t\t\tlet lineStartAngle = startAngle;\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t\t// Adjust for center-align\n\t\t\t\tif (align == \"center\") {\n\t\t\t\t\tlineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\n\t\t\t\t\tdeltaAngle = lineStartAngle - startAngle;\n\t\t\t\t}\n\n\t\t\t\t// if (inward == \"auto\") {\n\t\t\t\t// \tlet midAngle;\n\t\t\t\t// \tif (align == \"left\") {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \telse if () {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t\t// }\n\n\t\t\t\t// Rotate letters if they are facing outward\n\t\t\t\tlineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\n\n\t\t\t\t// Savepoint\n\t\t\t\tcontext.save();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.save();\n\t\t\t\t}\n\n\t\t\t\t// Assume starting angle\n\t\t\t\tcontext.rotate(lineStartAngle);\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(lineStartAngle);\n\t\t\t\t}\n\n\t\t\t\tlet angleShift = 0;\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Draw the letter\n\t\t\t\t\tconst char = chunk.text;\n\t\t\t\t\tconst charWidth = chunk.width;\n\n\t\t\t\t\t// Rotate half a letter\n\t\t\t\t\tangleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\n\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Center letters\n\t\t\t\t\tcontext.textBaseline = \"middle\";\n\t\t\t\t\tcontext.textAlign = \"center\";\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.textBaseline = \"middle\";\n\t\t\t\t\t\tghostContext.textAlign = \"center\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Plop the letter\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Rotate half a letter and add spacing\n\t\t\t\t\tangleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\t// Restore angle\n\t\t\t\tcontext.restore();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.restore();\n\t\t\t\t}\n\n\t\t\t\t// Adjust radius (for `inside = true`)\n\t\t\t\tif (inside) {\n\t\t\t\t\tradius -= textHeight;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Restore\n\t\t\tcontext.restore();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.restore();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\treturn this._measureCircular(layer);\n\t\t\tdefault:\n\t\t\t\treturn super._measure(layer);\n\t\t}\n\t}\n\n\tpublic _measureCircular(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\tlet ellipsisMetrics: TextMetrics;\n\t\t//const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\n\t\t// Reset text info\n\t\tthis._textVisible = true;\n\t\tthis._textInfo = [];\n\t\tthis._textReversed = false;\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true);\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet totalWidth = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\n\t\t\t// Init line object\n\t\t\tlet lineInfo: ILine = {\n\t\t\t\toffsetY: offsetY,\n\t\t\t\tascent: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttextChunks: []\n\t\t\t};\n\n\t\t\tlet currentStyle: string | undefined;\n\t\t\tlet currentFill: Color | undefined;\n\t\t\tlet currentChunkWidth: number | undefined;\n\n\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t$array.each(chunks, (chunk, _index) => {\n\n\t\t\t\t// Format chunk\n\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleRestored = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Text format\n\t\t\t\telse if (chunk.type == \"value\") {\n\n\t\t\t\t\t// Measure each letter\n\t\t\t\t\tconst chars = chunk.text.match(/./ug) || [];\n\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\tchars.reverse();\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < chars.length; i++) {\n\n\t\t\t\t\t\tconst char = chars[i];\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(char, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.width;\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: char,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight + metrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\ttotalWidth += chunkWidth;\n\n\t\t\t\t\t\t// Handle oversized behavior\n\t\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tif (!ellipsisMetrics) {\n\t\t\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\ttotalWidth += ellipsisWidth;\n\t\t\t\t\t\t\tif ((totalWidth + ellipsisWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tif (lineInfo.textChunks.length == 1) {\n\t\t\t\t\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tlineInfo.width += ellipsisWidth;\n\t\t\t\t\t\t\t\t\tlineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\n\t\t\t\t\t\t\t\t\tlineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\t\t\t\ttext: ellipsis,\n\t\t\t\t\t\t\t\t\t\twidth: ellipsisWidth,\n\t\t\t\t\t\t\t\t\t\theight: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\t\t\t\tleft: ellipsisMetrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\t\t\t\tright: ellipsisMetrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\t\t\t\tascent: ellipsisMetrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t}\n\n\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\toffsetY += lineInfo.height;\n\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\n\t\tif (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\n\t\t\tthis._textVisible = false;\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo) => {\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n\t\t\t});\n\t\t});\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t};\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasImage extends CanvasDisplayObject implements IPicture {\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic image: HTMLImageElement | undefined;\n\tpublic tainted?: boolean;\n\n\tpublic shadowColor?: Color;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\n\tprotected _imageMask: HTMLCanvasElement | undefined;\n\n\tconstructor(renderer: CanvasRenderer, image: HTMLImageElement | undefined) {\n\t\tsuper(renderer);\n\t\tthis.image = image;\n\t}\n\n\tprotected _dispose(): void {\n\t\tsuper._dispose();\n\n\t\tif (this._imageMask) {\n\t\t\tclearCanvas(this._imageMask);\n\t\t}\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\n\t\t\tlet w = 0;\n\t\t\tlet h = 0;\n\n\t\t\tif (this.width) {\n\t\t\t\tw = this.width;\n\t\t\t}\n\t\t\tif (this.height) {\n\t\t\t\th = this.height;\n\t\t\t}\n\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: w,\n\t\t\t\tbottom: h\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tif (this.image) {\n\t\t\tconst layer = this._layer || parentLayer;\n\n\t\t\tif (this.tainted === undefined) {\n\t\t\t\tthis.tainted = isTainted(this.image);\n\t\t\t\tlayer.tainted = true;\n\t\t\t}\n\n\t\t\tif (this.tainted && this._renderer._omitTainted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (layer.dirty) {\n\n\t\t\t\tif (this.shadowColor) {\n\t\t\t\t\tlayer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n\t\t\t\t}\n\t\t\t\tif (this.shadowBlur) {\n\t\t\t\t\tlayer.context.shadowBlur = this.shadowBlur;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetX) {\n\t\t\t\t\tlayer.context.shadowOffsetX = this.shadowOffsetX;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetY) {\n\t\t\t\t\tlayer.context.shadowOffsetY = this.shadowOffsetY;\n\t\t\t\t}\n\n\t\t\t\t// TODO should this round ?\n\t\t\t\tconst width = this.width || this.image.naturalWidth;\n\t\t\t\tconst height = this.height || this.image.naturalHeight;\n\n\t\t\t\tlayer.context.drawImage(this.image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tif (this.interactive && this._isInteractive()) {\n\t\t\t\tconst mask = this._getMask(this.image);\n\n\t\t\t\tthis._renderer._ghostContext.drawImage(mask, 0, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tsuper.clear();\n\t\tthis.image = undefined;\n\t\tthis._imageMask = undefined;\n\t}\n\n\tprotected _getMask(image: HTMLImageElement): HTMLCanvasElement {\n\t\tif (this._imageMask === undefined) {\n\t\t\t// TODO should this round ?\n\t\t\tconst width = this.width || image.naturalWidth;\n\t\t\tconst height = this.height || image.naturalHeight;\n\n\t\t\t// We need to create a second canvas because destination-in clears out the entire canvas\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\t\tcontext.imageSmoothingEnabled = false;\n\n\t\t\tcontext.fillStyle = this._getColorId();\n\t\t\tcontext.fillRect(0, 0, width, height);\n\n\t\t\tif (!isTainted(image)) {\n\t\t\t\tcontext.globalCompositeOperation = \"destination-in\";\n\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tthis._imageMask = canvas;\n\t\t}\n\n\t\treturn this._imageMask;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasRendererEvent<A> implements IRendererEvent<A> {\n\tpublic id: Id;\n\tpublic simulated: boolean = false;\n\tpublic native: boolean = true;\n\n\tconstructor(public event: A, public point: IPoint, public bbox: DOMRect) {\n\t\tif ($utils.supports(\"touchevents\") && event instanceof Touch) {\n\t\t\tthis.id = event.identifier;\n\n\t\t} else {\n\t\t\tthis.id = null;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface Event<Key extends keyof IRendererEvents> {\n\tobject: CanvasDisplayObject;\n\tcontext: unknown;\n\tcallback: (event: IRendererEvents[Key]) => void;\n\tdisposed: boolean;\n}\n\n/**\n * @ignore\n */\ninterface Events<Key extends keyof IRendererEvents> {\n\tdisposer: IDisposer;\n\tcallbacks: Array<Event<Key>>;\n\tdispatching: boolean;\n\tcleanup: boolean;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRenderer extends ArrayDisposer implements IRenderer, IDisposer {\n\tpublic view: HTMLElement = document.createElement(\"div\");\n\tprotected _layerDom: HTMLElement = document.createElement(\"div\");\n\n\tpublic layers: Array<CanvasLayer> = [];\n\tpublic _dirtyLayers: Array<CanvasLayer> = [];\n\tpublic defaultLayer: CanvasLayer = this.getLayer(0);\n\n\tprotected _ghostView: HTMLCanvasElement;\n\tpublic _ghostContext: CanvasRenderingContext2D;\n\n\tprotected _patternCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n\tprotected _patternContext: CanvasRenderingContext2D = this._patternCanvas.getContext(\"2d\")!;\n\n\tprotected _width: number = 0;\n\tprotected _height: number = 0;\n\n\tprotected _clientWidth: number = 0;\n\tprotected _clientHeight: number = 0;\n\n\tpublic resolution: number;\n\tpublic interactionsEnabled: boolean = true;\n\n\tprotected _listeners: { [key: string]: CounterDisposer } = {};\n\tprotected _events: { [Key in keyof IRendererEvents]?: Events<Key> } = {};\n\n\tprotected _colorId: number = 0;\n\tprotected _colorMap: { [color: string]: CanvasDisplayObject } = {};\n\n\tpublic _forceInteractive: number = 0;\n\tpublic _omitTainted: boolean = false;\n\n\t// TODO this should store the Id as well\n\tpublic _hovering: Set<CanvasDisplayObject> = new Set();\n\tpublic _dragging: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\tpublic _mousedown: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\n\tprotected _lastPointerMoveEvent: { events: Array<IPointerEvent>, native: boolean } | undefined;\n\n\tpublic tapToActivate: boolean = false;\n\tpublic tapToActivateTimeout: number = 3000;\n\tpublic _touchActive: boolean = false;\n\tprotected _touchActiveTimeout?: number;\n\n\t/*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\n\t\tthis._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\n\t});\n\t*/\n\n\tconstructor(resolution?: number) {\n\t\tsuper();\n\n\t\tif (resolution == null) {\n\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t} else {\n\t\t\tthis.resolution = resolution;\n\t\t}\n\n\t\tthis.view.style.position = \"absolute\";\n\t\tthis.view.appendChild(this._layerDom);\n\n\t\tthis._disposers.push(new Disposer(() => {\n\t\t\t$object.each(this._events, (_key, events) => {\n\t\t\t\tevents.disposer.dispose();\n\t\t\t});\n\n\t\t\t$array.each(this.layers, (layer) => {\n\t\t\t\tclearCanvas(layer.view);\n\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tclearCanvas(layer.exportableView);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclearCanvas(this._ghostView);\n\t\t\tclearCanvas(this._patternCanvas);\n\t\t}));\n\n\t\t// @todo : do the same for ghost\n\t\tthis._ghostView = document.createElement(\"canvas\");\n\t\tthis._ghostContext = this._ghostView.getContext(\"2d\", { alpha: false, willReadFrequently: true })! as CanvasRenderingContext2D;\n\t\tthis._ghostContext.imageSmoothingEnabled = false;\n\n\t\tthis._ghostView.style.position = \"absolute\";\n\t\tthis._ghostView.style.top = \"0px\";\n\t\tthis._ghostView.style.left = \"0px\";\n\n\t\tthis._disposers.push($utils.addEventListener(this._ghostView, \"click\", (originalEvent: MouseEvent) => {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\t\t\tconsole.debug(target);\n\t\t}));\n\n\t\t// Monitor for possible pixel ratio changes (when page is zoomed)\n\t\tthis._disposers.push($utils.onZoom(() => {\n\t\t\tif (resolution == null) {\n\t\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t\t}\n\t\t}));\n\n\t\t// We need this in order top prevent default touch gestures when dragging\n\t\t// draggable elements\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tconst listener = (ev: any) => {\n\t\t\t\tif (this._dragging.length !== 0) {\n\t\t\t\t\t$array.eachContinue(this._dragging, (item) => {\n\t\t\t\t\t\tif (item.value.shouldCancelTouch()) {\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If touch down happends, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\n\t\t\t\t// If touch is moving, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"click\", (_ev: any) => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"click\", (_ev: any) => {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tthis._touchActive = true;\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}, 100);\n\t\t\t}, { passive: true }));\n\n\t\t}\n\n\t\t// Prevent scrolling of the window when hovering on \"wheelable\" object\n\t\tif ($utils.supports(\"wheelevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\n\t\t\t\tlet prevent = false;\n\t\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\t\tif (obj.wheelable) {\n\t\t\t\t\t\tprevent = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (prevent) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false }));\n\t\t}\n\n\t}\n\n\tprotected _delayTouchDeactivate(): void {\n\t\tif (this._touchActiveTimeout) {\n\t\t\tclearTimeout(this._touchActiveTimeout);\n\t\t}\n\t\tif (this.tapToActivateTimeout > 0) {\n\t\t\tthis._touchActiveTimeout = window.setTimeout(() => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, this.tapToActivateTimeout);\n\t\t}\n\t}\n\n\tpublic get debugGhostView(): boolean {\n\t\treturn !!this._ghostView.parentNode;\n\t}\n\n\tpublic set debugGhostView(value: boolean) {\n\t\tif (value) {\n\t\t\tif (!this._ghostView.parentNode) {\n\t\t\t\tthis.view.appendChild(this._ghostView);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._ghostView.parentNode) {\n\t\t\t\tthis._ghostView.parentNode.removeChild(this._ghostView);\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n\t}\n\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n\t}\n\n\tcreatePattern(graphics: CanvasGraphics, background: CanvasGraphics, repetition: string, width: number, height: number): CanvasPattern {\n\t\t// const patternCanvas = document.createElement(\"canvas\");\n\t\t// const patternContext = patternCanvas.getContext(\"2d\")!;\n\t\t// patternCanvas.width = width;\n\t\t// patternCanvas.height = height;\n\t\t// if (fill) {\n\t\t// \tpatternContext.fillStyle = fill.toCSS();\n\t\t// \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n\t\t// }\n\n\t\t// const layer = {\n\t\t// \tview: patternCanvas,\n\t\t// \tcontext: patternContext,\n\t\t// \tvisible: true,\n\t\t// \torder: 0,\n\t\t// \twidth: width,\n\t\t// \theight: height,\n\t\t// \tdirty: true\n\t\t// };\n\n\t\t// // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n\t\t// // patternContext.stroke();\n\n\t\t// image.targetLayer = layer;\n\t\t// image.render(layer);\n\n\t\t//this._layerDom.appendChild(patternCanvas);\n\n\t\tthis._patternCanvas.width = width;\n\t\tthis._patternCanvas.height = height;\n\n\t\tthis._patternContext.clearRect(0, 0, width, height);\n\n\t\t// patternCanvas.style.width = width * this.resolution + \"px\";\n\t\t// patternCanvas.style.height = height * this.resolution + \"px\";\n\n\t\tbackground.renderDetached(this._patternContext);\n\t\tgraphics.renderDetached(this._patternContext);\n\n\t\treturn this._patternContext.createPattern(this._patternCanvas, repetition)!;\n\t}\n\n\tmakeContainer(): CanvasContainer {\n\t\treturn new CanvasContainer(this);\n\t}\n\n\tmakeGraphics(): CanvasGraphics {\n\t\treturn new CanvasGraphics(this);\n\t}\n\n\tmakeText(text: string, style: CanvasTextStyle): CanvasText {\n\t\treturn new CanvasText(this, text, style);\n\t}\n\n\tmakeTextStyle(): CanvasTextStyle {\n\t\treturn new CanvasTextStyle();\n\t}\n\n\tmakeRadialText(text: string, style: CanvasTextStyle): CanvasRadialText {\n\t\treturn new CanvasRadialText(this, text, style);\n\t}\n\n\tmakePicture(image: HTMLImageElement | undefined): CanvasImage {\n\t\treturn new CanvasImage(this, image);\n\t}\n\n\tresizeLayer(layer: CanvasLayer) {\n\t\tlayer.dirty = true;\n\t\tlayer.resize(this._clientWidth, this._clientHeight, this.resolution);\n\t}\n\n\tresize(width: number, height: number): void {\n\t\tthis._clientWidth = width;\n\t\tthis._clientHeight = height;\n\t\tthis._width = Math.floor(width * this.resolution);\n\t\tthis._height = Math.floor(height * this.resolution);\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tthis.resizeLayer(layer);\n\t\t\t}\n\t\t});\n\n\t\t// @todo: do the same for ghost canvases\n\t\tthis._ghostView.width = this._width;\n\t\tthis._ghostView.height = this._height;\n\t\tthis._ghostView.style.width = width + \"px\";\n\t\tthis._ghostView.style.height = height + \"px\";\n\n\t\tthis.view.style.width = width + \"px\";\n\t\tthis.view.style.height = height + \"px\";\n\t}\n\n\tprivate createDetachedLayer(willReadFrequently: boolean = false): CanvasLayer {\n\t\tconst view = document.createElement(\"canvas\");\n\t\tconst context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently })! as CanvasRenderingContext2D;\n\n\t\tconst layer = new CanvasLayer(view, context);\n\n\t\tview.style.position = \"absolute\";\n\t\tview.style.top = \"0px\";\n\t\tview.style.left = \"0px\";\n\n\t\treturn layer;\n\t}\n\n\tgetLayerByOrder(order: number): CanvasLayer | undefined {\n\t\tconst layers = this.layers;\n\t\tconst length = layers.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst layer = layers[i];\n\t\t\tif (layer.order == order) {\n\t\t\t\treturn layer;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLayer(order: number, visible: boolean = true): CanvasLayer {\n\t\tlet existingLayer = this.getLayerByOrder(order);\n\t\tif (existingLayer) {\n\t\t\treturn existingLayer;\n\t\t}\n\n\t\tconst layer = this.createDetachedLayer(order == 99);\n\t\tlayer.order = order;\n\t\tlayer.visible = visible;\n\n\t\tif (layer.visible && this._width) {\n\t\t\tlayer.view.width = this._width;\n\t\t\tlayer.view.style.width = this._clientWidth + \"px\";\n\t\t\tlayer.view.height = this._height;\n\t\t\tlayer.view.style.height = this._clientHeight + \"px\";\n\t\t}\n\n\t\tconst layers = this.layers;\n\n\t\tlayers.push(layer);\n\n\t\tlayers.sort((a, b) => {\n\t\t\tif (a.order > b.order) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (a.order < b.order) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tconst length = layers.length;\n\t\tconst layerIndex = $array.indexOf(layers, layer);\n\t\tlet next;\n\n\t\tfor (let i = layerIndex + 1; i < length; i++) {\n\t\t\tif (layers[i].visible) {\n\t\t\t\tnext = layers[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (layer.visible) {\n\t\t\tif (next === undefined) {\n\t\t\t\tthis._layerDom.appendChild(layer.view);\n\n\t\t\t} else {\n\t\t\t\tthis._layerDom.insertBefore(layer.view, next.view);\n\t\t\t}\n\t\t}\n\n\t\treturn layer;\n\t}\n\n\trender(root: CanvasDisplayObject): void {\n\n\t\tthis._dirtyLayers.length = 0;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tif (layer.dirty && layer.visible) {\n\t\t\t\t\tthis._dirtyLayers.push(layer);\n\t\t\t\t\tlayer.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._ghostContext.save();\n\t\t//this._ghostContext.clearRect(0, 0, this._width, this._height);\n\t\t//this._ghostContext.beginPath();\n\t\tthis._ghostContext.fillStyle = '#000';\n\t\tthis._ghostContext.fillRect(0, 0, this._width, this._height);\n\n\t\troot.render(this.defaultLayer);\n\n\t\tthis._ghostContext.restore();\n\n\t\t//setTimeout(() => {\n\n\t\t// Remove this after the Chrome bug is fixed:\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tconst context = layer.context;\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(0, 0);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t});\n\n\t\t$array.each(this._dirtyLayers, (layer) => {\n\t\t\tlayer.context.restore();\n\t\t\tlayer.dirty = false;\n\t\t});\n\t\t//}, 100)\n\n\t\tif (this._hovering.size && this._lastPointerMoveEvent) {\n\t\t\t//this._mouseMoveThrottler.run();\n\t\t\tconst native = this._lastPointerMoveEvent.native;\n\n\t\t\t$array.each(this._lastPointerMoveEvent.events, (event) => {\n\t\t\t\tthis._dispatchGlobalMousemove(event, native);\n\t\t\t});\n\t\t}\n\t}\n\n\tpaintId(obj: CanvasDisplayObject): string {\n\t\tconst id = distributeId(++this._colorId);\n\t\tconst color = Color.fromHex(id).toCSS();\n\t\tthis._colorMap[color] = obj;\n\t\treturn color;\n\t}\n\n\t_removeObject(obj: CanvasDisplayObject): void {\n\t\tif (obj._colorId !== undefined) {\n\t\t\tdelete this._colorMap[obj._colorId];\n\t\t}\n\t}\n\n\t// protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n\t// \treturn this._colorMap[colorId];\n\t// }\n\n\tpublic getEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint: boolean = true): CanvasRendererEvent<A> {\n\t\tconst bbox: DOMRect = adjustPoint ? this.view.getBoundingClientRect() : new DOMRect(0, 0, 0, 0);\n\n\t\treturn new CanvasRendererEvent(\n\t\t\toriginalEvent,\n\t\t\t(originalEvent.clientX || originalEvent.clientY ? {\n\t\t\t\tx: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\n\t\t\t\ty: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0),\n\t\t\t} : {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t}),\n\t\t\tbbox,\n\t\t);\n\t}\n\n\t_getHitTarget(point: IPoint, bbox: DOMRect): CanvasDisplayObject | undefined | false {\n\t\tif (bbox.width === 0 || bbox.height === 0 || point.x < 0 || point.x > bbox.width || point.y < 0 || point.y > bbox.height) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tconst pixel = this._ghostContext.getImageData(\n\t\t\t\t// TODO should this round ?\n\t\t\t\tMath.round((point.x / bbox.width) * this._width),\n\t\t\t\tMath.round((point.y / bbox.height) * this._height),\n\t\t\t\t1,\n\t\t\t\t1\n\t\t\t);\n\n\t\t\tif (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n\t\t\tconst hit = this._colorMap[colorId];\n\n\t\t\treturn hit;\n\t\t}\n\t}\n\n\t_withEvents<Key extends keyof IRendererEvents>(key: Key, f: (events: Events<Key>) => void): void {\n\t\tconst events = this._events[key] as Events<Key> | undefined;\n\n\t\tif (events !== undefined) {\n\t\t\tevents.dispatching = true;\n\n\t\t\ttry {\n\t\t\t\tf(events);\n\n\t\t\t} finally {\n\t\t\t\tevents.dispatching = false;\n\n\t\t\t\tif (events.cleanup) {\n\t\t\t\t\tevents.cleanup = false;\n\n\t\t\t\t\t$array.keepIf(events.callbacks, (callback) => {\n\t\t\t\t\t\treturn !callback.disposed;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (events.callbacks.length === 0) {\n\t\t\t\t\t\tevents.disposer.dispose();\n\t\t\t\t\t\tdelete this._events[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_dispatchEventAll<Key extends keyof IRendererEvents>(key: Key, event: IRendererEvents[Key]): void {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_dispatchEvent<Key extends keyof IRendererEvents>(key: Key, target: CanvasDisplayObject, event: IRendererEvents[Key]): boolean {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet dispatched = false;\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed && callback.object === target) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t\tdispatched = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn dispatched;\n\t}\n\n\t_dispatchMousedown(originalEvent: IPointerEvent): void {\n\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tif (button != 0 && button != 2 && button != 1 && button !== undefined) {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\n\t\tif (target) {\n\t\t\tconst id = event.id;\n\n\t\t\tlet dragged = false;\n\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tconst info = { id: id, value: obj };\n\n\t\t\t\tthis._mousedown.push(info);\n\n\t\t\t\tif (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n\t\t\t\t\t// Only dispatch the first element which matches\n\t\t\t\t\tdragged = true;\n\n\t\t\t\t\tconst has = this._dragging.some((x) => {\n\t\t\t\t\t\treturn x.value === obj && x.id === id;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!has) {\n\t\t\t\t\t\tthis._dragging.push(info);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchGlobalMousemove(originalEvent: IPointerEvent, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\t\tevent.native = native;\n\n\t\tif (target) {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (!obj.contains(target)) {\n\t\t\t\t\tthis._hovering.delete(obj);\n\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t\t}\n\t\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (event.native) {\n\t\t\t\teachTargets(target, (obj) => {\n\t\t\t\t\tif (!this._hovering.has(obj)) {\n\t\t\t\t\t\tthis._hovering.add(obj);\n\t\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t\tobj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n\t\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(\"pointerover\", obj, event);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//} else if (target === false) {\n\t\t} else {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t}\n\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t});\n\n\t\t\tthis._hovering.clear();\n\t\t}\n\t\tthis._dispatchEventAll(\"globalpointermove\", event);\n\t}\n\n\t_dispatchGlobalMouseup(originalEvent: IPointerEvent, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tevent.native = native;\n\t\t//const target = this._getHitTarget(event.point);\n\t\tthis._dispatchEventAll(\"globalpointerup\", event);\n\t}\n\n\t_dispatchDragMove(originalEvent: IPointerEvent): void {\n\t\tif (this._dragging.length !== 0) {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst id = event.id;\n\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointermove\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchDragEnd(originalEvent: IPointerEvent): void {\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tlet clickevent: \"click\" | \"rightclick\" | \"middleclick\";\n\t\tif (button == 0 || button === undefined) {\n\t\t\tclickevent = \"click\";\n\t\t}\n\t\telse if (button == 2) {\n\t\t\tclickevent = \"rightclick\";\n\t\t}\n\t\telse if (button == 1) {\n\t\t\tclickevent = \"middleclick\";\n\t\t}\n\t\telse {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst id = event.id;\n\n\t\tif (this._mousedown.length !== 0) {\n\t\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\t\t\tif (target) {\n\t\t\t\tthis._mousedown.forEach((obj) => {\n\t\t\t\t\tif (obj.id === id && obj.value.contains(target)) {\n\t\t\t\t\t\tthis._dispatchEvent(clickevent, obj.value, event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._mousedown.length = 0;\n\t\t}\n\n\t\tif (this._dragging.length !== 0) {\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointerup\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._dragging.length = 0;\n\t\t}\n\t}\n\n\t_dispatchDoubleClick(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"dblclick\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchWheel(originalEvent: WheelEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"wheel\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_makeSharedEvent(key: string, f: () => IDisposer): IDisposer {\n\t\tif (this._listeners[key] === undefined) {\n\t\t\tconst listener = f();\n\n\t\t\tthis._listeners[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._listeners[key];\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn this._listeners[key].increment();\n\t}\n\n\t_onPointerEvent(name: string, f: (event: Array<IPointerEvent>, native: boolean) => void): IDisposer {\n\t\tlet native = false;\n\t\tlet timer: number | null = null;\n\n\t\tfunction clear() {\n\t\t\ttimer = null;\n\t\t\tnative = false;\n\t\t}\n\n\t\treturn new MultiDisposer([\n\t\t\tnew Disposer(() => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\tclear();\n\t\t\t}),\n\n\t\t\t$utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\n\t\t\t\tnative = true;\n\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\ttimer = window.setTimeout(clear, 0);\n\t\t\t}),\n\n\t\t\tonPointerEvent(window, name, (ev) => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\ttimer = null;\n\t\t\t\t}\n\n\t\t\t\tf(ev, native);\n\n\t\t\t\tnative = false;\n\t\t\t}),\n\t\t]);\n\t}\n\n\t// This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n\t_initEvent(key: keyof IRendererEvents): IDisposer | undefined {\n\t\tswitch (key) {\n\t\t\tcase \"globalpointermove\":\n\t\t\tcase \"pointerover\":\n\t\t\tcase \"pointerout\":\n\t\t\t\treturn this._makeSharedEvent(\"pointermove\", () => {\n\t\t\t\t\tconst listener = (events: Array<IPointerEvent>, native: boolean) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, native };\n\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMousemove(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new MultiDisposer([\n\t\t\t\t\t\tthis._onPointerEvent(\"pointerdown\", listener),\n\t\t\t\t\t\tthis._onPointerEvent(\"pointermove\", listener),\n\t\t\t\t\t]);\n\t\t\t\t});\n\t\t\tcase \"globalpointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerup\", () => {\n\t\t\t\t\tvar mouseup = this._onPointerEvent(\"pointerup\", (events, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, native };\n\t\t\t\t\t});\n\n\t\t\t\t\tvar pointercancel = this._onPointerEvent(\"pointercancel\", (events, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, native };\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"click\":\n\t\t\tcase \"rightclick\":\n\t\t\tcase \"middleclick\":\n\t\t\tcase \"pointerdown\":\n\t\t\t/*\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"pointerdown\", (event, native) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { event, native };\n\t\t\t\t\t\tthis._dispatchMousedown(event)\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t*/\n\t\t\tcase \"pointermove\":\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\tconst mousedown = onPointerEvent(this.view, \"pointerdown\", (events) => {\n\t\t\t\t\t\t$array.each(events, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchMousedown(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\tconst mousemove = this._onPointerEvent(\"pointermove\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragMove(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst mouseup = this._onPointerEvent(\"pointerup\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst pointercancel = this._onPointerEvent(\"pointercancel\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmousedown.dispose();\n\t\t\t\t\t\tmousemove.dispose();\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"dblclick\":\n\t\t\t\treturn this._makeSharedEvent(\"dblclick\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"dblclick\", (ev) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDoubleClick(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"wheel\":\n\t\t\t\treturn this._makeSharedEvent(\"wheel\", () => {\n\t\t\t\t\treturn $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), (event: WheelEvent) => {\n\t\t\t\t\t\tthis._dispatchWheel(event);\n\t\t\t\t\t}, { passive: false });\n\t\t\t\t});\n\t\t}\n\t}\n\n\t_addEvent<C, Key extends keyof IRendererEvents>(object: CanvasDisplayObject, key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tlet events: Events<Key> | undefined = this._events[key] as any;\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._events[key] = {\n\t\t\t\tdisposer: this._initEvent(key)!,\n\t\t\t\tcallbacks: [],\n\t\t\t\tdispatching: false,\n\t\t\t\tcleanup: false,\n\t\t\t};\n\t\t}\n\n\t\tconst listener = { object, context, callback, disposed: false };\n\n\t\tevents!.callbacks.push(listener);\n\n\t\treturn new Disposer(() => {\n\t\t\tlistener.disposed = true;\n\n\t\t\tif (events!.dispatching) {\n\t\t\t\tevents!.cleanup = true;\n\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(events!.callbacks, listener);\n\n\t\t\t\tif (events!.callbacks.length === 0) {\n\t\t\t\t\tevents!.disposer.dispose();\n\t\t\t\t\tdelete this._events[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getCanvas(root: CanvasDisplayObject, options?: ICanvasOptions): HTMLCanvasElement {\n\n\t\t// Make sure everything is rendered\n\t\tthis.render(root);\n\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tlet scale: number = this.resolution;\n\n\t\t// Check if we need to scale\n\t\tif (options.minWidth && (options.minWidth > this._width)) {\n\t\t\tlet minScale = options.minWidth / this._width;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.minHeight && (options.minHeight > this._height)) {\n\t\t\tlet minScale = options.minHeight / this._height;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxWidth && (options.maxWidth < this._width)) {\n\t\t\tlet maxScale = options.maxWidth / this._width;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxHeight && (options.maxHeight > this._height)) {\n\t\t\tlet maxScale = options.maxHeight / this._height;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\t// Check if we need to compensate for pixel ratio\n\t\tif (options.maintainPixelRatio) {\n\t\t\tscale /= this.resolution;\n\t\t}\n\n\t\t// Init list canvases to remove from DOM after export\n\t\tconst canvases: HTMLCanvasElement[] = [];\n\n\t\t// Set up new canvas for export\n\t\tlet forceRender = false;\n\t\tlet canvasWidth = this._width;\n\t\tlet canvasHeight = this._height;\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tif (scale != this.resolution) {\n\t\t\tforceRender = true;\n\t\t\tcanvasWidth = this._width * scale / this.resolution;\n\t\t\tcanvasHeight = this._height * scale / this.resolution;\n\t\t}\n\n\t\tcanvas.width = canvasWidth;\n\t\tcanvas.height = canvasHeight;\n\n\t\t// Add to DOM so it inherits CSS\n\t\tcanvas.style.position = \"fixed\";\n\t\tcanvas.style.top = \"-10000px\";\n\t\tthis.view.appendChild(canvas);\n\t\tcanvases.push(canvas);\n\n\t\t// Context\n\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet needRerender = false;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\t\t\t\tif (layer.tainted || forceRender) {\n\t\t\t\t\tneedRerender = true;\n\n\t\t\t\t\tlayer.exportableView = layer.view;\n\t\t\t\t\tlayer.exportableContext = layer.context;\n\n\t\t\t\t\tlayer.view = document.createElement(\"canvas\");\n\n\t\t\t\t\t// Add to DOM so it inherits CSS\n\t\t\t\t\tlayer.view.style.position = \"fixed\";\n\t\t\t\t\tlayer.view.style.top = \"-10000px\";\n\t\t\t\t\tthis.view.appendChild(layer.view);\n\t\t\t\t\tcanvases.push(layer.view);\n\n\t\t\t\t\tlayer.view.width = canvasWidth;\n\t\t\t\t\tlayer.view.height = canvasHeight;\n\n\t\t\t\t\tlayer.context = layer.view.getContext(\"2d\")!;\n\n\t\t\t\t\tlayer.dirty = true;\n\t\t\t\t\tlayer.scale = scale;\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (needRerender) {\n\t\t\tthis._omitTainted = true;\n\t\t\tthis.render(root);\n\t\t\tthis._omitTainted = false;\n\t\t}\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\n\t\t\t\t// Layer is fine. Just plop it into our target canvas\n\t\t\t\tcontext.drawImage(layer.view, 0, 0);\n\n\t\t\t\t// Restore layer original canvas\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tlayer.view = layer.exportableView;\n\t\t\t\t\tlayer.exportableView = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (layer.exportableContext) {\n\t\t\t\t\tlayer.context = layer.exportableContext;\n\t\t\t\t\tlayer.exportableContext = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (width < layer.view.clientWidth) {\n\t\t\t\t\twidth = layer.view.clientWidth;\n\t\t\t\t}\n\t\t\t\tif (height < layer.view.clientHeight) {\n\t\t\t\t\theight = layer.view.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tlayer.scale = undefined;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\t$array.each(canvases, (canvas) => {\n\t\t\tcanvas.style.position = \"\";\n\t\t\tcanvas.style.top = \"\";\n\t\t\tthis.view.removeChild(canvas);\n\t\t})\n\n\t\treturn canvas;\n\t}\n\n}\n\n\n/**\n * @ignore\n */\nexport class CanvasLayer implements ILayer {\n\tpublic view: HTMLCanvasElement;\n\tpublic context: CanvasRenderingContext2D;\n\tpublic tainted: boolean = true;\n\tpublic margin: IMargin | undefined;\n\tpublic order: number = 0;\n\tpublic visible: boolean = true;\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic scale: number | undefined;\n\tpublic dirty: boolean = true;\n\tpublic exportableView: HTMLCanvasElement | undefined;\n\tpublic exportableContext: CanvasRenderingContext2D | undefined;\n\n\tprivate _width: number = 0;\n\tprivate _height: number = 0;\n\n\tconstructor(view: HTMLCanvasElement, context: CanvasRenderingContext2D) {\n\t\tthis.view = view;\n\t\tthis.context = context;\n\t}\n\n\tresize(width: number, height: number, resolution: number) {\n\t\tif (this.width != null) {\n\t\t\twidth = this.width;\n\t\t}\n\n\t\tif (this.height != null) {\n\t\t\theight = this.height;\n\t\t}\n\n\t\tif (this.margin) {\n\t\t\twidth += (this.margin.left + this.margin.right);\n\t\t\theight += (this.margin.top + this.margin.bottom);\n\t\t\tthis.view.style.left = -this.margin.left + \"px\";\n\t\t\tthis.view.style.top = -this.margin.top + \"px\";\n\n\t\t} else {\n\t\t\tthis.view.style.left = \"0px\";\n\t\t\tthis.view.style.top = \"0px\";\n\t\t}\n\n\t\tthis._width = Math.floor(width * resolution);\n\t\tthis._height = Math.floor(height * resolution);\n\n\t\tthis.view.width = this._width;\n\t\tthis.view.style.width = width + \"px\";\n\n\t\tthis.view.height = this._height;\n\t\tthis.view.style.height = height + \"px\";\n\t}\n\n\tclear() {\n\t\tthis.context.save();\n\t\tthis.context.clearRect(0, 0, this._width, this._height);\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}