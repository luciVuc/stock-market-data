{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require(\"react\");\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require(\"prop-types\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _d3Shape = require(\"d3-shape\");\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\nvar _GenericComponent = require(\"../GenericComponent\");\nvar _utils = require(\"../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar KagiSeries = function (_Component) {\n  _inherits(KagiSeries, _Component);\n  function KagiSeries(props) {\n    _classCallCheck(this, KagiSeries);\n    var _this = _possibleConstructorReturn(this, (KagiSeries.__proto__ || Object.getPrototypeOf(KagiSeries)).call(this, props));\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n  _createClass(KagiSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      _drawOnCanvas(ctx, this.props, moreProps, xAccessor);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        canvasDraw: this.drawOnCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n        yScale = moreProps.chartConfig.yScale,\n        plotData = moreProps.plotData;\n      var _props = this.props,\n        className = _props.className,\n        stroke = _props.stroke,\n        fill = _props.fill,\n        strokeWidth = _props.strokeWidth;\n      var paths = helper(plotData, xAccessor).map(function (each, i) {\n        var dataSeries = (0, _d3Shape.line)().x(function (item) {\n          return xScale(item[0]);\n        }).y(function (item) {\n          return yScale(item[1]);\n        }).curve(_d3Shape.curveStepBefore);\n        dataSeries(each.plot);\n        return _react2.default.createElement(\"path\", {\n          key: i,\n          d: dataSeries(each.plot),\n          className: each.type,\n          stroke: stroke[each.type],\n          fill: fill[each.type],\n          strokeWidth: strokeWidth\n        });\n      });\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, paths);\n    }\n  }]);\n  return KagiSeries;\n}(_react.Component);\nKagiSeries.propTypes = {\n  className: _propTypes2.default.string,\n  stroke: _propTypes2.default.object,\n  fill: _propTypes2.default.object,\n  strokeWidth: _propTypes2.default.number.isRequired\n};\nKagiSeries.defaultProps = {\n  className: \"react-stockcharts-kagi\",\n  strokeWidth: 2,\n  stroke: {\n    yang: \"#6BA583\",\n    yin: \"#E60000\"\n  },\n  fill: {\n    yang: \"none\",\n    yin: \"none\"\n  },\n  currentValueStroke: \"#000000\"\n};\nfunction _drawOnCanvas(ctx, props, moreProps, xAccessor) {\n  var stroke = props.stroke,\n    strokeWidth = props.strokeWidth,\n    currentValueStroke = props.currentValueStroke;\n  var xScale = moreProps.xScale,\n    yScale = moreProps.chartConfig.yScale,\n    plotData = moreProps.plotData;\n  var paths = helper(plotData, xAccessor);\n  var begin = true;\n  paths.forEach(function (each) {\n    ctx.strokeStyle = stroke[each.type];\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    var prevX = void 0;\n    each.plot.forEach(function (d) {\n      var _ref = [xScale(d[0]), yScale(d[1])],\n        x = _ref[0],\n        y = _ref[1];\n      if (begin) {\n        ctx.moveTo(x, y);\n        begin = false;\n      } else {\n        if ((0, _utils.isDefined)(prevX)) {\n          ctx.lineTo(prevX, y);\n        }\n        ctx.lineTo(x, y);\n      }\n      prevX = x;\n      // console.log(d);\n    });\n\n    ctx.stroke();\n  });\n  var lastPlot = paths[paths.length - 1].plot;\n  var last = lastPlot[lastPlot.length - 1];\n  ctx.beginPath();\n  // ctx.strokeStyle = \"black\";\n  ctx.lineWidth = 1;\n  var _ref2 = [xScale(last[0]), yScale(last[2]), yScale(last[3])],\n    x = _ref2[0],\n    y1 = _ref2[1],\n    y2 = _ref2[2];\n  // console.log(last, x, y);\n\n  ctx.moveTo(x, y1);\n  ctx.lineTo(x + 10, y1);\n  ctx.stroke();\n  ctx.beginPath();\n  ctx.strokeStyle = currentValueStroke;\n  ctx.moveTo(x - 10, y2);\n  ctx.lineTo(x, y2);\n  ctx.stroke();\n}\nfunction helper(plotData, xAccessor) {\n  var kagiLine = [];\n  var kagi = {};\n  var d = plotData[0];\n  var idx = xAccessor(d);\n  for (var i = 0; i < plotData.length; i++) {\n    d = plotData[i];\n    if ((0, _utils.isNotDefined)(d.close)) continue;\n    if ((0, _utils.isNotDefined)(kagi.type)) kagi.type = d.startAs;\n    if ((0, _utils.isNotDefined)(kagi.plot)) kagi.plot = [];\n    idx = xAccessor(d);\n    kagi.plot.push([idx, d.open]);\n    if ((0, _utils.isDefined)(d.changeTo)) {\n      kagi.plot.push([idx, d.changePoint]);\n      kagi.added = true;\n      kagiLine.push(kagi);\n      kagi = {\n        type: d.changeTo,\n        plot: [],\n        added: false\n      };\n      kagi.plot.push([idx, d.changePoint]);\n    }\n  }\n  if (!kagi.added) {\n    kagi.plot.push([idx, d.close, d.current, d.reverseAt]);\n    kagiLine.push(kagi);\n  }\n\n  // console.log(d.reverseAt);\n\n  return kagiLine;\n}\nexports.default = KagiSeries;","map":{"version":3,"mappings":"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","names":["KagiSeries","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","_react2","svgDraw","canvasToDraw","canvasDraw","drawOn","xScale","yScale","chartConfig","plotData","className","stroke","fill","strokeWidth","paths","helper","map","each","i","dataSeries","x","item","y","curve","plot","key","d","type","propTypes","_propTypes2","string","object","number","isRequired","defaultProps","yang","yin","currentValueStroke","begin","forEach","strokeStyle","lineWidth","beginPath","prevX","moveTo","lineTo","lastPlot","length","last","y1","y2","kagiLine","kagi","idx","close","startAs","push","open","changeTo","changePoint","added","current","reverseAt"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\lib\\series\\KagiSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { line, curveStepBefore } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass KagiSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\tdrawOnCanvas(ctx, this.props, moreProps, xAccessor);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { className, stroke, fill, strokeWidth } = this.props;\n\n\t\tconst paths = helper(plotData, xAccessor).map((each, i) => {\n\t\t\tconst dataSeries = line()\n\t\t\t\t.x((item) => xScale(item[0]))\n\t\t\t\t.y((item) => yScale(item[1]))\n\t\t\t\t.curve(curveStepBefore);\n\n\t\t\tdataSeries(each.plot);\n\n\t\t\treturn (<path key={i} d={dataSeries(each.plot)} className={each.type}\n\t\t\t\tstroke={stroke[each.type]} fill={fill[each.type]} strokeWidth={strokeWidth} />);\n\t\t});\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{paths}\n\t\t\t</g>\n\t\t);\n\t}\n}\nKagiSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstroke: PropTypes.object,\n\tfill: PropTypes.object,\n\tstrokeWidth: PropTypes.number.isRequired,\n};\n\nKagiSeries.defaultProps = {\n\tclassName: \"react-stockcharts-kagi\",\n\tstrokeWidth: 2,\n\tstroke: {\n\t\tyang: \"#6BA583\",\n\t\tyin: \"#E60000\"\n\t},\n\tfill: {\n\t\tyang: \"none\",\n\t\tyin: \"none\"\n\t},\n\tcurrentValueStroke: \"#000000\",\n};\n\nfunction drawOnCanvas(ctx, props, moreProps, xAccessor) {\n\tconst { stroke, strokeWidth, currentValueStroke } = props;\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst paths = helper(plotData, xAccessor);\n\n\tlet begin = true;\n\n\tpaths.forEach((each) => {\n\t\tctx.strokeStyle = stroke[each.type];\n\t\tctx.lineWidth = strokeWidth;\n\n\t\tctx.beginPath();\n\t\tlet prevX;\n\t\teach.plot.forEach(d => {\n\t\t\tconst [x, y] = [xScale(d[0]), yScale(d[1])];\n\t\t\tif (begin) {\n\t\t\t\tctx.moveTo(x, y);\n\t\t\t\tbegin = false;\n\t\t\t} else {\n\t\t\t\tif (isDefined(prevX)) {\n\t\t\t\t\tctx.lineTo(prevX, y);\n\t\t\t\t}\n\t\t\t\tctx.lineTo(x, y);\n\t\t\t}\n\t\t\tprevX = x;\n\t\t\t// console.log(d);\n\n\t\t});\n\t\tctx.stroke();\n\t});\n\tconst lastPlot = paths[paths.length - 1].plot;\n\tconst last = lastPlot[lastPlot.length - 1];\n\tctx.beginPath();\n\t// ctx.strokeStyle = \"black\";\n\tctx.lineWidth = 1;\n\n\tconst [x, y1, y2] = [xScale(last[0]), yScale(last[2]), yScale(last[3])];\n\t// console.log(last, x, y);\n\tctx.moveTo(x, y1);\n\tctx.lineTo(x + 10, y1);\n\tctx.stroke();\n\n\tctx.beginPath();\n\tctx.strokeStyle = currentValueStroke;\n\tctx.moveTo(x - 10, y2);\n\tctx.lineTo(x, y2);\n\tctx.stroke();\n}\n\nfunction helper(plotData, xAccessor) {\n\tconst kagiLine = [];\n\tlet kagi = {};\n\tlet d = plotData[0];\n\tlet idx = xAccessor(d);\n\n\tfor (let i = 0; i < plotData.length; i++) {\n\t\td = plotData[i];\n\n\t\tif (isNotDefined(d.close)) continue;\n\t\tif (isNotDefined(kagi.type)) kagi.type = d.startAs;\n\t\tif (isNotDefined(kagi.plot)) kagi.plot = [];\n\n\t\tidx = xAccessor(d);\n\t\tkagi.plot.push([idx, d.open]);\n\n\t\tif (isDefined(d.changeTo)) {\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t\tkagi.added = true;\n\t\t\tkagiLine.push(kagi);\n\n\t\t\tkagi = {\n\t\t\t\ttype: d.changeTo,\n\t\t\t\tplot: [],\n\t\t\t\tadded: false,\n\t\t\t};\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t}\n\t}\n\n\tif (!kagi.added) {\n\t\tkagi.plot.push([idx, d.close, d.current, d.reverseAt]);\n\t\tkagiLine.push(kagi);\n\t}\n\n\t// console.log(d.reverseAt);\n\n\treturn kagiLine;\n}\n\nexport default KagiSeries;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}