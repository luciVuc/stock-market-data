{"ast":null,"code":"import noop from \"./noop\";\nimport identity from \"./identity\";\nimport { functor } from \"./index\";\nexport default function () {\n  var undefinedValue = undefined,\n    windowSize = 10,\n    accumulator = noop,\n    source = identity,\n    skipInitial = 0;\n\n  // eslint-disable-next-line prefer-const\n  var mappedSlidingWindow = function mappedSlidingWindow(data) {\n    var size = functor(windowSize).apply(this, arguments);\n    var windowData = [];\n    var accumulatorIdx = 0;\n    var undef = functor(undefinedValue);\n    // console.log(skipInitial, size, data.length, windowData.length);\n    var result = [];\n    data.forEach(function (d, i) {\n      // console.log(d, i, windowData.length);\n      var mapped = void 0;\n      if (i < skipInitial + size - 1) {\n        mapped = undef(d, i);\n        result.push(mapped);\n        windowData.push(mapped);\n        return;\n      }\n      if (i >= skipInitial + size) {\n        // Treat windowData as FIFO rolling buffer\n        windowData.shift();\n      }\n      windowData.push(source(d, i));\n      mapped = accumulator(windowData, i, accumulatorIdx++);\n      result.push(mapped);\n      windowData.pop();\n      windowData.push(mapped);\n      return;\n    });\n    return result;\n  };\n  mappedSlidingWindow.undefinedValue = function (x) {\n    if (!arguments.length) {\n      return undefinedValue;\n    }\n    undefinedValue = x;\n    return mappedSlidingWindow;\n  };\n  mappedSlidingWindow.windowSize = function (x) {\n    if (!arguments.length) {\n      return windowSize;\n    }\n    windowSize = x;\n    return mappedSlidingWindow;\n  };\n  mappedSlidingWindow.accumulator = function (x) {\n    if (!arguments.length) {\n      return accumulator;\n    }\n    accumulator = x;\n    return mappedSlidingWindow;\n  };\n  mappedSlidingWindow.skipInitial = function (x) {\n    if (!arguments.length) {\n      return skipInitial;\n    }\n    skipInitial = x;\n    return mappedSlidingWindow;\n  };\n  mappedSlidingWindow.source = function (x) {\n    if (!arguments.length) {\n      return source;\n    }\n    source = x;\n    return mappedSlidingWindow;\n  };\n  return mappedSlidingWindow;\n}","map":{"version":3,"mappings":"AAEA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,eAAe,YAAW;EAEzB,IAAIC,iBAAiBC,SAArB;IACCC,aAAa,EADd;IAECC,cAAcN,IAFf;IAGCO,SAASN,QAHV;IAICO,cAAc,CAJf;;EAMA;EACA,IAAIC,sBAAsB,SAAtBA,mBAAsB,CAASC,IAAT,EAAe;IACxC,IAAMC,OAAOT,QAAQG,UAAR,EAAoBO,KAApB,CAA0B,IAA1B,EAAgCC,SAAhC,CAAb;IACA,IAAMC,aAAa,EAAnB;IACA,IAAIC,iBAAiB,CAArB;IACA,IAAMC,QAAQd,QAAQC,cAAR,CAAd;IACA;IACA,IAAMc,SAAS,EAAf;IACAP,KAAKQ,OAAL,CAAa,UAASC,CAAT,EAAYC,CAAZ,EAAe;MAC3B;MACA,IAAIC,eAAJ;MACA,IAAID,IAAKZ,cAAcG,IAAd,GAAqB,CAA9B,EAAkC;QACjCU,SAASL,MAAMG,CAAN,EAASC,CAAT,CAAT;QACAH,OAAOK,IAAP,CAAYD,MAAZ;QACAP,WAAWQ,IAAX,CAAgBD,MAAhB;QACA;MACA;MACD,IAAID,KAAMZ,cAAcG,IAAxB,EAA+B;QAC9B;QACAG,WAAWS,KAAX;MACA;MACDT,WAAWQ,IAAX,CAAgBf,OAAOY,CAAP,EAAUC,CAAV,CAAhB;MACAC,SAASf,YAAYQ,UAAZ,EAAwBM,CAAxB,EAA2BL,gBAA3B,CAAT;MACAE,OAAOK,IAAP,CAAYD,MAAZ;MACAP,WAAWU,GAAX;MACAV,WAAWQ,IAAX,CAAgBD,MAAhB;MACA;IACA,CAnBD;IAoBA,OAAOJ,MAAP;EACA,CA5BD;EA8BAR,oBAAoBN,cAApB,GAAqC,UAASsB,CAAT,EAAY;IAChD,IAAI,CAACZ,UAAUa,MAAf,EAAuB;MACtB,OAAOvB,cAAP;IACA;IACDA,iBAAiBsB,CAAjB;IACA,OAAOhB,mBAAP;EACA,CAND;EAOAA,oBAAoBJ,UAApB,GAAiC,UAASoB,CAAT,EAAY;IAC5C,IAAI,CAACZ,UAAUa,MAAf,EAAuB;MACtB,OAAOrB,UAAP;IACA;IACDA,aAAaoB,CAAb;IACA,OAAOhB,mBAAP;EACA,CAND;EAOAA,oBAAoBH,WAApB,GAAkC,UAASmB,CAAT,EAAY;IAC7C,IAAI,CAACZ,UAAUa,MAAf,EAAuB;MACtB,OAAOpB,WAAP;IACA;IACDA,cAAcmB,CAAd;IACA,OAAOhB,mBAAP;EACA,CAND;EAOAA,oBAAoBD,WAApB,GAAkC,UAASiB,CAAT,EAAY;IAC7C,IAAI,CAACZ,UAAUa,MAAf,EAAuB;MACtB,OAAOlB,WAAP;IACA;IACDA,cAAciB,CAAd;IACA,OAAOhB,mBAAP;EACA,CAND;EAOAA,oBAAoBF,MAApB,GAA6B,UAASkB,CAAT,EAAY;IACxC,IAAI,CAACZ,UAAUa,MAAf,EAAuB;MACtB,OAAOnB,MAAP;IACA;IACDA,SAASkB,CAAT;IACA,OAAOhB,mBAAP;EACA,CAND;EAQA,OAAOA,mBAAP;AACA","names":["noop","identity","functor","undefinedValue","undefined","windowSize","accumulator","source","skipInitial","mappedSlidingWindow","data","size","apply","arguments","windowData","accumulatorIdx","undef","result","forEach","d","i","mapped","push","shift","pop","x","length"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\lib\\utils\\mappedSlidingWindow.js"],"sourcesContent":["\n\nimport noop from \"./noop\";\nimport identity from \"./identity\";\nimport { functor } from \"./index\";\n\nexport default function() {\n\n\tlet undefinedValue = undefined,\n\t\twindowSize = 10,\n\t\taccumulator = noop,\n\t\tsource = identity,\n\t\tskipInitial = 0;\n\n\t// eslint-disable-next-line prefer-const\n\tlet mappedSlidingWindow = function(data) {\n\t\tconst size = functor(windowSize).apply(this, arguments);\n\t\tconst windowData = [];\n\t\tlet accumulatorIdx = 0;\n\t\tconst undef = functor(undefinedValue);\n\t\t// console.log(skipInitial, size, data.length, windowData.length);\n\t\tconst result = [];\n\t\tdata.forEach(function(d, i) {\n\t\t\t// console.log(d, i, windowData.length);\n\t\t\tlet mapped;\n\t\t\tif (i < (skipInitial + size - 1)) {\n\t\t\t\tmapped = undef(d, i);\n\t\t\t\tresult.push(mapped);\n\t\t\t\twindowData.push(mapped);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (i >= (skipInitial + size)) {\n\t\t\t\t// Treat windowData as FIFO rolling buffer\n\t\t\t\twindowData.shift();\n\t\t\t}\n\t\t\twindowData.push(source(d, i));\n\t\t\tmapped = accumulator(windowData, i, accumulatorIdx++);\n\t\t\tresult.push(mapped);\n\t\t\twindowData.pop();\n\t\t\twindowData.push(mapped);\n\t\t\treturn;\n\t\t});\n\t\treturn result;\n\t};\n\n\tmappedSlidingWindow.undefinedValue = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn undefinedValue;\n\t\t}\n\t\tundefinedValue = x;\n\t\treturn mappedSlidingWindow;\n\t};\n\tmappedSlidingWindow.windowSize = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn windowSize;\n\t\t}\n\t\twindowSize = x;\n\t\treturn mappedSlidingWindow;\n\t};\n\tmappedSlidingWindow.accumulator = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn accumulator;\n\t\t}\n\t\taccumulator = x;\n\t\treturn mappedSlidingWindow;\n\t};\n\tmappedSlidingWindow.skipInitial = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn skipInitial;\n\t\t}\n\t\tskipInitial = x;\n\t\treturn mappedSlidingWindow;\n\t};\n\tmappedSlidingWindow.source = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn source;\n\t\t}\n\t\tsource = x;\n\t\treturn mappedSlidingWindow;\n\t};\n\n\treturn mappedSlidingWindow;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}