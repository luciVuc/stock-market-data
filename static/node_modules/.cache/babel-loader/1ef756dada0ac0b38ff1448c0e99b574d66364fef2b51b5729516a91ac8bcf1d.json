{"ast":null,"code":"/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar DateAxisBreak = /** @class */function (_super) {\n  __extends(DateAxisBreak, _super);\n  /**\r\n   * Constructor\r\n   */\n  function DateAxisBreak() {\n    var _this = _super.call(this) || this;\n    _this.className = \"DateAxisBreak\";\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(DateAxisBreak.prototype, \"startDate\", {\n    /**\r\n     * @return Start date\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startDate\");\n    },\n    /**\r\n     * Starting date for the break.\r\n     *\r\n     * @param value Start date\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startDate\", value)) {\n        this.startValue = value.getTime();\n        if (this.axis) {\n          this.axis.invalidate();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateAxisBreak.prototype, \"endDate\", {\n    /**\r\n     * @return End date\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endDate\");\n    },\n    /**\r\n     * Ending date for the break.\r\n     *\r\n     * @param value End date\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endDate\", value)) {\n        this.endValue = value.getTime();\n        if (this.axis) {\n          this.axis.invalidate();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DateAxisBreak;\n}(ValueAxisBreak);\nexport { DateAxisBreak };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;","map":{"version":3,"mappings":"AAAA;;;;;;;AAOA;;;;;;AAOA,SAASA,cAAc,QAAmF,kBAAkB;AAG5H,SAASC,QAAQ,QAAQ,qBAAqB;AAwC9C;;;;;;AAOA;;;;;;;;;;AAUA;EAAmCC;EAsClC;;;EAGA;IAAA,YACCC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,eAAe;IAChCD,KAAI,CAACE,UAAU,EAAE;;EAClB;EAOAC,sBAAWC,oCAAS;IAUpB;;;SAGA;MACC,OAAO,IAAI,CAACC,gBAAgB,CAAC,WAAW,CAAC;IAC1C,CAAC;IApBD;;;;;SAKA,UAAqBC,KAAW;MAC/B,IAAI,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAED,KAAK,CAAC,EAAE;QAC9C,IAAI,CAACE,UAAU,GAAGF,KAAK,CAACG,OAAO,EAAE;QACjC,IAAI,IAAI,CAACC,IAAI,EAAE;UACd,IAAI,CAACA,IAAI,CAACC,UAAU,EAAE;UACtB,IAAI,CAACD,IAAI,CAACE,gBAAgB,EAAE;;;IAG/B,CAAC;;;;EAcDT,sBAAWC,kCAAO;IAUlB;;;SAGA;MACC,OAAO,IAAI,CAACC,gBAAgB,CAAC,SAAS,CAAC;IACxC,CAAC;IApBD;;;;;SAKA,UAAmBC,KAAW;MAC7B,IAAI,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAED,KAAK,CAAC,EAAE;QAC5C,IAAI,CAACO,QAAQ,GAAGP,KAAK,CAACG,OAAO,EAAE;QAC/B,IAAI,IAAI,CAACC,IAAI,EAAE;UACd,IAAI,CAACA,IAAI,CAACC,UAAU,EAAE;UACtB,IAAI,CAACD,IAAI,CAACE,gBAAgB,EAAE;;;IAG/B,CAAC;;;;EASF,oBAAC;AAAD,CAAC,CA3FkChB,cAAc;;AA6FjD;;;;;;AAMAC,QAAQ,CAACiB,iBAAiB,CAAC,eAAe,CAAC,GAAGV,aAAa","names":["ValueAxisBreak","registry","__extends","_super","_this","className","applyTheme","Object","DateAxisBreak","getPropertyValue","value","setPropertyValue","startValue","getTime","axis","invalidate","invalidateSeries","endValue","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\axes\\DateAxisBreak.ts"],"sourcesContent":["/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { ValueAxisBreak, IValueAxisBreakProperties, IValueAxisBreakAdapters, IValueAxisBreakEvents } from \"./ValueAxisBreak\";\r\nimport { DateAxis } from \"./DateAxis\";\r\nimport { ITimeInterval } from \"../../core/defs/ITimeInterval\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[DateAxisBreak]].\r\n */\r\nexport interface IDateAxisBreakProperties extends IValueAxisBreakProperties {\r\n\r\n\t/**\r\n\t * A `Date` break starts on.\r\n\t */\r\n\tstartDate?: Date;\r\n\r\n\t/**\r\n\t * A `Date` break ends on.\r\n\t */\r\n\tendDate?: Date;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[DateAxisBreak]]\r\n */\r\nexport interface IDateAxisBreakEvents extends IValueAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[DateAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDateAxisBreakAdapters extends IValueAxisBreakAdapters, IDateAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class DateAxisBreak extends ValueAxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IDateAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDateAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDateAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: DateAxis;\r\n\r\n\t/**\r\n\t * [gridInterval description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic gridInterval: ITimeInterval;\r\n\r\n\t/**\r\n\t * [gridDate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic gridDate: Date;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DateAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Starting date for the break.\r\n\t *\r\n\t * @param value Start date\r\n\t */\r\n\tpublic set startDate(value: Date) {\r\n\t\tif (this.setPropertyValue(\"startDate\", value)) {\r\n\t\t\tthis.startValue = value.getTime();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start date\r\n\t */\r\n\tpublic get startDate(): Date {\r\n\t\treturn this.getPropertyValue(\"startDate\");\r\n\t}\r\n\r\n\t/**\r\n\t * Ending date for the break.\r\n\t *\r\n\t * @param value End date\r\n\t */\r\n\tpublic set endDate(value: Date) {\r\n\t\tif (this.setPropertyValue(\"endDate\", value)) {\r\n\t\t\tthis.endValue = value.getTime();\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidate();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End date\r\n\t */\r\n\tpublic get endDate(): Date {\r\n\t\treturn this.getPropertyValue(\"endDate\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}