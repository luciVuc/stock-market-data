{"ast":null,"code":"/**\r\n * Module that defines everything related to building OHLCs.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Candlestick } from \"./Candlestick\";\nimport { Line } from \"../../core/elements/Line\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Class used to creates OHLCs.\r\n *\r\n * @see {@link IOHLCEvents} for a list of available events\r\n * @see {@link IOHLCAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar OHLC = /** @class */function (_super) {\n  __extends(OHLC, _super);\n  /**\r\n   * Constructor\r\n   */\n  function OHLC() {\n    var _this = _super.call(this) || this;\n    _this.className = \"OHLC\";\n    _this.layout = \"none\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  OHLC.prototype.createAssets = function () {\n    //super.createAssets();\n    this.openLine = this.createChild(Line);\n    this.openLine.shouldClone = false;\n    this.highLowLine = this.createChild(Line);\n    this.highLowLine.shouldClone = false;\n    this.closeLine = this.createChild(Line);\n    this.closeLine.shouldClone = false;\n  };\n  /**\r\n   * Copies all parameters from another [[OHLC]].\r\n   *\r\n   * @param source Source OHLC\r\n   */\n  OHLC.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    if (this.openLine) {\n      this.openLine.copyFrom(source.openLine);\n    }\n    if (this.highLowLine) {\n      this.highLowLine.copyFrom(source.highLowLine);\n    }\n    if (this.closeLine) {\n      this.closeLine.copyFrom(source.closeLine);\n    }\n  };\n  return OHLC;\n}(Candlestick);\nexport { OHLC };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"OHLC\"] = OHLC;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,WAAW,QAA0E,eAAe;AAC7G,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,QAAQ,QAAQ,qBAAqB;AA4B9C;;;;;;AAOA;;;;;;;;AAQA;EAA0BC;EAiCzB;;;EAGA;IAAA,YACCC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,MAAM;IACvBD,KAAI,CAACE,MAAM,GAAG,MAAM;;EACrB;EACA;;;EAGUC,2BAAY,GAAtB;IACC;IAEA,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;IACtC,IAAI,CAACQ,QAAQ,CAACE,WAAW,GAAG,KAAK;IAEjC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,WAAW,CAACT,IAAI,CAAC;IACzC,IAAI,CAACW,WAAW,CAACD,WAAW,GAAG,KAAK;IAEpC,IAAI,CAACE,SAAS,GAAG,IAAI,CAACH,WAAW,CAACT,IAAI,CAAC;IACvC,IAAI,CAACY,SAAS,CAACF,WAAW,GAAG,KAAK;EACnC,CAAC;EAED;;;;;EAKOH,uBAAQ,GAAf,UAAgBM,MAAY;IAC3BV,iBAAMW,QAAQ,YAACD,MAAM,CAAC;IACtB,IAAI,IAAI,CAACL,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,CAACM,QAAQ,CAACD,MAAM,CAACL,QAAQ,CAAC;;IAExC,IAAI,IAAI,CAACG,WAAW,EAAE;MACrB,IAAI,CAACA,WAAW,CAACG,QAAQ,CAACD,MAAM,CAACF,WAAW,CAAC;;IAE9C,IAAI,IAAI,CAACC,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,CAACE,QAAQ,CAACD,MAAM,CAACD,SAAS,CAAC;;EAE3C,CAAC;EAEF,WAAC;AAAD,CAAC,CA3EyBb,WAAW;;AA6ErC;;;;;;AAMAE,QAAQ,CAACc,iBAAiB,CAAC,MAAM,CAAC,GAAGR,IAAI","names":["Candlestick","Line","registry","__extends","_super","_this","className","layout","OHLC","openLine","createChild","shouldClone","highLowLine","closeLine","source","copyFrom","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\elements\\OHLC.ts"],"sourcesContent":["/**\r\n * Module that defines everything related to building OHLCs.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Candlestick, ICandlestickProperties, ICandlestickAdapters, ICandlestickEvents } from \"./Candlestick\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[OHLC]].\r\n */\r\nexport interface IOHLCProperties extends ICandlestickProperties { }\r\n\r\n/**\r\n * Defines events for [[OHLC]].\r\n */\r\nexport interface IOHLCEvents extends ICandlestickEvents { }\r\n\r\n/**\r\n * Defines adapters for [[OHLC]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IOHLCAdapters extends ICandlestickAdapters, IOHLCProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates OHLCs.\r\n *\r\n * @see {@link IOHLCEvents} for a list of available events\r\n * @see {@link IOHLCAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class OHLC extends Candlestick {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IOHLCProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IOHLCAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IOHLCEvents;\r\n\r\n\r\n\t/**\r\n\t * Open line element\r\n\t */\r\n\tpublic openLine: Line;\r\n\r\n\t/**\r\n\t * Close line element\r\n\t */\r\n\tpublic closeLine: Line;\r\n\r\n\t/**\r\n\t * High-low line element\r\n\t */\r\n\tpublic highLowLine: Line;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"OHLC\";\r\n\t\tthis.layout = \"none\";\r\n\t}\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\t//super.createAssets();\r\n\r\n\t\tthis.openLine = this.createChild(Line);\r\n\t\tthis.openLine.shouldClone = false;\r\n\r\n\t\tthis.highLowLine = this.createChild(Line);\r\n\t\tthis.highLowLine.shouldClone = false;\r\n\r\n\t\tthis.closeLine = this.createChild(Line);\r\n\t\tthis.closeLine.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[OHLC]].\r\n\t *\r\n\t * @param source Source OHLC\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.openLine) {\r\n\t\t\tthis.openLine.copyFrom(source.openLine);\r\n\t\t}\r\n\t\tif (this.highLowLine) {\r\n\t\t\tthis.highLowLine.copyFrom(source.highLowLine);\r\n\t\t}\r\n\t\tif (this.closeLine) {\r\n\t\t\tthis.closeLine.copyFrom(source.closeLine);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"OHLC\"] = OHLC;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}