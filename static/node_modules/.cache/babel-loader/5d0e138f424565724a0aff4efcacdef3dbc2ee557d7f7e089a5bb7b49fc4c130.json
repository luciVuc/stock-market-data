{"ast":null,"code":"/**\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\nvar AxisLine = /** @class */function (_super) {\n  __extends(AxisLine, _super);\n  /**\r\n   * Constructor\r\n   */\n  function AxisLine() {\n    var _this = _super.call(this) || this;\n    _this.className = \"AxisLine\";\n    _this.element = _this.paper.add(\"path\");\n    var interfaceColors = new InterfaceColorSet();\n    _this.stroke = interfaceColors.getFor(\"grid\");\n    _this.strokeOpacity = 0.15;\n    _this.pixelPerfect = true;\n    _this.fill = color();\n    _this.applyTheme();\n    _this.interactionsEnabled = false;\n    return _this;\n    //this.element.moveTo({ x: 0, y: 0 });\n  }\n\n  return AxisLine;\n}(Sprite);\nexport { AxisLine };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;","map":{"version":3,"mappings":"AAAA;;;AAGA;;;;;;AAMA,SAASA,MAAM,QAA2D,mBAAmB;AAC7F,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,iBAAiB,QAAQ,oCAAoC;AA4BtE;;;;;;AAOA;;;;;;AAMA;EAA8BC;EAiB7B;;;EAGA;IAAA,YACCC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,UAAU;IAE3BD,KAAI,CAACE,OAAO,GAAGF,KAAI,CAACG,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IAErC,IAAIC,eAAe,GAAG,IAAIR,iBAAiB,EAAE;IAC7CG,KAAI,CAACM,MAAM,GAAGD,eAAe,CAACE,MAAM,CAAC,MAAM,CAAC;IAC5CP,KAAI,CAACQ,aAAa,GAAG,IAAI;IACzBR,KAAI,CAACS,YAAY,GAAG,IAAI;IACxBT,KAAI,CAACU,IAAI,GAAGd,KAAK,EAAE;IACnBI,KAAI,CAACW,UAAU,EAAE;IAEjBX,KAAI,CAACY,mBAAmB,GAAG,KAAK;;IAEhC;EACD;;EAED,eAAC;AAAD,CAAC,CAtC6BlB,MAAM;;AAwCpC;;;;;;AAMAC,QAAQ,CAACkB,iBAAiB,CAAC,UAAU,CAAC,GAAGC,QAAQ","names":["Sprite","registry","color","InterfaceColorSet","__extends","_super","_this","className","element","paper","add","interfaceColors","stroke","getFor","strokeOpacity","pixelPerfect","fill","applyTheme","interactionsEnabled","registeredClasses","AxisLine"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\axes\\AxisLine.ts"],"sourcesContent":["/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLine]].\r\n */\r\nexport interface IAxisLineProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisLine]].\r\n */\r\nexport interface IAxisLineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLineAdapters extends ISpriteAdapters, IAxisLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLine extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLine\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.fill = color();\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\t//this.element.moveTo({ x: 0, y: 0 });\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}