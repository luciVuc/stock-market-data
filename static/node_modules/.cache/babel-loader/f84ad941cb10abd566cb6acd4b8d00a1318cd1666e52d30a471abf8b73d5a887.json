{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require(\"react\");\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require(\"prop-types\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\nvar _GenericComponent = require(\"../GenericComponent\");\nvar _utils = require(\"../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar RenkoSeries = function (_Component) {\n  _inherits(RenkoSeries, _Component);\n  function RenkoSeries(props) {\n    _classCallCheck(this, RenkoSeries);\n    var _this = _possibleConstructorReturn(this, (RenkoSeries.__proto__ || Object.getPrototypeOf(RenkoSeries)).call(this, props));\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n  _createClass(RenkoSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n        yScale = moreProps.chartConfig.yScale,\n        plotData = moreProps.plotData;\n      var yAccessor = this.props.yAccessor;\n      var candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor);\n      _drawOnCanvas(ctx, candles);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: clip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n        yScale = moreProps.chartConfig.yScale,\n        plotData = moreProps.plotData;\n      var yAccessor = this.props.yAccessor;\n      var candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor).map(function (each, idx) {\n        return _react2.default.createElement(\"rect\", {\n          key: idx,\n          className: each.className,\n          fill: each.fill,\n          x: each.x,\n          y: each.y,\n          width: each.width,\n          height: each.height\n        });\n      });\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(\"g\", {\n        className: \"candle\"\n      }, candles));\n    }\n  }]);\n  return RenkoSeries;\n}(_react.Component);\nRenkoSeries.propTypes = {\n  classNames: _propTypes2.default.shape({\n    up: _propTypes2.default.string,\n    down: _propTypes2.default.string\n  }),\n  stroke: _propTypes2.default.shape({\n    up: _propTypes2.default.string,\n    down: _propTypes2.default.string\n  }),\n  fill: _propTypes2.default.shape({\n    up: _propTypes2.default.string,\n    down: _propTypes2.default.string,\n    partial: _propTypes2.default.string\n  }),\n  yAccessor: _propTypes2.default.func.isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nRenkoSeries.defaultProps = {\n  classNames: {\n    up: \"up\",\n    down: \"down\"\n  },\n  stroke: {\n    up: \"none\",\n    down: \"none\"\n  },\n  fill: {\n    up: \"#6BA583\",\n    down: \"#E60000\",\n    partial: \"#4682B4\"\n  },\n  yAccessor: function yAccessor(d) {\n    return {\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close\n    };\n  },\n  clip: true\n};\nfunction _drawOnCanvas(ctx, renko) {\n  renko.forEach(function (d) {\n    ctx.beginPath();\n    ctx.strokeStyle = d.stroke;\n    ctx.fillStyle = d.fill;\n    ctx.rect(d.x, d.y, d.width, d.height);\n    ctx.closePath();\n    ctx.fill();\n  });\n}\nfunction getRenko(props, plotData, xScale, xAccessor, yScale, yAccessor) {\n  var classNames = props.classNames,\n    fill = props.fill;\n  var width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n  var candleWidth = width / (plotData.length - 1);\n  var candles = plotData.filter(function (d) {\n    return (0, _utils.isDefined)(yAccessor(d).close);\n  }).map(function (d) {\n    var ohlc = yAccessor(d);\n    var x = xScale(xAccessor(d)) - 0.5 * candleWidth,\n      y = yScale(Math.max(ohlc.open, ohlc.close)),\n      height = Math.abs(yScale(ohlc.open) - yScale(ohlc.close)),\n      className = ohlc.open <= ohlc.close ? classNames.up : classNames.down;\n    var svgfill = d.fullyFormed ? ohlc.open <= ohlc.close ? fill.up : fill.down : fill.partial;\n    return {\n      className: className,\n      fill: svgfill,\n      x: x,\n      y: y,\n      height: height,\n      width: candleWidth\n    };\n  });\n  return candles;\n}\nexports.default = RenkoSeries;","map":{"version":3,"mappings":"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","names":["RenkoSeries","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","yAccessor","candles","getRenko","clip","_react2","svgDraw","canvasDraw","canvasToDraw","drawOn","map","each","idx","key","className","fill","x","y","width","height","propTypes","classNames","_propTypes2","shape","up","string","down","stroke","partial","func","isRequired","bool","defaultProps","open","d","high","low","close","renko","forEach","beginPath","strokeStyle","fillStyle","rect","closePath","length","candleWidth","filter","ohlc","Math","max","abs","svgfill","fullyFormed"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\lib\\series\\RenkoSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined } from \"../utils\";\n\nclass RenkoSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { yAccessor } = this.props;\n\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor);\n\n\t\tdrawOnCanvas(ctx, candles);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { yAccessor } = this.props;\n\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor)\n\t\t\t.map((each, idx) => (<rect key={idx} className={each.className}\n\t\t\t\tfill={each.fill}\n\t\t\t\tx={each.x}\n\t\t\t\ty={each.y}\n\t\t\t\twidth={each.width}\n\t\t\t\theight={each.height} />));\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<g className=\"candle\">\n\t\t\t\t\t{candles}\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nRenkoSeries.propTypes = {\n\tclassNames: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string\n\t}),\n\tstroke: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string\n\t}),\n\tfill: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string,\n\t\tpartial: PropTypes.string\n\t}),\n\tyAccessor: PropTypes.func.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nRenkoSeries.defaultProps = {\n\tclassNames: {\n\t\tup: \"up\",\n\t\tdown: \"down\"\n\t},\n\tstroke: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tfill: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#E60000\",\n\t\tpartial: \"#4682B4\",\n\t},\n\tyAccessor: d => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, renko) {\n\trenko.forEach(d => {\n\t\tctx.beginPath();\n\n\t\tctx.strokeStyle = d.stroke;\n\t\tctx.fillStyle = d.fill;\n\n\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\tctx.closePath();\n\t\tctx.fill();\n\t});\n}\n\nfunction getRenko(props, plotData, xScale, xAccessor, yScale, yAccessor) {\n\tconst { classNames, fill } = props;\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst candleWidth = (width / (plotData.length - 1));\n\tconst candles = plotData\n\t\t.filter(d => isDefined(yAccessor(d).close))\n\t\t.map(d => {\n\t\t\tconst ohlc = yAccessor(d);\n\t\t\tconst x = xScale(xAccessor(d)) - 0.5 * candleWidth,\n\t\t\t\ty = yScale(Math.max(ohlc.open, ohlc.close)),\n\t\t\t\theight = Math.abs(yScale(ohlc.open) - yScale(ohlc.close)),\n\t\t\t\tclassName = (ohlc.open <= ohlc.close) ? classNames.up : classNames.down;\n\n\t\t\tconst svgfill = d.fullyFormed\n\t\t\t\t? (ohlc.open <= ohlc.close ? fill.up : fill.down)\n\t\t\t\t: fill.partial;\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tfill: svgfill,\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\theight: height,\n\t\t\t\twidth: candleWidth,\n\t\t\t};\n\t\t});\n\treturn candles;\n}\n\nexport default RenkoSeries;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}