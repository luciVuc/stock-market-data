{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Series } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\nvar Legend = /** @class */function (_super) {\n  __extends(Legend, _super);\n  function Legend() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * List of all [[Container]] elements for legend items.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n    Object.defineProperty(_this, \"itemContainers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Container._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n          themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n          background: RoundedRectangle.new(_this._root, {\n            themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n            themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n          })\n        }, [_this.itemContainers.template]);\n      })\n    });\n    /**\r\n     * List of legend marker elements.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n    Object.defineProperty(_this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Container._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n        }, [_this.markers.template]);\n      })\n    });\n    /**\r\n     * List of legend label elements.\r\n     *\r\n     * @default new ListTemplate<Label>\r\n     */\n    Object.defineProperty(_this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Label._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n        }, [_this.labels.template]);\n      })\n    });\n    /**\r\n     * List of legend value label elements.\r\n     *\r\n     * @default new ListTemplate<label>\r\n     */\n    Object.defineProperty(_this, \"valueLabels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Label._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n        }, [_this.valueLabels.template]);\n      })\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n    Object.defineProperty(_this, \"markerRectangles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n        }, [_this.markerRectangles.template]);\n      })\n    });\n    return _this;\n  }\n  Object.defineProperty(Legend.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n      this.fields.push(\"name\", \"stroke\", \"fill\");\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Legend.prototype, \"makeItemContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var itemContainer = this.children.push(this.itemContainers.make());\n      itemContainer._setDataItem(dataItem);\n      this.itemContainers.push(itemContainer);\n      itemContainer.states.create(\"disabled\", {});\n      return itemContainer;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Legend.prototype, \"makeMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var marker = this.markers.make();\n      this.markers.push(marker);\n      marker.states.create(\"disabled\", {});\n      return marker;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Legend.prototype, \"makeLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var label = this.labels.make();\n      label.states.create(\"disabled\", {});\n      return label;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Legend.prototype, \"makeValueLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var valueLabel = this.valueLabels.make();\n      valueLabel.states.create(\"disabled\", {});\n      return valueLabel;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Legend.prototype, \"makeMarkerRectangle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var markerRectangle = this.markerRectangles.make();\n      markerRectangle.states.create(\"disabled\", {});\n      return markerRectangle;\n    }\n  });\n  Object.defineProperty(Legend.prototype, \"processDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n      _super.prototype.processDataItem.call(this, dataItem);\n      var itemContainer = this.makeItemContainer(dataItem);\n      var nameField = this.get(\"nameField\");\n      var fillField = this.get(\"fillField\");\n      var strokeField = this.get(\"strokeField\");\n      if (itemContainer) {\n        var clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n        var item_1 = dataItem.dataContext;\n        if (item_1 && item_1.set) {\n          item_1.set(\"legendDataItem\", dataItem);\n        }\n        itemContainer._setDataItem(dataItem);\n        dataItem.set(\"itemContainer\", itemContainer);\n        var marker = this.makeMarker();\n        if (marker) {\n          itemContainer.children.push(marker);\n          marker._setDataItem(dataItem);\n          dataItem.set(\"marker\", marker);\n          var useDefaultMarker = this.get(\"useDefaultMarker\");\n          var markerRectangle_1 = marker.children.push(this.makeMarkerRectangle());\n          var fill = dataItem.get(\"fill\");\n          var stroke = dataItem.get(\"stroke\");\n          dataItem.set(\"markerRectangle\", markerRectangle_1);\n          if (item_1 && item_1.get) {\n            fill = item_1.get(fillField, fill);\n            stroke = item_1.get(strokeField, stroke);\n          }\n          if (!stroke) {\n            stroke = fill;\n          }\n          if (!useDefaultMarker) {\n            if (item_1 && item_1.createLegendMarker) {\n              item_1.createLegendMarker();\n            }\n          } else {\n            if (item_1.on) {\n              item_1.on(fillField, function () {\n                markerRectangle_1.set(\"fill\", item_1.get(fillField));\n              });\n              item_1.on(strokeField, function () {\n                markerRectangle_1.set(\"stroke\", item_1.get(strokeField));\n              });\n            }\n          }\n          markerRectangle_1.setAll({\n            fill: fill,\n            stroke: stroke\n          });\n          // this solves if template field is set on slice\n          var component = item_1.component;\n          if (component && component.updateLegendMarker) {\n            component.updateLegendMarker(item_1);\n          }\n        }\n        var label_1 = this.makeLabel();\n        if (label_1) {\n          itemContainer.children.push(label_1);\n          label_1._setDataItem(dataItem);\n          dataItem.set(\"label\", label_1);\n          label_1.text.on(\"text\", function () {\n            itemContainer.set(\"ariaLabel\", label_1.text._getText() + \"; \" + _this._t(\"Press ENTER to toggle\"));\n          });\n          if (item_1 && item_1.get) {\n            dataItem.set(\"name\", item_1.get(nameField));\n          }\n          var name_1 = dataItem.get(\"name\");\n          if (name_1) {\n            label_1.set(\"text\", name_1);\n          }\n        }\n        var valueLabel = this.makeValueLabel();\n        if (valueLabel) {\n          itemContainer.children.push(valueLabel);\n          valueLabel._setDataItem(dataItem);\n          dataItem.set(\"valueLabel\", valueLabel);\n        }\n        if (item_1 && item_1.show) {\n          this._disposers.push(item_1.on(\"visible\", function (visible) {\n            itemContainer.set(\"disabled\", !visible);\n          }));\n          if (!item_1.get(\"visible\")) {\n            itemContainer.set(\"disabled\", true);\n          }\n          if (clickTarget != \"none\") {\n            var clickContainer = itemContainer;\n            if (clickTarget == \"marker\") {\n              clickContainer = marker;\n            }\n            this._addClickEvents(clickContainer, item_1, dataItem);\n          }\n        }\n        // Sort children\n        this.children.values.sort(function (a, b) {\n          var targetA = a.dataItem.dataContext;\n          var targetB = b.dataItem.dataContext;\n          if (targetA && targetB) {\n            var indexA = _this.data.indexOf(targetA);\n            var indexB = _this.data.indexOf(targetB);\n            if (indexA > indexB) {\n              return 1;\n            } else if (indexA < indexB) {\n              return -1;\n            }\n          }\n          return 0;\n        });\n        if (item_1 && item_1.updateLegendValue) {\n          item_1.updateLegendValue();\n        }\n      }\n    }\n  });\n  Object.defineProperty(Legend.prototype, \"_addClickEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (container, item, dataItem) {\n      var _this = this;\n      container.set(\"cursorOverStyle\", \"pointer\");\n      container.events.on(\"pointerover\", function () {\n        var component = item.component;\n        if (component && component.hoverDataItem) {\n          component.hoverDataItem(item);\n        }\n      });\n      container.events.on(\"pointerout\", function () {\n        var component = item.component;\n        if (component && component.hoverDataItem) {\n          component.unhoverDataItem(item);\n        }\n      });\n      container.events.on(\"click\", function () {\n        var labelText = dataItem.get(\"label\").text._getText();\n        if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n          item.show();\n          container.set(\"disabled\", false);\n          _this._root.readerAlert(_this._t(\"%1 shown\", _this._root.locale, labelText));\n        } else if (item.hide) {\n          item.hide();\n          container.set(\"disabled\", true);\n          _this._root.readerAlert(_this._t(\"%1 hidden\", _this._root.locale, labelText));\n        }\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Legend.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n      var dataContext = dataItem.dataContext;\n      if (dataContext && dataContext.get) {\n        var di = dataContext.get(\"legendDataItem\");\n        if (di == dataItem) {\n          dataContext.set(\"legendDataItem\", undefined);\n        }\n      }\n      var itemContainer = dataItem.get(\"itemContainer\");\n      if (itemContainer) {\n        this.itemContainers.removeValue(itemContainer);\n        itemContainer.dispose();\n      }\n      var marker = dataItem.get(\"marker\");\n      if (marker) {\n        this.markers.removeValue(marker);\n        marker.dispose();\n      }\n      var markerRectangle = dataItem.get(\"markerRectangle\");\n      if (markerRectangle) {\n        this.markerRectangles.removeValue(markerRectangle);\n        markerRectangle.dispose();\n      }\n      var label = dataItem.get(\"label\");\n      if (label) {\n        this.labels.removeValue(label);\n        label.dispose();\n      }\n      var valueLabel = dataItem.get(\"valueLabel\");\n      if (valueLabel) {\n        this.valueLabels.removeValue(valueLabel);\n        valueLabel.dispose();\n      }\n    }\n  });\n  Object.defineProperty(Legend, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Legend\"\n  });\n  Object.defineProperty(Legend, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Series.classNames.concat([Legend.className])\n  });\n  return Legend;\n}(Series);\nexport { Legend };","map":{"version":3,"mappings":"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","names":["Series","Container","Label","RoundedRectangle","Template","ListTemplate","$utils","__extends","Object","new","_new","_this","_root","themeTags","mergeTags","itemContainers","template","get","themeTagsSelf","background","markers","labels","valueLabels","markerRectangles","_settings","fields","push","_super","_afterNew","dataItem","itemContainer","children","make","_setDataItem","states","create","marker","label","valueLabel","markerRectangle","processDataItem","makeItemContainer","nameField","fillField","strokeField","clickTarget","item_1","dataContext","set","makeMarker","useDefaultMarker","markerRectangle_1","makeMarkerRectangle","fill","stroke","createLegendMarker","on","setAll","component","updateLegendMarker","label_1","makeLabel","text","_getText","_t","name_1","makeValueLabel","show","_disposers","visible","clickContainer","_addClickEvents","values","sort","a","b","targetA","targetB","indexA","data","indexOf","indexB","updateLegendValue","container","item","events","hoverDataItem","unhoverDataItem","labelText","isHidden","readerAlert","locale","hide","disposeDataItem","di","undefined","removeValue","dispose","classNames","concat","Legend","className"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\render\\Legend.ts"],"sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { Entity, IEntitySettings } from \"../../core/util/Entity\";\nimport type { Color } from \"../../core/util/Color\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface ILegendDataItem extends ISeriesDataItem {\n\n\t/**\n\t * [[Container]] element holding all other legend item elements, labels,\n\t * markers, etc.\n\t */\n\titemContainer: Container;\n\n\t/**\n\t * Marker element.\n\t */\n\tmarker: Container;\n\n\t/**\n\t * Marker rectangle element.\n\t */\n\tmarkerRectangle: RoundedRectangle;\n\n\t/**\n\t * Label element.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Value label element.\n\t */\n\tvalueLabel: Label;\n\n\t/**\n\t * Marker fill color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Marker stroke (outline) color.\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Name of the legend item.\n\t */\n\tname?: string;\n\n}\n\nexport interface ILegendItemSettings extends IEntitySettings {\n\tvisible?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface ILegendItem extends Entity {\n\t_settings: ILegendItemSettings;\n\tisHidden?: () => boolean;\n\tshow?: () => void;\n\thide?: () => void;\n\tcreateLegendMarker?: () => {}\n\tcomponent?: Series;\n\tupdateLegendValue?: () => {}\n\t// how to define that properties of dataItem should have legendDataItem?\n}\n\n//type ILegendDataItemSettings = { [K in keyof ILegendDataItem]?: string; };\n\nexport interface ILegendSettings extends ISeriesSettings {\n\n\t/**\n\t * If set to `true` the legend will not try to mimic appearance of the actual\n\t * item but rather show default square marker.\n\t *\n\t * @default false\n\t */\n\tuseDefaultMarker?: boolean;\n\n\t/**\n\t * A key to look up in data for a name of the data item.\n\t *\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A key to look up in data for a fill of the data item.\n\t *\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A key to look up in data for a stroke of the data item.\n\t *\n\t */\n\tstrokeField?: string;\n\n\t/**\n\t * Which legend item element will be clickable to toggle related chart item:\n\t * * `\"itemContainer\"` - the whole legend item (default).\n\t * * `\"marker\"` - legend item marker.\n\t * * `\"none\"` - disables toggling of legend item.\n\t *\n\t * @default \"itemContainer\"\n\t * @since 5.0.13\n\t */\n\tclickTarget?: \"itemContainer\" | \"marker\" | \"none\"\n\n}\n\nexport interface ILegendPrivate extends ISeriesPrivate {\n}\n\nexport interface ILegendEvents extends ISeriesEvents {\n\n}\n\n/**\n * A universal legend control.\n *\n * @important\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\n */\nexport class Legend extends Series {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n\t\tthis.fields.push(\"name\", \"stroke\", \"fill\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"Legend\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Legend.className]);\n\n\tdeclare public _settings: ILegendSettings;\n\tdeclare public _privateSettings: ILegendPrivate;\n\tdeclare public _dataItemSettings: ILegendDataItem;\n\tdeclare public _events: ILegendEvents;\n\n\n\t/**\n\t * List of all [[Container]] elements for legend items.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly itemContainers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n\t\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n\t\t\t})\n\t\t}, [this.itemContainers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeItemContainer(dataItem: DataItem<this[\"_dataItemSettings\"]>): Container {\n\t\tconst itemContainer = this.children.push(this.itemContainers.make());\n\t\titemContainer._setDataItem(dataItem);\n\t\tthis.itemContainers.push(itemContainer);\n\t\titemContainer.states.create(\"disabled\", {});\n\t\treturn itemContainer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): Container {\n\t\tconst marker = this.markers.make();\n\t\tthis.markers.push(marker);\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of legend marker elements.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly markers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel.states.create(\"disabled\", {});\n\t\treturn label;\n\t}\n\n\t/**\n\t * List of legend label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n\t\t}, [this.labels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeValueLabel(): Label {\n\t\tconst valueLabel = this.valueLabels.make();\n\t\tvalueLabel.states.create(\"disabled\", {});\n\t\treturn valueLabel;\n\t}\n\n\t/**\n\t * List of legend value label elements.\n\t *\n\t * @default new ListTemplate<label>\n\t */\n\tpublic readonly valueLabels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n\t\t}, [this.valueLabels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarkerRectangle(): RoundedRectangle {\n\t\tconst markerRectangle = this.markerRectangles.make();\n\t\tmarkerRectangle.states.create(\"disabled\", {});\n\t\treturn markerRectangle;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markerRectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n\t\t}, [this.markerRectangles.template])\n\t);\n\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst itemContainer = this.makeItemContainer(dataItem);\n\n\t\tconst nameField = this.get(\"nameField\");\n\t\tconst fillField = this.get(\"fillField\");\n\t\tconst strokeField = this.get(\"strokeField\");\n\n\t\tif (itemContainer) {\n\t\t\tconst clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n\n\t\t\tconst item = dataItem.dataContext as ILegendItem;\n\n\t\t\tif (item && item.set) {\n\t\t\t\titem.set(<any>\"legendDataItem\", dataItem);\n\t\t\t}\n\n\t\t\titemContainer._setDataItem(dataItem);\n\t\t\tdataItem.set(\"itemContainer\", itemContainer);\n\n\t\t\tconst marker = this.makeMarker();\n\t\t\tif (marker) {\n\t\t\t\titemContainer.children.push(marker);\n\t\t\t\tmarker._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"marker\", marker);\n\n\t\t\t\tconst useDefaultMarker = this.get(\"useDefaultMarker\");\n\n\t\t\t\tconst markerRectangle = marker.children.push(this.makeMarkerRectangle());\n\n\t\t\t\tlet fill = dataItem.get(\"fill\");\n\t\t\t\tlet stroke = dataItem.get(\"stroke\");\n\n\t\t\t\tdataItem.set(\"markerRectangle\", markerRectangle);\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tfill = item.get(fillField as any, fill);\n\t\t\t\t\tstroke = item.get(strokeField as any, stroke);\n\t\t\t\t}\n\n\t\t\t\tif (!stroke) {\n\t\t\t\t\tstroke = fill;\n\t\t\t\t}\n\n\t\t\t\tif (!useDefaultMarker) {\n\t\t\t\t\tif (item && item.createLegendMarker) {\n\t\t\t\t\t\titem.createLegendMarker();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (item.on) {\n\t\t\t\t\t\titem.on(fillField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", item.get(fillField as any));\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\titem.on(strokeField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", item.get(strokeField as any));\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmarkerRectangle.setAll({ fill, stroke });\n\n\t\t\t\t// this solves if template field is set on slice\n\t\t\t\tconst component = item.component;\n\t\t\t\tif (component && component.updateLegendMarker) {\n\t\t\t\t\tcomponent.updateLegendMarker(item as any);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst label = this.makeLabel();\n\n\t\t\tif (label) {\n\t\t\t\titemContainer.children.push(label);\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"label\", label);\n\n\t\t\t\tlabel.text.on(\"text\", () => {\n\t\t\t\t\titemContainer.set(\"ariaLabel\", label.text._getText() + \"; \" + this._t(\"Press ENTER to toggle\"));\n\t\t\t\t});\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tdataItem.set(\"name\", item.get(nameField as any) as string);\n\t\t\t\t}\n\n\t\t\t\tlet name = dataItem.get(\"name\");\n\n\t\t\t\tif (name) {\n\t\t\t\t\tlabel.set(\"text\", name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst valueLabel = this.makeValueLabel();\n\t\t\tif (valueLabel) {\n\t\t\t\titemContainer.children.push(valueLabel);\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"valueLabel\", valueLabel);\n\t\t\t}\n\n\t\t\tif (item && item.show) {\n\n\t\t\t\tthis._disposers.push(item.on(\"visible\", (visible) => {\n\t\t\t\t\titemContainer.set(\"disabled\", !visible)\n\t\t\t\t}));\n\n\t\t\t\tif (!item.get(\"visible\")) {\n\t\t\t\t\titemContainer.set(\"disabled\", true);\n\t\t\t\t}\n\n\t\t\t\tif (clickTarget != \"none\") {\n\t\t\t\t\tvar clickContainer = itemContainer;\n\t\t\t\t\tif (clickTarget == \"marker\") {\n\t\t\t\t\t\tclickContainer = marker;\n\t\t\t\t\t}\n\t\t\t\t\tthis._addClickEvents(clickContainer, item, dataItem)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort children\n\t\t\tthis.children.values.sort((a, b) => {\n\t\t\t\tvar targetA = a.dataItem!.dataContext;\n\t\t\t\tvar targetB = b.dataItem!.dataContext;\n\t\t\t\tif (targetA && targetB) {\n\t\t\t\t\tvar indexA = this.data.indexOf(targetA);\n\t\t\t\t\tvar indexB = this.data.indexOf(targetB);\n\t\t\t\t\tif (indexA > indexB) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (indexA < indexB) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\tif (item && item.updateLegendValue) {\n\t\t\t\titem.updateLegendValue();\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\tprotected _addClickEvents(container: Container, item: ILegendItem, dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tcontainer.set(\"cursorOverStyle\", \"pointer\");\n\t\tcontainer.events.on(\"pointerover\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.hoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"pointerout\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.unhoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"click\", () => {\n\t\t\tconst labelText = dataItem.get(\"label\").text._getText();\n\n\t\t\tif (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n\t\t\t\titem.show();\n\t\t\t\tcontainer.set(\"disabled\", false);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\n\t\t\t}\n\t\t\telse if (item.hide) {\n\t\t\t\titem.hide();\n\t\t\t\tcontainer.set(\"disabled\", true);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\n\t\t\t}\n\t\t})\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tsuper.disposeDataItem(dataItem);\n\n\t\tconst dataContext = dataItem.dataContext as any;\n\t\tif (dataContext && dataContext.get) {\n\t\t\tconst di = dataContext.get(\"legendDataItem\");\n\t\t\tif (di == dataItem) {\n\t\t\t\tdataContext.set(\"legendDataItem\", undefined);\n\t\t\t}\n\t\t}\n\n\n\t\tlet itemContainer = dataItem.get(\"itemContainer\");\n\t\tif (itemContainer) {\n\t\t\tthis.itemContainers.removeValue(itemContainer);\n\t\t\titemContainer.dispose();\n\t\t}\n\n\t\tlet marker = dataItem.get(\"marker\");\n\t\tif (marker) {\n\t\t\tthis.markers.removeValue(marker);\n\t\t\tmarker.dispose();\n\t\t}\n\n\t\tlet markerRectangle = dataItem.get(\"markerRectangle\");\n\t\tif (markerRectangle) {\n\t\t\tthis.markerRectangles.removeValue(markerRectangle);\n\t\t\tmarkerRectangle.dispose();\n\t\t}\n\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tlet valueLabel = dataItem.get(\"valueLabel\");\n\t\tif (valueLabel) {\n\t\t\tthis.valueLabels.removeValue(valueLabel);\n\t\t\tvalueLabel.dispose();\n\t\t}\n\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}