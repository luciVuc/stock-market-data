{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"./Graphics\";\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nvar Ellipse = /** @class */function (_super) {\n  __extends(Ellipse, _super);\n  function Ellipse() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Ellipse.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n      if (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Ellipse.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      if (this._clear) {\n        this._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\n      }\n    }\n  });\n  Object.defineProperty(Ellipse, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Ellipse\"\n  });\n  Object.defineProperty(Ellipse, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Ellipse.className])\n  });\n  return Ellipse;\n}(Graphics);\nexport { Ellipse };","map":{"version":3,"mappings":";AAAA,SAASA,QAAQ,QAA6C,YAAY;AAmB1E;;;;;;AAMA;EAA6BC;EAA7B;;EAuBA;;;;;WAfC;MACCC,iBAAMC,cAAc,WAAE;MAEtB,IAAI,IAAI,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,UAAU,CAAC,EAAE;QACnF,IAAI,CAACC,MAAM,GAAG,IAAI;;IAEpB;;;;;;WAEA;MACCH,iBAAMI,QAAQ,WAAE;MAEhB,IAAI,IAAI,CAACD,MAAM,EAAE;QAChB,IAAI,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAEF,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE/F;;EAjBAC;;;;WAAkC;;EAClCA;;;;WAA0CZ,QAAQ,CAACa,UAAU,CAACC,MAAM,CAAC,CAACC,OAAO,CAACC,SAAS,CAAC;;EAiBzF,cAAC;CAAA,CAvB4BhB,QAAQ;SAAxBe,OAAO","names":["Graphics","__extends","_super","_beforeChanged","isDirty","_clear","_changed","_display","drawEllipse","Math","abs","get","Object","classNames","concat","Ellipse","className"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\render\\Ellipse.ts"],"sourcesContent":["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\r\n\r\nexport interface IEllipseSettings extends IGraphicsSettings {\r\n\r\n\t/**\r\n\t * The ellipse's major-axis radius. Must be non-negative.\r\n\t */\r\n\r\n\tradiusX: number\r\n\r\n\t/**\r\n\t * The ellipse's minor-axis radius. Must be non-negative.\r\n\t */\r\n\tradiusY: number\r\n}\r\n\r\nexport interface IEllipsePrivate extends IGraphicsPrivate {\r\n}\r\n\r\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Ellipse extends Graphics {\r\n\r\n\tdeclare public _settings: IEllipseSettings;\r\n\tdeclare public _privateSettings: IEllipsePrivate;\r\n\r\n\tpublic static className: string = \"Ellipse\";\r\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Ellipse.className]);\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tthis._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\r\n\t\t}\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}