{"ast":null,"code":"/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Column } from \"./Column\";\nimport { Slice } from \"../../core/elements/Slice\";\nimport { registry } from \"../../core/Registry\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar RadarColumn = /** @class */function (_super) {\n  __extends(RadarColumn, _super);\n  /**\r\n   * Constructor\r\n   */\n  function RadarColumn() {\n    var _this = _super.call(this) || this;\n    _this.className = \"RadarColumn\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  RadarColumn.prototype.createAssets = function () {\n    this.radarColumn = this.createChild(Slice);\n    this.radarColumn.shouldClone = false;\n    this.radarColumn.strokeOpacity = undefined;\n    // some dirty hack so that if user access column, it won't get error\n    this.column = this.radarColumn;\n  };\n  /**\r\n   * Copies all parameters from another [[RadarColumn]].\r\n   *\r\n   * @param source Source RadarColumn\r\n   */\n  RadarColumn.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    if (this.radarColumn) {\n      this.radarColumn.copyFrom(source.radarColumn);\n    }\n  };\n  /**\r\n   * X coordinate for the slice tooltip.\r\n   *\r\n   * @return X\r\n   * @ignore\r\n   */\n  RadarColumn.prototype.getTooltipX = function () {\n    var value = this.getPropertyValue(\"tooltipX\");\n    if (!$type.isNumber(value)) {\n      return this.radarColumn.getTooltipX();\n    }\n    return value;\n  };\n  /**\r\n   * Y coordinate for the slice tooltip.\r\n   *\r\n   * @return Y\r\n   * @ignore\r\n   */\n  RadarColumn.prototype.getTooltipY = function () {\n    var value = this.getPropertyValue(\"tooltipX\");\n    if (!$type.isNumber(value)) {\n      return this.radarColumn.getTooltipY();\n    }\n    return value;\n  };\n  return RadarColumn;\n}(Column);\nexport { RadarColumn };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"RadarColumn\"] = RadarColumn;","map":{"version":3,"mappings":"AAAA;;;;;AAKA;;;;;;AAMA,SAASA,MAAM,QAA2D,UAAU;AACpF,SAASC,KAAK,QAAQ,2BAA2B;AACjD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AA2B9C;;;;;;AAOA;;;;;;;;AAQA;EAAiCC;EAuBhC;;;EAGA;IAAA,YACCC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,aAAa;;EAC/B;EAEA;;;EAGUC,kCAAY,GAAtB;IACC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,WAAW,CAACT,KAAK,CAAC;IAC1C,IAAI,CAACQ,WAAW,CAACE,WAAW,GAAG,KAAK;IACpC,IAAI,CAACF,WAAW,CAACG,aAAa,GAAGC,SAAS;IAC1C;IACA,IAAI,CAACC,MAAM,GAAQ,IAAI,CAACL,WAAW;EACpC,CAAC;EAED;;;;;EAKOD,8BAAQ,GAAf,UAAgBO,MAAY;IAC3BV,iBAAMW,QAAQ,YAACD,MAAM,CAAC;IACtB,IAAI,IAAI,CAACN,WAAW,EAAE;MACrB,IAAI,CAACA,WAAW,CAACO,QAAQ,CAACD,MAAM,CAACN,WAAW,CAAC;;EAE/C,CAAC;EAGD;;;;;;EAMOD,iCAAW,GAAlB;IACC,IAAIS,KAAK,GAAG,IAAI,CAACC,gBAAgB,CAAC,UAAU,CAAC;IAC7C,IAAI,CAACf,KAAK,CAACgB,QAAQ,CAACF,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACR,WAAW,CAACW,WAAW,EAAE;;IAEtC,OAAOH,KAAK;EACb,CAAC;EAED;;;;;;EAMOT,iCAAW,GAAlB;IACC,IAAIS,KAAK,GAAG,IAAI,CAACC,gBAAgB,CAAC,UAAU,CAAC;IAC7C,IAAI,CAACf,KAAK,CAACgB,QAAQ,CAACF,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI,CAACR,WAAW,CAACY,WAAW,EAAE;;IAEtC,OAAOJ,KAAK;EACb,CAAC;EAEF,kBAAC;AAAD,CAAC,CAnFgCjB,MAAM;;AAqFvC;;;;;;AAMAE,QAAQ,CAACoB,iBAAiB,CAAC,aAAa,CAAC,GAAGd,WAAW","names":["Column","Slice","registry","$type","__extends","_super","_this","className","RadarColumn","radarColumn","createChild","shouldClone","strokeOpacity","undefined","column","source","copyFrom","value","getPropertyValue","isNumber","getTooltipX","getTooltipY","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\elements\\RadarColumn.ts"],"sourcesContent":["/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[RadarColumn]].\r\n */\r\nexport interface IRadarColumnProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[RadarColumn]].\r\n */\r\nexport interface IRadarColumnEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RadarColumn]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRadarColumnAdapters extends IColumnAdapters, IRadarColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class RadarColumn extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRadarColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRadarColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRadarColumnEvents;\r\n\r\n\r\n\t/**\r\n\t * Radar column element\r\n\t */\r\n\tpublic radarColumn: Slice;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadarColumn\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.radarColumn = this.createChild(Slice);\r\n\t\tthis.radarColumn.shouldClone = false;\r\n\t\tthis.radarColumn.strokeOpacity = undefined;\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.radarColumn;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[RadarColumn]].\r\n\t *\r\n\t * @param source Source RadarColumn\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.radarColumn) {\r\n\t\t\tthis.radarColumn.copyFrom(source.radarColumn);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @return X\r\n\t * @ignore\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\treturn this.radarColumn.getTooltipX();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @return Y\r\n\t * @ignore\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\treturn this.radarColumn.getTooltipY();\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumn\"] = RadarColumn;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}