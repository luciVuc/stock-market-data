{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Bullet } from \"./Bullet\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar ErrorBullet = /** @class */function (_super) {\n  __extends(ErrorBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ErrorBullet() {\n    var _this = _super.call(this) || this;\n    _this.className = \"ErrorBullet\";\n    _this.errorLine = _this.createChild(Sprite);\n    _this.errorLine.shouldClone = false;\n    _this.width = 20;\n    _this.height = 20;\n    _this.strokeOpacity = 1;\n    _this.isDynamic = true;\n    return _this;\n  }\n  ErrorBullet.prototype.validatePosition = function () {\n    _super.prototype.validatePosition.call(this);\n    var w = this.pixelWidth / 2;\n    var h = this.pixelHeight / 2;\n    this.errorLine.path = $path.moveTo({\n      x: -w,\n      y: -h\n    }) + $path.lineTo({\n      x: w,\n      y: -h\n    }) + $path.moveTo({\n      x: 0,\n      y: -h\n    }) + $path.lineTo({\n      x: 0,\n      y: h\n    }) + $path.moveTo({\n      x: -w,\n      y: h\n    }) + $path.lineTo({\n      x: w,\n      y: h\n    });\n  };\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[ErrorBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n  ErrorBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.errorLine.copyFrom(source.errorLine);\n  };\n  return ErrorBullet;\n}(Bullet);\nexport { ErrorBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA2D,UAAU;AACpF,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAO,KAAKC,KAAK,MAAM,2BAA2B;AA4BlD;;;;;;AAOA;;;;;;;;;;;AAWA;EAAiCC;EAmBhC;;;EAGA;IAAA,YACCC,iBAAO;IAEPC,KAAI,CAACC,SAAS,GAAG,aAAa;IAC9BD,KAAI,CAACE,SAAS,GAAGF,KAAI,CAACG,WAAW,CAACR,MAAM,CAAC;IACzCK,KAAI,CAACE,SAAS,CAACE,WAAW,GAAG,KAAK;IAClCJ,KAAI,CAACK,KAAK,GAAG,EAAE;IACfL,KAAI,CAACM,MAAM,GAAG,EAAE;IAChBN,KAAI,CAACO,aAAa,GAAG,CAAC;IACtBP,KAAI,CAACQ,SAAS,GAAG,IAAI;;EACtB;EAGAC,sCAAgB,GAAhB;IACCV,iBAAMW,gBAAgB,WAAE;IACxB,IAAIC,CAAC,GAAG,IAAI,CAACC,UAAU,GAAG,CAAC;IAC3B,IAAIC,CAAC,GAAG,IAAI,CAACC,WAAW,GAAG,CAAC;IAE5B,IAAI,CAACZ,SAAS,CAACa,IAAI,GAAGlB,KAAK,CAACmB,MAAM,CAAC;MAACC,CAAC,EAAC,CAACN,CAAC;MAAEO,CAAC,EAAC,CAACL;IAAC,CAAC,CAAC,GAAGhB,KAAK,CAACsB,MAAM,CAAC;MAACF,CAAC,EAACN,CAAC;MAAEO,CAAC,EAAC,CAACL;IAAC,CAAC,CAAC,GAAGhB,KAAK,CAACmB,MAAM,CAAC;MAACC,CAAC,EAAC,CAAC;MAAEC,CAAC,EAAC,CAACL;IAAC,CAAC,CAAC,GAAGhB,KAAK,CAACsB,MAAM,CAAC;MAACF,CAAC,EAAC,CAAC;MAAEC,CAAC,EAACL;IAAC,CAAC,CAAC,GAAGhB,KAAK,CAACmB,MAAM,CAAC;MAACC,CAAC,EAAC,CAACN,CAAC;MAAEO,CAAC,EAACL;IAAC,CAAC,CAAC,GAAGhB,KAAK,CAACsB,MAAM,CAAC;MAACF,CAAC,EAACN,CAAC;MAAEO,CAAC,EAACL;IAAC,CAAC,CAAC;EAC3L,CAAC;EAED;;;;;;EAMOJ,8BAAQ,GAAf,UAAgBW,MAAY;IAC3BrB,iBAAMsB,QAAQ,YAACD,MAAM,CAAC;IACtB,IAAI,CAAClB,SAAS,CAACmB,QAAQ,CAACD,MAAM,CAAClB,SAAS,CAAC;EAC1C,CAAC;EACF,kBAAC;AAAD,CAAC,CArDgCR,MAAM;;AAuDvC;;;;;;AAMAE,QAAQ,CAAC0B,iBAAiB,CAAC,aAAa,CAAC,GAAGb,WAAW","names":["Bullet","Sprite","registry","$path","__extends","_super","_this","className","errorLine","createChild","shouldClone","width","height","strokeOpacity","isDynamic","ErrorBullet","validatePosition","w","pixelWidth","h","pixelHeight","path","moveTo","x","y","lineTo","source","copyFrom","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\elements\\ErrorBullet.ts"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface IErrorBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface IErrorBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IErrorBulletAdapters extends IBulletAdapters, IErrorBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class ErrorBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IErrorBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IErrorBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IErrorBulletEvents;\r\n\r\n\tpublic errorLine:Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ErrorBullet\";\r\n\t\tthis.errorLine = this.createChild(Sprite);\r\n\t\tthis.errorLine.shouldClone = false;\r\n\t\tthis.width = 20;\r\n\t\tthis.height = 20;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.isDynamic = true;\r\n\t}\r\n\r\n\r\n\tvalidatePosition(){\r\n\t\tsuper.validatePosition();\r\n\t\tlet w = this.pixelWidth / 2;\r\n\t\tlet h = this.pixelHeight / 2;\r\n\r\n\t\tthis.errorLine.path = $path.moveTo({x:-w, y:-h}) + $path.lineTo({x:w, y:-h}) + $path.moveTo({x:0, y:-h}) + $path.lineTo({x:0, y:h}) + $path.moveTo({x:-w, y:h}) + $path.lineTo({x:w, y:h});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[ErrorBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.errorLine.copyFrom(source.errorLine);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}