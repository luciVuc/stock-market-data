{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nimport React from \"react\";\nimport { extent } from \"d3-array\";\nimport { set } from \"d3-collection\";\nimport flattenDeep from \"lodash.flattendeep\";\nimport Chart from \"../Chart\";\nimport { last, isObject, getClosestItem, zipper, isDefined, isNotDefined, functor, mapObject, find, shallowEqual } from \"./index\";\nexport function getChartOrigin(origin, contextWidth, contextHeight) {\n  var originCoordinates = typeof origin === \"function\" ? origin(contextWidth, contextHeight) : origin;\n  return originCoordinates;\n}\nexport function getDimensions(_ref, chartProps) {\n  var width = _ref.width,\n    height = _ref.height;\n  var chartHeight = chartProps.height || height;\n  return {\n    availableHeight: height,\n    width: width,\n    height: chartHeight\n  };\n}\nfunction values(func) {\n  return function (d) {\n    var obj = func(d);\n    if (isObject(obj)) {\n      return mapObject(obj);\n    }\n    return obj;\n  };\n}\nfunction isArraySize2AndNumber(yExtentsProp) {\n  if (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n    var _yExtentsProp = _slicedToArray(yExtentsProp, 2),\n      a = _yExtentsProp[0],\n      b = _yExtentsProp[1];\n    return typeof a == \"number\" && typeof b == \"number\";\n  }\n  return false;\n}\nexport function getNewChartConfig(innerDimension, children) {\n  var existingChartConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return React.Children.map(children, function (each) {\n    if (each && each.type.toString() === Chart.toString()) {\n      var chartProps = _extends({}, Chart.defaultProps, each.props);\n      var id = chartProps.id,\n        origin = chartProps.origin,\n        padding = chartProps.padding,\n        yExtentsProp = chartProps.yExtents,\n        yScaleProp = chartProps.yScale,\n        flipYScale = chartProps.flipYScale,\n        yExtentsCalculator = chartProps.yExtentsCalculator;\n      var yScale = yScaleProp.copy();\n      var _getDimensions = getDimensions(innerDimension, chartProps),\n        width = _getDimensions.width,\n        height = _getDimensions.height,\n        availableHeight = _getDimensions.availableHeight;\n      var yPan = chartProps.yPan;\n      var yPanEnabled = chartProps.yPanEnabled;\n      // var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n      // var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n\n      var yExtents = isDefined(yExtentsProp) ? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(functor) : undefined;\n      var prevChartConfig = find(existingChartConfig, function (d) {\n        return d.id === id;\n      });\n      if (isArraySize2AndNumber(yExtentsProp)) {\n        if (isDefined(prevChartConfig) && prevChartConfig.yPan && prevChartConfig.yPanEnabled && yPan && yPanEnabled && shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)) {\n          // console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n          // console.log(prevChartConfig.yScale.domain())\n          yScale.domain(prevChartConfig.yScale.domain());\n        } else {\n          var _yExtentsProp2 = _slicedToArray(yExtentsProp, 2),\n            a = _yExtentsProp2[0],\n            b = _yExtentsProp2[1];\n          yScale.domain([a, b]);\n        }\n      } else if (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n        if (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n          // do nothing\n        } else {\n          yScale.domain(prevChartConfig.yScale.domain());\n          yPanEnabled = true;\n        }\n      }\n      return {\n        id: id,\n        origin: functor(origin)(width, availableHeight),\n        padding: padding,\n        originalYExtentsProp: yExtentsProp,\n        yExtents: yExtents,\n        yExtentsCalculator: yExtentsCalculator,\n        flipYScale: flipYScale,\n        // yScale: setRange(yScale.copy(), height, padding, flipYScale),\n        yScale: yScale,\n        yPan: yPan,\n        yPanEnabled: yPanEnabled,\n        // mouseCoordinates,\n        width: width,\n        height: height\n      };\n    }\n    return undefined;\n  }).filter(function (each) {\n    return isDefined(each);\n  });\n}\nexport function getCurrentCharts(chartConfig, mouseXY) {\n  var currentCharts = chartConfig.filter(function (eachConfig) {\n    var top = eachConfig.origin[1];\n    var bottom = top + eachConfig.height;\n    return mouseXY[1] > top && mouseXY[1] < bottom;\n  }).map(function (config) {\n    return config.id;\n  });\n  return currentCharts;\n}\nfunction setRange(scale, height, padding, flipYScale) {\n  if (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n    if (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n    if (scale.rangeRoundPoints) scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n    if (scale.rangeRound) scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n  } else {\n    var _ref2 = isNaN(padding) ? padding : {\n        top: padding,\n        bottom: padding\n      },\n      top = _ref2.top,\n      bottom = _ref2.bottom;\n    scale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n  }\n  return scale;\n}\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n  var yValues = yExtents.map(function (eachExtent) {\n    return plotData.map(values(eachExtent));\n  });\n  var allYValues = flattenDeep(yValues);\n  // console.log(allYValues)\n  var realYDomain = yScale.invert ? extent(allYValues) : set(allYValues).values();\n  return realYDomain;\n}\nexport function getChartConfigWithUpdatedYScales(chartConfig, _ref3, xDomain, dy, chartsToPan) {\n  var plotData = _ref3.plotData,\n    xAccessor = _ref3.xAccessor,\n    displayXAccessor = _ref3.displayXAccessor,\n    fullData = _ref3.fullData;\n  var yDomains = chartConfig.map(function (_ref4) {\n    var yExtentsCalculator = _ref4.yExtentsCalculator,\n      yExtents = _ref4.yExtents,\n      yScale = _ref4.yScale;\n    var realYDomain = isDefined(yExtentsCalculator) ? yExtentsCalculator({\n      plotData: plotData,\n      xDomain: xDomain,\n      xAccessor: xAccessor,\n      displayXAccessor: displayXAccessor,\n      fullData: fullData\n    }) : yDomainFromYExtents(yExtents, yScale, plotData);\n\n    // console.log(\"yScale.domain() ->\", yScale.domain())\n\n    var yDomainDY = isDefined(dy) ? yScale.range().map(function (each) {\n      return each - dy;\n    }).map(yScale.invert) : yScale.domain();\n    return {\n      realYDomain: realYDomain,\n      yDomainDY: yDomainDY,\n      prevYDomain: yScale.domain()\n    };\n  });\n  var combine = zipper().combine(function (config, _ref5) {\n    var realYDomain = _ref5.realYDomain,\n      yDomainDY = _ref5.yDomainDY,\n      prevYDomain = _ref5.prevYDomain;\n    var id = config.id,\n      padding = config.padding,\n      height = config.height,\n      yScale = config.yScale,\n      yPan = config.yPan,\n      flipYScale = config.flipYScale,\n      _config$yPanEnabled = config.yPanEnabled,\n      yPanEnabled = _config$yPanEnabled === undefined ? false : _config$yPanEnabled;\n    var another = isDefined(chartsToPan) ? chartsToPan.indexOf(id) > -1 : true;\n    var domain = yPan && yPanEnabled ? another ? yDomainDY : prevYDomain : realYDomain;\n\n    // console.log(id, yPan, yPanEnabled, another);\n    // console.log(domain, realYDomain, prevYDomain);\n    var newYScale = setRange(yScale.copy().domain(domain), height, padding, flipYScale);\n    return _extends({}, config, {\n      yScale: newYScale,\n      realYDomain: realYDomain\n    });\n    // return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n  });\n\n  var updatedChartConfig = combine(chartConfig, yDomains);\n  // console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n  // console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n  return updatedChartConfig;\n}\nexport function getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n  var xValue = void 0,\n    item = void 0;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    item = getClosestItem(plotData, xValue, xAccessor);\n  } else {\n    var d = xScale.range().map(function (d, idx) {\n      return {\n        x: Math.abs(d - mouseXY[0]),\n        idx: idx\n      };\n    }).reduce(function (a, b) {\n      return a.x < b.x ? a : b;\n    });\n    item = isDefined(d) ? plotData[d.idx] : plotData[0];\n    // console.log(d, item);\n  }\n\n  return item;\n}\nexport function getXValue(xScale, xAccessor, mouseXY, plotData) {\n  var xValue = void 0,\n    item = void 0;\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    if (xValue > xAccessor(last(plotData)) && xScale.value) {\n      return Math.round(xValue);\n    } else {\n      item = getClosestItem(plotData, xValue, xAccessor);\n    }\n  } else {\n    var d = xScale.range().map(function (d, idx) {\n      return {\n        x: Math.abs(d - mouseXY[0]),\n        idx: idx\n      };\n    }).reduce(function (a, b) {\n      return a.x < b.x ? a : b;\n    });\n    item = isDefined(d) ? plotData[d.idx] : plotData[0];\n    // console.log(d, item);\n  }\n\n  return xAccessor(item);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,SACCC,IADD,EAECC,QAFD,EAGCC,cAHD,EAICC,MAJD,EAKCC,SALD,EAMCC,YAND,EAOCC,OAPD,EAQCC,SARD,EASCC,IATD,EAUCC,YAVD,QAWO,SAXP;AAaA,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,YAAhC,EAA8CC,aAA9C,EAA6D;EACnE,IAAMC,oBAAoB,OAAOH,MAAP,KAAkB,UAAlB,GACvBA,OAAOC,YAAP,EAAqBC,aAArB,CADuB,GAEvBF,MAFH;EAGA,OAAOG,iBAAP;AACA;AAED,OAAO,SAASC,aAAT,OAA0CC,UAA1C,EAAsD;EAAA,IAA7BC,KAA6B,QAA7BA,KAA6B;IAAtBC,MAAsB,QAAtBA,MAAsB;EAE5D,IAAMC,cAAeH,WAAWE,MAAX,IAAqBA,MAA1C;EAEA,OAAO;IACNE,iBAAiBF,MADX;IAEND,YAFM;IAGNC,QAAQC;EAHF,CAAP;AAKA;AAED,SAASE,MAAT,CAAgBC,IAAhB,EAAsB;EACrB,OAAO,UAACC,CAAD,EAAO;IACb,IAAMC,MAAMF,KAAKC,CAAL,CAAZ;IACA,IAAItB,SAASuB,GAAT,CAAJ,EAAmB;MAClB,OAAOjB,UAAUiB,GAAV,CAAP;IACA;IACD,OAAOA,GAAP;EACA,CAND;AAOA;AAED,SAASC,qBAAT,CAA+BC,YAA/B,EAA6C;EAC5C,IAAIC,MAAMC,OAAN,CAAcF,YAAd,KAA+BA,aAAaG,MAAb,KAAwB,CAA3D,EAA8D;IAAA,mCAC9CH,YAD8C;MACtDI,CADsD;MACnDC,CADmD;IAE7D,OAAQ,OAAOD,CAAP,IAAY,QAAZ,IAAwB,OAAOC,CAAP,IAAY,QAA5C;EACA;EACD,OAAO,KAAP;AACA;AAED,OAAO,SAASC,iBAAT,CAA2BC,cAA3B,EAA2CC,QAA3C,EAA+E;EAAA,IAA1BC,mBAA0B,uEAAJ,EAAI;EACrF,OAAOxC,MAAMyC,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,UAACI,IAAD,EAAU;IAC7C,IAAIA,QAAQA,KAAKC,IAAL,CAAUC,QAAV,OAAyBzC,MAAMyC,QAAN,EAArC,EAAuD;MACtD,IAAMxB,0BACFjB,MAAM0C,YADJ,EAEFH,KAAKI,KAFH,CAAN;MADsD,IAMrDC,EANqD,GAalD3B,UAbkD,CAMrD2B,EANqD;QAOrDhC,MAPqD,GAalDK,UAbkD,CAOrDL,MAPqD;QAQrDiC,OARqD,GAalD5B,UAbkD,CAQrD4B,OARqD;QAS3ClB,YAT2C,GAalDV,UAbkD,CASrD6B,QATqD;QAU7CC,UAV6C,GAalD9B,UAbkD,CAUrD+B,MAVqD;QAWrDC,UAXqD,GAalDhC,UAbkD,CAWrDgC,UAXqD;QAYrDC,kBAZqD,GAalDjC,UAbkD,CAYrDiC,kBAZqD;MAetD,IAAMF,SAASD,WAAWI,IAAX,EAAf;MAfsD,qBAkBlDnC,cAAckB,cAAd,EAA8BjB,UAA9B,CAlBkD;QAiBrDC,KAjBqD,kBAiBrDA,KAjBqD;QAiB9CC,MAjB8C,kBAiB9CA,MAjB8C;QAiBtCE,eAjBsC,kBAiBtCA,eAjBsC;MAAA,IAoB9C+B,IApB8C,GAoBrCnC,UApBqC,CAoB9CmC,IApB8C;MAAA,IAqBhDC,WArBgD,GAqBhCpC,UArBgC,CAqBhDoC,WArBgD;MAsBtD;MACA;;MACA,IAAMP,WAAWzC,UAAUsB,YAAV,IACd,CAACC,MAAMC,OAAN,CAAcF,YAAd,IAA8BA,YAA9B,GAA6C,CAACA,YAAD,CAA9C,EAA8DW,GAA9D,CAAkE/B,OAAlE,CADc,GAEd+C,SAFH;MAIA,IAAMC,kBAAkB9C,KAAK2B,mBAAL,EAA0B;QAAA,OAAKZ,EAAEoB,EAAF,KAASA,EAAd;MAAA,CAA1B,CAAxB;MAEA,IAAIlB,sBAAsBC,YAAtB,CAAJ,EAAyC;QACxC,IACCtB,UAAUkD,eAAV,KACGA,gBAAgBH,IADnB,IAEGG,gBAAgBF,WAFnB,IAGGD,IAHH,IAIGC,WAJH,IAKG3C,aAAa6C,gBAAgBC,oBAA7B,EAAmD7B,YAAnD,CANJ,EAOE;UACD;UACA;UACAqB,OAAOS,MAAP,CAAcF,gBAAgBP,MAAhB,CAAuBS,MAAvB,EAAd;QACA,CAXD,MAWO;UAAA,oCACS9B,YADT;YACCI,CADD;YACIC,CADJ;UAENgB,OAAOS,MAAP,CAAc,CAAC1B,CAAD,EAAIC,CAAJ,CAAd;QACA;MACD,CAhBD,MAgBO,IAAI3B,UAAUkD,eAAV,KAA8BA,gBAAgBF,WAAlD,EAA+D;QACrE,IAAI3B,sBAAsB6B,gBAAgBC,oBAAtC,CAAJ,EAAiE;UAChE;QAAA,CADD,MAEO;UACNR,OAAOS,MAAP,CAAcF,gBAAgBP,MAAhB,CAAuBS,MAAvB,EAAd;UACAJ,cAAc,IAAd;QACA;MACD;MAED,OAAO;QACNT,MADM;QAENhC,QAAQL,QAAQK,MAAR,EAAgBM,KAAhB,EAAuBG,eAAvB,CAFF;QAGNwB,gBAHM;QAINW,sBAAsB7B,YAJhB;QAKNmB,kBALM;QAMNI,sCANM;QAOND,sBAPM;QAQN;QACAD,QAAQA,MATF;QAUNI,UAVM;QAWNC,wBAXM;QAYN;QACAnC,YAbM;QAcNC;MAdM,CAAP;IAgBA;IACD,OAAOmC,SAAP;EACA,CA1EM,EA0EJI,MA1EI,CA0EG;IAAA,OAAQrD,UAAUkC,IAAV,CAAR;EAAA,CA1EH,CAAP;AA2EA;AACD,OAAO,SAASoB,gBAAT,CAA0BC,WAA1B,EAAuCC,OAAvC,EAAgD;EACtD,IAAMC,gBAAgBF,YAAYF,MAAZ,CAAmB,sBAAc;IACtD,IAAMK,MAAMC,WAAWpD,MAAX,CAAkB,CAAlB,CAAZ;IACA,IAAMqD,SAASF,MAAMC,WAAW7C,MAAhC;IACA,OAAQ0C,QAAQ,CAAR,IAAaE,GAAb,IAAoBF,QAAQ,CAAR,IAAaI,MAAzC;EACA,CAJqB,EAInB3B,GAJmB,CAIf;IAAA,OAAU4B,OAAOtB,EAAjB;EAAA,CAJe,CAAtB;EAMA,OAAOkB,aAAP;AACA;AAED,SAASK,QAAT,CAAkBC,KAAlB,EAAyBjD,MAAzB,EAAiC0B,OAAjC,EAA0CI,UAA1C,EAAsD;EACrD,IAAImB,MAAMC,gBAAN,IAA0B/D,aAAa8D,MAAME,MAAnB,CAA9B,EAA0D;IACzD,IAAIC,MAAM1B,OAAN,CAAJ,EAAoB,MAAM,IAAI2B,KAAJ,CAAU,8CAAV,CAAN;IACpB,IAAIJ,MAAMC,gBAAV,EAA4BD,MAAMC,gBAAN,CAAuBpB,aAAa,CAAC,CAAD,EAAI9B,MAAJ,CAAb,GAA2B,CAACA,MAAD,EAAS,CAAT,CAAlD,EAA+D0B,OAA/D;IAC5B,IAAIuB,MAAMK,UAAV,EAAsBL,MAAMM,KAAN,CAAYzB,aAAa,CAAC,CAAD,EAAI9B,MAAJ,CAAb,GAA2B,CAACA,MAAD,EAAS,CAAT,CAAvC,EAAoD0B,OAApD,CAA4DA,OAA5D;EACtB,CAJD,MAIO;IAAA,YACkB0B,MAAM1B,OAAN,IACrBA,OADqB,GAErB;QAAEkB,KAAKlB,OAAP;QAAgBoB,QAAQpB;MAAxB,CAHG;MACEkB,GADF,SACEA,GADF;MACOE,MADP,SACOA,MADP;IAKNG,MAAMM,KAAN,CAAYzB,aAAa,CAACc,GAAD,EAAM5C,SAAS8C,MAAf,CAAb,GAAsC,CAAC9C,SAAS8C,MAAV,EAAkBF,GAAlB,CAAlD;EACA;EACD,OAAOK,KAAP;AACA;AAED,SAASO,mBAAT,CAA6B7B,QAA7B,EAAuCE,MAAvC,EAA+C4B,QAA/C,EAAyD;EACxD,IAAMC,UAAU/B,SAASR,GAAT,CAAa;IAAA,OAC5BsC,SAAStC,GAAT,CAAahB,OAAOwD,UAAP,CAAb,CAD4B;EAAA,CAAb,CAAhB;EAGA,IAAMC,aAAahF,YAAY8E,OAAZ,CAAnB;EACA;EACA,IAAMG,cAAehC,OAAOsB,MAAR,GACjBzE,OAAOkF,UAAP,CADiB,GAEjBjF,IAAIiF,UAAJ,EAAgBzD,MAAhB,EAFH;EAIA,OAAO0D,WAAP;AACA;AAGD,OAAO,SAASC,gCAAT,CACNrB,WADM,SAGNsB,OAHM,EAINC,EAJM,EAKNC,WALM,EAML;EAAA,IAJCR,QAID,SAJCA,QAID;IAJWS,SAIX,SAJWA,SAIX;IAJsBC,gBAItB,SAJsBA,gBAItB;IAJwCC,QAIxC,SAJwCA,QAIxC;EACD,IAAMC,WAAW5B,YACftB,GADe,CACX,iBAA8C;IAAA,IAA3CY,kBAA2C,SAA3CA,kBAA2C;MAAvBJ,QAAuB,SAAvBA,QAAuB;MAAbE,MAAa,SAAbA,MAAa;IAElD,IAAMgC,cAAc3E,UAAU6C,kBAAV,IACjBA,mBAAmB;MAAE0B,kBAAF;MAAYM,gBAAZ;MAAqBG,oBAArB;MAAgCC,kCAAhC;MAAkDC;IAAlD,CAAnB,CADiB,GAEjBZ,oBAAoB7B,QAApB,EAA8BE,MAA9B,EAAsC4B,QAAtC,CAFH;;IAIA;;IAEA,IAAMa,YAAYpF,UAAU8E,EAAV,IACfnC,OAAO0B,KAAP,GAAepC,GAAf,CAAmB;MAAA,OAAQC,OAAO4C,EAAf;IAAA,CAAnB,EAAsC7C,GAAtC,CAA0CU,OAAOsB,MAAjD,CADe,GAEftB,OAAOS,MAAP,EAFH;IAGA,OAAO;MACNuB,wBADM;MAENS,oBAFM;MAGNC,aAAa1C,OAAOS,MAAP;IAHP,CAAP;EAKA,CAjBe,CAAjB;EAmBA,IAAMkC,UAAUvF,SACduF,OADc,CACN,UAACzB,MAAD,SAAqD;IAAA,IAA1Cc,WAA0C,SAA1CA,WAA0C;MAA7BS,SAA6B,SAA7BA,SAA6B;MAAlBC,WAAkB,SAAlBA,WAAkB;IAAA,IACrD9C,EADqD,GACkBsB,MADlB,CACrDtB,EADqD;MACjDC,OADiD,GACkBqB,MADlB,CACjDrB,OADiD;MACxC1B,MADwC,GACkB+C,MADlB,CACxC/C,MADwC;MAChC6B,MADgC,GACkBkB,MADlB,CAChClB,MADgC;MACxBI,IADwB,GACkBc,MADlB,CACxBd,IADwB;MAClBH,UADkB,GACkBiB,MADlB,CAClBjB,UADkB;MAAA2C,sBACkB1B,MADlB,CACNb,WADM;MACNA,WADM,uCACQ,KADR;IAG7D,IAAMwC,UAAUxF,UAAU+E,WAAV,IACbA,YAAYU,OAAZ,CAAoBlD,EAApB,IAA0B,CAAC,CADd,GAEb,IAFH;IAGA,IAAMa,SAASL,QAAQC,WAAR,GACZwC,UAAUJ,SAAV,GAAsBC,WADV,GAEZV,WAFH;;IAIA;IACA;IACA,IAAMe,YAAY5B,SACjBnB,OAAOG,IAAP,GAAcM,MAAd,CAAqBA,MAArB,CADiB,EACatC,MADb,EACqB0B,OADrB,EAC8BI,UAD9B,CAAlB;IAGA,oBACIiB,MADJ;MAEClB,QAAQ+C,SAFT;MAGCf,aAAaA;IAHd;IAKA;EACA,CAtBc,CAAhB;;EAwBA,IAAMgB,qBAAqBL,QAAQ/B,WAAR,EAAqB4B,QAArB,CAA3B;EACA;EACA;;EAEA,OAAOQ,kBAAP;AACA;AAED,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgCb,SAAhC,EAA2CxB,OAA3C,EAAoDe,QAApD,EAA8D;EACpE,IAAIuB,eAAJ;IAAYC,aAAZ;EACA,IAAIF,OAAO5B,MAAX,EAAmB;IAClB6B,SAASD,OAAO5B,MAAP,CAAcT,QAAQ,CAAR,CAAd,CAAT;IACAuC,OAAOjG,eAAeyE,QAAf,EAAyBuB,MAAzB,EAAiCd,SAAjC,CAAP;EACA,CAHD,MAGO;IACN,IAAM7D,IAAI0E,OAAOxB,KAAP,GAAepC,GAAf,CAAmB,UAACd,CAAD,EAAI6E,GAAJ;MAAA,OAAa;QAAEC,GAAGC,KAAKC,GAAL,CAAShF,IAAIqC,QAAQ,CAAR,CAAb,CAAL;QAA+BwC;MAA/B,CAAb;IAAA,CAAnB,EAAuEI,MAAvE,CAA8E,UAAC1E,CAAD,EAAIC,CAAJ;MAAA,OAAUD,EAAEuE,CAAF,GAAMtE,EAAEsE,CAAR,GAAYvE,CAAZ,GAAgBC,CAA1B;IAAA,CAA9E,CAAV;IACAoE,OAAO/F,UAAUmB,CAAV,IAAeoD,SAASpD,EAAE6E,GAAX,CAAf,GAAiCzB,SAAS,CAAT,CAAxC;IACA;EACA;;EACD,OAAOwB,IAAP;AACA;AAED,OAAO,SAASM,SAAT,CAAmBR,MAAnB,EAA2Bb,SAA3B,EAAsCxB,OAAtC,EAA+Ce,QAA/C,EAAyD;EAE/D,IAAIuB,eAAJ;IAAYC,aAAZ;EACA,IAAIF,OAAO5B,MAAX,EAAmB;IAClB6B,SAASD,OAAO5B,MAAP,CAAcT,QAAQ,CAAR,CAAd,CAAT;IACA,IAAIsC,SAASd,UAAUpF,KAAK2E,QAAL,CAAV,CAAT,IAAsCsB,OAAOS,KAAjD,EAAwD;MACvD,OAAOJ,KAAKK,KAAL,CAAWT,MAAX,CAAP;IACA,CAFD,MAEO;MACNC,OAAOjG,eAAeyE,QAAf,EAAyBuB,MAAzB,EAAiCd,SAAjC,CAAP;IACA;EACD,CAPD,MAOO;IACN,IAAM7D,IAAI0E,OAAOxB,KAAP,GAAepC,GAAf,CAAmB,UAACd,CAAD,EAAI6E,GAAJ;MAAA,OAAa;QAAEC,GAAGC,KAAKC,GAAL,CAAShF,IAAIqC,QAAQ,CAAR,CAAb,CAAL;QAA+BwC;MAA/B,CAAb;IAAA,CAAnB,EAAuEI,MAAvE,CAA8E,UAAC1E,CAAD,EAAIC,CAAJ;MAAA,OAAUD,EAAEuE,CAAF,GAAMtE,EAAEsE,CAAR,GAAYvE,CAAZ,GAAgBC,CAA1B;IAAA,CAA9E,CAAV;IACAoE,OAAO/F,UAAUmB,CAAV,IAAeoD,SAASpD,EAAE6E,GAAX,CAAf,GAAiCzB,SAAS,CAAT,CAAxC;IACA;EACA;;EACD,OAAOS,UAAUe,IAAV,CAAP;AACA","names":["React","extent","set","flattenDeep","Chart","last","isObject","getClosestItem","zipper","isDefined","isNotDefined","functor","mapObject","find","shallowEqual","getChartOrigin","origin","contextWidth","contextHeight","originCoordinates","getDimensions","chartProps","width","height","chartHeight","availableHeight","values","func","d","obj","isArraySize2AndNumber","yExtentsProp","Array","isArray","length","a","b","getNewChartConfig","innerDimension","children","existingChartConfig","Children","map","each","type","toString","defaultProps","props","id","padding","yExtents","yScaleProp","yScale","flipYScale","yExtentsCalculator","copy","yPan","yPanEnabled","undefined","prevChartConfig","originalYExtentsProp","domain","filter","getCurrentCharts","chartConfig","mouseXY","currentCharts","top","eachConfig","bottom","config","setRange","scale","rangeRoundPoints","invert","isNaN","Error","rangeRound","range","yDomainFromYExtents","plotData","yValues","eachExtent","allYValues","realYDomain","getChartConfigWithUpdatedYScales","xDomain","dy","chartsToPan","xAccessor","displayXAccessor","fullData","yDomains","yDomainDY","prevYDomain","combine","_config$yPanEnabled","another","indexOf","newYScale","updatedChartConfig","getCurrentItem","xScale","xValue","item","idx","x","Math","abs","reduce","getXValue","value","round"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\lib\\utils\\ChartDataUtil.js"],"sourcesContent":["\n\nimport React from \"react\";\nimport { extent } from \"d3-array\";\nimport { set } from \"d3-collection\";\nimport flattenDeep from \"lodash.flattendeep\";\n\nimport Chart from \"../Chart\";\n\nimport {\n\tlast,\n\tisObject,\n\tgetClosestItem,\n\tzipper,\n\tisDefined,\n\tisNotDefined,\n\tfunctor,\n\tmapObject,\n\tfind,\n\tshallowEqual\n} from \"./index\";\n\nexport function getChartOrigin(origin, contextWidth, contextHeight) {\n\tconst originCoordinates = typeof origin === \"function\"\n\t\t? origin(contextWidth, contextHeight)\n\t\t: origin;\n\treturn originCoordinates;\n}\n\nexport function getDimensions({ width, height }, chartProps) {\n\n\tconst chartHeight = (chartProps.height || height);\n\n\treturn {\n\t\tavailableHeight: height,\n\t\twidth,\n\t\theight: chartHeight\n\t};\n}\n\nfunction values(func) {\n\treturn (d) => {\n\t\tconst obj = func(d);\n\t\tif (isObject(obj)) {\n\t\t\treturn mapObject(obj);\n\t\t}\n\t\treturn obj;\n\t};\n}\n\nfunction isArraySize2AndNumber(yExtentsProp) {\n\tif (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n\t\tconst [a, b] = yExtentsProp;\n\t\treturn (typeof a == \"number\" && typeof b == \"number\");\n\t}\n\treturn false;\n}\n\nexport function getNewChartConfig(innerDimension, children, existingChartConfig = []) {\n\treturn React.Children.map(children, (each) => {\n\t\tif (each && each.type.toString() === Chart.toString()) {\n\t\t\tconst chartProps = {\n\t\t\t\t...Chart.defaultProps,\n\t\t\t\t...each.props\n\t\t\t};\n\t\t\tconst {\n\t\t\t\tid,\n\t\t\t\torigin,\n\t\t\t\tpadding,\n\t\t\t\tyExtents: yExtentsProp,\n\t\t\t\tyScale: yScaleProp,\n\t\t\t\tflipYScale,\n\t\t\t\tyExtentsCalculator\n\t\t\t} = chartProps;\n\n\t\t\tconst yScale = yScaleProp.copy();\n\t\t\tconst {\n\t\t\t\twidth, height, availableHeight\n\t\t\t} = getDimensions(innerDimension, chartProps);\n\n\t\t\tconst { yPan } = chartProps;\n\t\t\tlet { yPanEnabled } = chartProps;\n\t\t\t// var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n\t\t\t// var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n\t\t\tconst yExtents = isDefined(yExtentsProp)\n\t\t\t\t? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(functor)\n\t\t\t\t: undefined;\n\n\t\t\tconst prevChartConfig = find(existingChartConfig, d => d.id === id);\n\n\t\t\tif (isArraySize2AndNumber(yExtentsProp)) {\n\t\t\t\tif (\n\t\t\t\t\tisDefined(prevChartConfig)\n\t\t\t\t\t&& prevChartConfig.yPan\n\t\t\t\t\t&& prevChartConfig.yPanEnabled\n\t\t\t\t\t&& yPan\n\t\t\t\t\t&& yPanEnabled\n\t\t\t\t\t&& shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)\n\t\t\t\t) {\n\t\t\t\t\t// console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n\t\t\t\t\t// console.log(prevChartConfig.yScale.domain())\n\t\t\t\t\tyScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t} else {\n\t\t\t\t\tconst [a, b] = yExtentsProp;\n\t\t\t\t\tyScale.domain([a, b]);\n\t\t\t\t}\n\t\t\t} else if (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n\t\t\t\tif (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n\t\t\t\t\t// do nothing\n\t\t\t\t} else {\n\t\t\t\t\tyScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t\tyPanEnabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\torigin: functor(origin)(width, availableHeight),\n\t\t\t\tpadding,\n\t\t\t\toriginalYExtentsProp: yExtentsProp,\n\t\t\t\tyExtents,\n\t\t\t\tyExtentsCalculator,\n\t\t\t\tflipYScale,\n\t\t\t\t// yScale: setRange(yScale.copy(), height, padding, flipYScale),\n\t\t\t\tyScale: yScale,\n\t\t\t\tyPan,\n\t\t\t\tyPanEnabled,\n\t\t\t\t// mouseCoordinates,\n\t\t\t\twidth,\n\t\t\t\theight\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}).filter(each => isDefined(each));\n}\nexport function getCurrentCharts(chartConfig, mouseXY) {\n\tconst currentCharts = chartConfig.filter(eachConfig => {\n\t\tconst top = eachConfig.origin[1];\n\t\tconst bottom = top + eachConfig.height;\n\t\treturn (mouseXY[1] > top && mouseXY[1] < bottom);\n\t}).map(config => config.id);\n\n\treturn currentCharts;\n}\n\nfunction setRange(scale, height, padding, flipYScale) {\n\tif (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n\t\tif (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n\t\tif (scale.rangeRoundPoints) scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n\t\tif (scale.rangeRound) scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n\t} else {\n\t\tconst { top, bottom } = isNaN(padding)\n\t\t\t? padding\n\t\t\t: { top: padding, bottom: padding };\n\n\t\tscale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n\t}\n\treturn scale;\n}\n\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n\tconst yValues = yExtents.map(eachExtent =>\n\t\tplotData.map(values(eachExtent)));\n\n\tconst allYValues = flattenDeep(yValues);\n\t// console.log(allYValues)\n\tconst realYDomain = (yScale.invert)\n\t\t? extent(allYValues)\n\t\t: set(allYValues).values();\n\n\treturn realYDomain;\n}\n\n\nexport function getChartConfigWithUpdatedYScales(\n\tchartConfig,\n\t{ plotData, xAccessor, displayXAccessor, fullData },\n\txDomain,\n\tdy,\n\tchartsToPan\n) {\n\tconst yDomains = chartConfig\n\t\t.map(({ yExtentsCalculator, yExtents, yScale }) => {\n\n\t\t\tconst realYDomain = isDefined(yExtentsCalculator)\n\t\t\t\t? yExtentsCalculator({ plotData, xDomain, xAccessor, displayXAccessor, fullData })\n\t\t\t\t: yDomainFromYExtents(yExtents, yScale, plotData);\n\n\t\t\t// console.log(\"yScale.domain() ->\", yScale.domain())\n\n\t\t\tconst yDomainDY = isDefined(dy)\n\t\t\t\t? yScale.range().map(each => each - dy).map(yScale.invert)\n\t\t\t\t: yScale.domain();\n\t\t\treturn {\n\t\t\t\trealYDomain,\n\t\t\t\tyDomainDY,\n\t\t\t\tprevYDomain: yScale.domain(),\n\t\t\t};\n\t\t});\n\n\tconst combine = zipper()\n\t\t.combine((config, { realYDomain, yDomainDY, prevYDomain }) => {\n\t\t\tconst { id, padding, height, yScale, yPan, flipYScale, yPanEnabled = false } = config;\n\n\t\t\tconst another = isDefined(chartsToPan)\n\t\t\t\t? chartsToPan.indexOf(id) > -1\n\t\t\t\t: true;\n\t\t\tconst domain = yPan && yPanEnabled\n\t\t\t\t? another ? yDomainDY : prevYDomain\n\t\t\t\t: realYDomain;\n\n\t\t\t// console.log(id, yPan, yPanEnabled, another);\n\t\t\t// console.log(domain, realYDomain, prevYDomain);\n\t\t\tconst newYScale = setRange(\n\t\t\t\tyScale.copy().domain(domain), height, padding, flipYScale\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...config,\n\t\t\t\tyScale: newYScale,\n\t\t\t\trealYDomain: realYDomain,\n\t\t\t};\n\t\t\t// return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n\t\t});\n\n\tconst updatedChartConfig = combine(chartConfig, yDomains);\n\t// console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n\t// console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n\treturn updatedChartConfig;\n}\n\nexport function getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n\tlet xValue, item;\n\tif (xScale.invert) {\n\t\txValue = xScale.invert(mouseXY[0]);\n\t\titem = getClosestItem(plotData, xValue, xAccessor);\n\t} else {\n\t\tconst d = xScale.range().map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx })).reduce((a, b) => a.x < b.x ? a : b);\n\t\titem = isDefined(d) ? plotData[d.idx] : plotData[0];\n\t\t// console.log(d, item);\n\t}\n\treturn item;\n}\n\nexport function getXValue(xScale, xAccessor, mouseXY, plotData) {\n\n\tlet xValue, item;\n\tif (xScale.invert) {\n\t\txValue = xScale.invert(mouseXY[0]);\n\t\tif (xValue > xAccessor(last(plotData)) && xScale.value) {\n\t\t\treturn Math.round(xValue);\n\t\t} else {\n\t\t\titem = getClosestItem(plotData, xValue, xAccessor);\n\t\t}\n\t} else {\n\t\tconst d = xScale.range().map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx })).reduce((a, b) => a.x < b.x ? a : b);\n\t\titem = isDefined(d) ? plotData[d.idx] : plotData[0];\n\t\t// console.log(d, item);\n\t}\n\treturn xAccessor(item);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}