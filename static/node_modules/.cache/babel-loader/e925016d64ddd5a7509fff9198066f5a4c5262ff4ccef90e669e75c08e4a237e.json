{"ast":null,"code":"/**\r\n * Defines Funnel Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\nimport { FunnelTick } from \"../elements/FunnelTick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $array from \"../../core/utils/Array\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { Disposer } from \"../../core/utils/Disposer\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar FunnelSeriesDataItem = /** @class */function (_super) {\n  __extends(FunnelSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function FunnelSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"FunnelSeriesDataItem\";\n    // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\n    _this.events.on(\"visibilitychanged\", function () {\n      if (_this.component) {\n        _this.component.invalidateDataItems();\n      }\n    }, _this, false);\n    _this.applyTheme();\n    return _this;\n  }\n  Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\n    /**\r\n     * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n     *\r\n     * @readonly\r\n     * @return Slice element\r\n     */\n    get: function () {\n      var _this = this;\n      if (!this._sliceLink) {\n        var sliceLink_1 = this.component.sliceLinks.create();\n        this._sliceLink = sliceLink_1;\n        this._disposers.push(sliceLink_1);\n        sliceLink_1.parent = this.component.slicesContainer;\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.sliceLinks.removeValue(sliceLink_1);\n          }\n        }));\n        this.addSprite(sliceLink_1);\n        sliceLink_1.visible = this.visible;\n      }\n      return this._sliceLink;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeriesDataItem;\n}(PercentSeriesDataItem);\nexport { FunnelSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\nvar FunnelSeries = /** @class */function (_super) {\n  __extends(FunnelSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function FunnelSeries() {\n    var _this = _super.call(this) || this;\n    _this._nextY = 0;\n    _this.className = \"FunnelSeries\";\n    _this.orientation = \"vertical\";\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.slicesContainer.width = percent(100);\n    _this.slicesContainer.height = percent(100);\n    _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\n    _this.labelsOpposite = true;\n    _this.labelsContainer.layout = \"absolute\";\n    _this.bottomRatio = 0;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Creates a [[FunnelSlice]] element.\r\n   *\r\n   * @return Slice\r\n   */\n  FunnelSeries.prototype.createSlice = function () {\n    return new FunnelSlice();\n  };\n  /**\r\n   * Creates a [[FunnelTick]] element.\r\n   *\r\n   * @return Tick\r\n   */\n  FunnelSeries.prototype.createTick = function () {\n    return new FunnelTick();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  FunnelSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Funnel Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n  FunnelSeries.prototype.createDataItem = function () {\n    return new FunnelSeriesDataItem();\n  };\n  /**\r\n   * Inits FunnelSlice.\r\n   *\r\n   * @param slice to init\r\n   */\n  FunnelSeries.prototype.initSlice = function (slice) {\n    slice.isMeasured = false;\n    slice.defaultState.properties.scale = 1;\n    slice.observe(\"scale\", this.handleSliceScale, this);\n    slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\n    slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\n    var hoverState = slice.states.create(\"hover\");\n    hoverState.properties.expandDistance = 0.2;\n  };\n  /**\r\n   * [initLabel description]\r\n   *\r\n   * @todo Description\r\n   * @param label [description]\r\n   */\n  FunnelSeries.prototype.initLabel = function (label) {\n    _super.prototype.initLabel.call(this, label);\n    label.verticalCenter = \"middle\";\n    label.horizontalCenter = \"middle\";\n    label.isMeasured = true;\n    label.padding(5, 5, 5, 5);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  FunnelSeries.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n    this._nextY = 0;\n  };\n  /**\r\n   * [validateDataElements description]\r\n   *\r\n   * @todo Description\r\n   * @ignore Exclude from docs\r\n   */\n  FunnelSeries.prototype.validateDataElements = function () {\n    var _this = this;\n    var slicesContainer = this.slicesContainer;\n    var labelsContainer = this.labelsContainer;\n    var labelTemplate = this.labels.template;\n    if (this.alignLabels) {\n      labelTemplate.interactionsEnabled = true;\n      slicesContainer.isMeasured = true;\n      labelsContainer.isMeasured = true;\n    } else {\n      labelTemplate.interactionsEnabled = false;\n      slicesContainer.isMeasured = false;\n      labelsContainer.isMeasured = false;\n    }\n    var total = 0;\n    var count = 0;\n    this.dataItems.each(function (dItem) {\n      if ($type.hasValue(dItem.value)) {\n        count++;\n        if (dItem.value > 0) {\n          total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\n        } else {\n          if (_this.ignoreZeroValues) {\n            count--;\n          } else {\n            if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\n              count--;\n            } else {\n              total += 1;\n            }\n          }\n        }\n      }\n    });\n    this._total = 1 / count * total;\n    this._count = count;\n    _super.prototype.validateDataElements.call(this);\n    this.arrangeLabels();\n  };\n  /**\r\n   * [getNextValue description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem  [description]\r\n   * @return [description]\r\n   */\n  FunnelSeries.prototype.getNextValue = function (dataItem) {\n    var index = dataItem.index;\n    var nextValue = dataItem.getWorkingValue(\"value\");\n    if (index < this.dataItems.length - 1) {\n      var nextItem = this.dataItems.getIndex(index + 1);\n      nextValue = nextItem.getWorkingValue(\"value\");\n      if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || nextItem.value == 0 && this.ignoreZeroValues) {\n        return this.getNextValue(nextItem);\n      }\n    }\n    return nextValue;\n  };\n  /**\r\n   * [formDataElement description]\r\n   *\r\n   * @todo Description\r\n   */\n  FunnelSeries.prototype.formDataElement = function () {};\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  FunnelSeries.prototype.validateDataElement = function (dataItem) {\n    var _this = this;\n    //if ($type.hasValue(dataItem.value)) {\n    // FunnelSlice\n    var slice = dataItem.slice;\n    slice.orientation = this.orientation;\n    var sliceLink = dataItem.sliceLink;\n    sliceLink.orientation = this.orientation;\n    var tick = dataItem.tick;\n    var label = dataItem.label;\n    tick.slice = slice;\n    tick.label = label;\n    if ($type.hasValue(dataItem.value)) {\n      this.decorateSlice(dataItem);\n      $array.each(dataItem.sprites, function (sprite) {\n        if (dataItem.value == 0 && _this.ignoreZeroValues) {\n          sprite.__disabled = true;\n        } else {\n          sprite.__disabled = false;\n        }\n      });\n    } else {\n      $array.each(dataItem.sprites, function (sprite) {\n        sprite.__disabled = true;\n      });\n    }\n    if (dataItem.index == this.dataItems.length - 1) {\n      sliceLink.disabled = true;\n    }\n    // do this at the end, otherwise bullets won't be positioned properly\n    _super.prototype.validateDataElement.call(this, dataItem);\n    sliceLink.fill = slice.fill;\n    //}\n  };\n  /**\r\n   * [decorateSlice description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem [description]\r\n   */\n  FunnelSeries.prototype.decorateSlice = function (dataItem) {\n    var slice = dataItem.slice;\n    var sliceLink = dataItem.sliceLink;\n    var label = dataItem.label;\n    var tick = dataItem.tick;\n    var maxWidth = this.slicesContainer.innerWidth;\n    var maxHeight = this.slicesContainer.innerHeight;\n    var nextValue = this.getNextValue(dataItem);\n    var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\n    var bottomRatio = this.bottomRatio;\n    var d = 1;\n    if (dataItem.value != 0) {\n      d = workingValue / Math.abs(dataItem.value);\n    } else {\n      if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\n        d = 0.000001;\n      }\n    }\n    if (this.ignoreZeroValues && dataItem.value == 0) {\n      dataItem.__disabled = true;\n      return;\n    } else {\n      dataItem.__disabled = false;\n    }\n    if (this._nextY == Infinity) {\n      this._nextY = 0;\n    }\n    if (this.orientation == \"vertical\") {\n      var linkHeight = sliceLink.pixelHeight * d;\n      maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\n      slice.y = this._nextY;\n      slice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\n      slice.x = maxWidth / 2;\n      if (!this.alignLabels) {\n        label.x = slice.x;\n      } else {\n        label.x = undefined;\n      }\n      label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\n      this._nextY += slice.pixelHeight + linkHeight;\n      sliceLink.y = this._nextY - linkHeight;\n      sliceLink.x = slice.x;\n    } else {\n      var linkWidth = sliceLink.pixelWidth * d;\n      maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\n      slice.x = this._nextY;\n      slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\n      slice.y = maxHeight / 2;\n      if (!this.alignLabels) {\n        label.y = slice.y;\n      } else {\n        label.y = this.labelsContainer.measuredHeight;\n      }\n      label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\n      this._nextY += slice.pixelWidth + linkWidth;\n      sliceLink.x = this._nextY - linkWidth;\n      sliceLink.y = slice.y;\n    }\n  };\n  FunnelSeries.prototype.getLastLabel = function (index) {\n    if (index > 0) {\n      var lastLabel = this.labels.getIndex(index);\n      if (lastLabel.__disabled || !lastLabel.visible) {\n        return this.getLastLabel(index - 1);\n      } else {\n        return lastLabel;\n      }\n    }\n  };\n  /**\r\n   * [arrangeLabels description]\r\n   *\r\n   * @todo Description\r\n   */\n  FunnelSeries.prototype.arrangeLabels = function () {\n    if (this.alignLabels) {\n      var count = this.labels.length;\n      if (count > 1) {\n        var lastLabel = this.getLastLabel(count - 1);\n        if (lastLabel) {\n          var lastY = lastLabel.pixelY;\n          var lastX = lastLabel.pixelX;\n          if (count > 1) {\n            for (var i = count - 2; i >= 0; i--) {\n              var label = this.labels.getIndex(i);\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY + label.measuredHeight > lastY) {\n                    label.y = Math.min(1000000, lastY - label.measuredHeight);\n                  }\n                }\n                // horizontal\n                else {\n                  if (label.pixelX + label.measuredWidth > lastX) {\n                    label.x = Math.min(1000000, lastX - label.measuredWidth);\n                  }\n                }\n                lastY = label.pixelY;\n                lastX = label.pixelX;\n              }\n            }\n            lastY = 0;\n            lastX = 0;\n            for (var i = 0; i < count; i++) {\n              var label = this.labels.getIndex(i);\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY < lastY) {\n                    label.y = Math.min(1000000, lastY);\n                  }\n                }\n                // horizontal\n                else {\n                  if (label.pixelX < lastX) {\n                    label.x = Math.min(1000000, lastX);\n                  }\n                }\n                lastY += label.measuredHeight;\n                lastX += label.measuredWidth;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\r\n   * Positions series bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet  Bullet\r\n   */\n  FunnelSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n    var dataItem = bullet.dataItem;\n    var slice = dataItem.slice;\n    var locationX = bullet.locationX;\n    if (!$type.isNumber(locationX)) {\n      locationX = 0.5;\n    }\n    var locationY = bullet.locationY;\n    if (!$type.isNumber(locationY)) {\n      locationY = 1;\n    }\n    bullet.x = slice.pixelX + slice.measuredWidth * locationX;\n    bullet.y = slice.pixelY + slice.measuredHeight * locationY;\n  };\n  Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\n    /**\r\n     * @return Orientation\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"orientation\");\n    },\n    /**\r\n     * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n     *\r\n     * @default \"vertical\"\r\n     * @param value Orientation\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"orientation\", value)) {\n        this.labelsOpposite = this.labelsOpposite;\n        this.invalidate();\n        if (value == \"vertical\") {\n          this.ticks.template.locationX = 1;\n          this.ticks.template.locationY = 0.5;\n          this.labels.template.rotation = 0;\n          this.layout = \"horizontal\";\n        } else {\n          this.ticks.template.locationX = 0.5;\n          this.ticks.template.locationY = 1;\n          this.labels.template.rotation = -90;\n          this.layout = \"vertical\";\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\n    /**\r\n     * @return {number}\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"bottomRatio\");\n    },\n    /**\r\n     * Indicates how slice's bottom will change in relation to slices top AND\r\n     * next slices top.\r\n     *\r\n     * Basically it's a relative value (0-1) that indicates bottom width\r\n     * position between current slice's top width and the top withd of the next\r\n     * one.\r\n     *\r\n     * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n     * slice with).\r\n     *\r\n     * `0` (default) will mean that bottom will be the same as top, resulting in\r\n     * a prefectly square slice.\r\n     *\r\n     * From the data-viz standpoint `0` is a correct setting, since area of the\r\n     * slices will depict their value correctly.\r\n     *\r\n     * `1` will mean that slice will become trapezoid with its bottom matching\r\n     * width of the next slice.\r\n     *\r\n     * `0.5` will make bottom width be in the middle of width of current slice\r\n     * and the next slice.\r\n     *\r\n     * @default 0\r\n     * @param {number}\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"bottomRatio\", value)) {\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\n    /**\r\n     * A list of elements linking each actual slice.\r\n     *\r\n     * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n     * so they have all the same configuration options.\r\n     *\r\n     * You can use `template` of this link, to specify how links will look.\r\n     *\r\n     * ```TypeScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     \"type\": \"FunnelSeries\",\r\n     *      // ...\r\n     *      \"sliceLinks\": {\r\n     *        \"fillOpacity\": 0.5\r\n     *      }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @return Funnel links\r\n     */\n    get: function () {\n      if (!this._sliceLinks) {\n        var sliceLink = new FunnelSlice();\n        sliceLink.applyOnClones = true;\n        sliceLink.fillOpacity = 0.5;\n        sliceLink.expandDistance = -0.3;\n        sliceLink.hiddenState.properties.opacity = 0;\n        this._disposers.push(sliceLink);\n        this._sliceLinks = new ListTemplate(sliceLink);\n        this._disposers.push(new ListDisposer(this._sliceLinks));\n      }\n      return this._sliceLinks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n  FunnelSeries.prototype.show = function (duration) {\n    var _this = this;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.defaultState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    var delay = 0;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n      dataItem.show(interpolationDuration, delay, [\"value\"]);\n    });\n    var animation = _super.prototype.show.call(this, duration);\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n  FunnelSeries.prototype.hide = function (duration) {\n    var _this = this;\n    var fields = [\"value\"];\n    var value = 0;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n      dataItem.hide(interpolationDuration, delay, value, fields);\n    });\n    var animation = _super.prototype.hide.call(this, duration);\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n    return animation;\n  };\n  /**\r\n   * @ignore\r\n   */\n  FunnelSeries.prototype.setAlignLabels = function (value) {\n    _super.prototype.setAlignLabels.call(this, value);\n    this.ticks.template.disabled = !value;\n    var labelsContainer = this.labelsContainer;\n    if (labelsContainer) {\n      // do not align\n      if (!value) {\n        labelsContainer.width = percent(100);\n        labelsContainer.height = percent(100);\n      }\n      //align\n      else {\n        labelsContainer.height = undefined;\n        labelsContainer.width = undefined;\n        labelsContainer.margin(10, 10, 10, 10);\n      }\n    }\n    this.labelsOpposite = this.labelsOpposite;\n  };\n  Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\n    /**\r\n     * @return Labels on opposite side?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"labelsOpposite\");\n    },\n    /**\r\n     * Put labels on the oppsite side of the series?\r\n     *\r\n     * This setting is only used if `alignLabels = true`.\r\n     *\r\n     * If set to `true` (default) labels will be drawn to the right (on vertical\r\n     * series), or to the bottom (on horizontal series).\r\n     *\r\n     * If set to `false`, labels will be positioned to the left or top\r\n     * respectively.\r\n     *\r\n     * @default true\r\n     * @since 4.1.13\r\n     * @param  value  Labels on opposite side?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"labelsOpposite\", value);\n      var labelTemplate = this.labels.template;\n      var labelAlign = \"none\";\n      var labelValign = \"none\";\n      if (!this.alignLabels) {\n        if (this.orientation == \"vertical\") {\n          labelAlign = \"center\";\n        } else {\n          labelValign = \"middle\";\n        }\n      } else {\n        // opposite (left/bottom)\n        if (value) {\n          this.labelsContainer.toFront();\n          // left\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 1;\n            labelTemplate.horizontalCenter = \"left\";\n            labelAlign = \"right\";\n          }\n          // bottom\n          else {\n            this.ticks.template.locationY = 1;\n            labelTemplate.horizontalCenter = \"right\";\n            labelValign = \"bottom\";\n          }\n        }\n        // non oposite (right/top)\n        else {\n          this.labelsContainer.toBack();\n          // right\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 0;\n            labelAlign = \"left\";\n          }\n          // top\n          else {\n            labelValign = \"top\";\n            this.ticks.template.locationY = 0;\n          }\n        }\n      }\n      labelTemplate.align = labelAlign;\n      labelTemplate.valign = labelValign;\n      this.validateLayout();\n      this.ticks.each(function (tick) {\n        tick.invalidate();\n      });\n      this.invalidateDataItems();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeries;\n}(PercentSeries);\nexport { FunnelSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAA2GA,aAAa,EAAEC,qBAAqB,QAAQ,iBAAiB;AACxK,SAASC,WAAW,QAAQ,yBAAyB;AAErD,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,YAAY,EAAEC,YAAY,QAAQ,uBAAuB;AAGlE,SAASC,QAAQ,QAAQ,qBAAqB;AAE9C,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AAC9C,OAAO,KAAKC,KAAK,MAAM,2BAA2B;AAClD,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AAC9C,OAAO,KAAKC,MAAM,MAAM,wBAAwB;AAChD,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,QAAQ,QAAQ,2BAA2B;AAIpD,SAASC,OAAO,QAAQ,oBAAoB;AAE5C;;;;;;AAOA;AAEA;;;;;AAKA;EAA0CC;EAqDzC;;;EAGA;IAAA,YACCC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,sBAAsB;IACvC;IACAD,KAAI,CAACE,MAAM,CAACC,EAAE,CAAC,mBAAmB,EAAE;MACnC,IAAIH,KAAI,CAACI,SAAS,EAAE;QACnBJ,KAAI,CAACI,SAAS,CAACC,mBAAmB,EAAE;;IAEtC,CAAC,EAAEL,KAAI,EAAE,KAAK,CAAC;IAEfA,KAAI,CAACM,UAAU,EAAE;;EAClB;EAlCAC,sBAAWC,2CAAS;IANpB;;;;;;SAMA;MAAA;MACC,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;QACrB,IAAIC,WAAS,GAAG,IAAI,CAACN,SAAS,CAACO,UAAU,CAACC,MAAM,EAAE;QAClD,IAAI,CAACH,UAAU,GAAGC,WAAS;QAC3B,IAAI,CAACG,UAAU,CAACC,IAAI,CAACJ,WAAS,CAAC;QAC/BA,WAAS,CAACK,MAAM,GAAG,IAAI,CAACX,SAAS,CAACY,eAAe;QAEjD,IAAI,CAACH,UAAU,CAACC,IAAI,CAAC,IAAIlB,QAAQ,CAAC;UACjC,IAAII,KAAI,CAACI,SAAS,EAAE;YACnBJ,KAAI,CAACI,SAAS,CAACO,UAAU,CAACM,WAAW,CAACP,WAAS,CAAC;;QAElD,CAAC,CAAC,CAAC;QAEH,IAAI,CAACQ,SAAS,CAACR,WAAS,CAAC;QACzBA,WAAS,CAACS,OAAO,GAAG,IAAI,CAACA,OAAO;;MAEjC,OAAO,IAAI,CAACV,UAAU;IACvB,CAAC;;;;EAkBF,2BAAC;AAAD,CAAC,CApEyCxB,qBAAqB;;AA4H/D;;;;;;AAOA;;;;;;;;AAQA;EAAkCa;EAmEjC;;;EAGA;IAAA,YACCC,iBAAO;IArBEC,YAAM,GAAW,CAAC;IAuB3BA,KAAI,CAACC,SAAS,GAAG,cAAc;IAC/BD,KAAI,CAACoB,WAAW,GAAG,UAAU;IAE7BpB,KAAI,CAACqB,KAAK,GAAG1B,OAAO,CAAC,GAAG,CAAC;IACzBK,KAAI,CAACsB,MAAM,GAAG3B,OAAO,CAAC,GAAG,CAAC;IAE1BK,KAAI,CAACgB,eAAe,CAACK,KAAK,GAAG1B,OAAO,CAAC,GAAG,CAAC;IACzCK,KAAI,CAACgB,eAAe,CAACM,MAAM,GAAG3B,OAAO,CAAC,GAAG,CAAC;IAE1CK,KAAI,CAACa,UAAU,CAACC,IAAI,CAACd,KAAI,CAACgB,eAAe,CAACd,MAAM,CAACC,EAAE,CAAC,gBAAgB,EAAEH,KAAI,CAACK,mBAAmB,EAAEL,KAAI,EAAE,KAAK,CAAC,CAAC;IAE7GA,KAAI,CAACuB,cAAc,GAAG,IAAI;IAE1BvB,KAAI,CAACwB,eAAe,CAACC,MAAM,GAAG,UAAU;IAExCzB,KAAI,CAAC0B,WAAW,GAAG,CAAC;IAEpB1B,KAAI,CAACM,UAAU,EAAE;;EAClB;EAEA;;;;;EAKUqB,kCAAW,GAArB;IACC,OAAO,IAAIzC,WAAW,EAAE;EACzB,CAAC;EAED;;;;;EAKUyC,iCAAU,GAApB;IACC,OAAO,IAAIxC,UAAU,EAAE;EACxB,CAAC;EAED;;;;EAIUwC,4CAAqB,GAA/B;IACC5B,iBAAM6B,qBAAqB,WAAE;IAC7B,IAAI,CAACnC,KAAK,CAACoC,QAAQ,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;MACtC,IAAI,CAACA,WAAW,GAAG,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAC,eAAe,CAAC;;EAE7D,CAAC;EAED;;;;;;EAMUL,qCAAc,GAAxB;IACC,OAAO,IAAInB,oBAAoB,EAAE;EAClC,CAAC;EAED;;;;;EAKUmB,gCAAS,GAAnB,UAAoBM,KAAqB;IACxCA,KAAK,CAACC,UAAU,GAAG,KAAK;IACxBD,KAAK,CAACE,YAAY,CAACC,UAAU,CAACC,KAAK,GAAG,CAAC;IACvCJ,KAAK,CAACK,OAAO,CAAC,OAAO,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;IACnDN,KAAK,CAACK,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAACE,eAAe,EAAE,IAAI,CAAC;IACjEP,KAAK,CAACQ,WAAW,GAAG,kEAAkE;IAEtF,IAAIC,UAAU,GAAGT,KAAK,CAACU,MAAM,CAAC/B,MAAM,CAAC,OAAO,CAAC;IAC7C8B,UAAU,CAACN,UAAU,CAACQ,cAAc,GAAG,GAAG;EAC3C,CAAC;EAED;;;;;;EAMUjB,gCAAS,GAAnB,UAAoBkB,KAAqB;IACxC9C,iBAAM+C,SAAS,YAACD,KAAK,CAAC;IACtBA,KAAK,CAACE,cAAc,GAAG,QAAQ;IAC/BF,KAAK,CAACG,gBAAgB,GAAG,QAAQ;IACjCH,KAAK,CAACX,UAAU,GAAG,IAAI;IACvBW,KAAK,CAACI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC;EAED;;;;;EAKOtB,+BAAQ,GAAf;IACC5B,iBAAMmD,QAAQ,WAAE;IAChB,IAAI,CAACC,MAAM,GAAG,CAAC;EAChB,CAAC;EAED;;;;;;EAMOxB,2CAAoB,GAA3B;IAAA;IAEC,IAAIX,eAAe,GAAG,IAAI,CAACA,eAAe;IAC1C,IAAIQ,eAAe,GAAG,IAAI,CAACA,eAAe;IAC1C,IAAI4B,aAAa,GAAG,IAAI,CAACC,MAAM,CAACC,QAAQ;IAExC,IAAI,IAAI,CAACC,WAAW,EAAE;MACrBH,aAAa,CAACI,mBAAmB,GAAG,IAAI;MACxCxC,eAAe,CAACkB,UAAU,GAAG,IAAI;MACjCV,eAAe,CAACU,UAAU,GAAG,IAAI;KACjC,MACI;MACJkB,aAAa,CAACI,mBAAmB,GAAG,KAAK;MACzCxC,eAAe,CAACkB,UAAU,GAAG,KAAK;MAClCV,eAAe,CAACU,UAAU,GAAG,KAAK;;IAGnC,IAAIuB,KAAK,GAAG,CAAC;IACb,IAAIC,KAAK,GAAG,CAAC;IACb,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,UAACC,KAAK;MACzB,IAAIpE,KAAK,CAACoC,QAAQ,CAACgC,KAAK,CAACC,KAAK,CAAC,EAAE;QAChCJ,KAAK,EAAE;QACP,IAAIG,KAAK,CAACC,KAAK,GAAG,CAAC,EAAE;UACpBL,KAAK,IAAIM,IAAI,CAACC,GAAG,CAACH,KAAK,CAACI,eAAe,CAAC,OAAO,CAAC,GAAGJ,KAAK,CAACC,KAAK,CAAC;SAC/D,MACI;UACJ,IAAI9D,KAAI,CAACkE,gBAAgB,EAAE;YAC1BR,KAAK,EAAE;WACP,MACI;YACJ,IAAI,CAACG,KAAK,CAAC1C,OAAO,IAAI0C,KAAK,CAACM,UAAU,IAAIN,KAAK,CAACO,QAAQ,EAAE;cACzDV,KAAK,EAAE;aACP,MACI;cACJD,KAAK,IAAI,CAAC;;;;;IAKf,CAAC,CAAC;IAEF,IAAI,CAACY,MAAM,GAAG,CAAC,GAAGX,KAAK,GAAGD,KAAK;IAC/B,IAAI,CAACa,MAAM,GAAGZ,KAAK;IAEnB3D,iBAAMwE,oBAAoB,WAAE;IAE5B,IAAI,CAACC,aAAa,EAAE;EACrB,CAAC;EAED;;;;;;;EAOU7C,mCAAY,GAAtB,UAAuB8C,QAA8B;IACpD,IAAIC,KAAK,GAAGD,QAAQ,CAACC,KAAK;IAC1B,IAAIC,SAAS,GAAWF,QAAQ,CAACR,eAAe,CAAC,OAAO,CAAC;IACzD,IAAIS,KAAK,GAAG,IAAI,CAACf,SAAS,CAACiB,MAAM,GAAG,CAAC,EAAE;MACtC,IAAIC,QAAQ,GAAG,IAAI,CAAClB,SAAS,CAACmB,QAAQ,CAACJ,KAAK,GAAG,CAAC,CAAC;MACjDC,SAAS,GAAGE,QAAQ,CAACZ,eAAe,CAAC,OAAO,CAAC;MAE7C,IAAI,CAACY,QAAQ,CAAC1D,OAAO,IAAI0D,QAAQ,CAACT,QAAQ,IAAIS,QAAQ,CAACV,UAAU,IAAKU,QAAQ,CAACf,KAAK,IAAI,CAAC,IAAI,IAAI,CAACI,gBAAiB,EAAE;QACpH,OAAO,IAAI,CAACa,YAAY,CAACF,QAAQ,CAAC;;;IAGpC,OAAOF,SAAS;EACjB,CAAC;EAED;;;;;EAKUhD,sCAAe,GAAzB,aAEA,CAAC;EAED;;;;;;EAMOA,0CAAmB,GAA1B,UAA2B8C,QAA2B;IAAtD;IACC;IACA;IACA,IAAIxC,KAAK,GAAGwC,QAAQ,CAACxC,KAAK;IAC1BA,KAAK,CAACb,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpC,IAAI4D,SAAS,GAAGP,QAAQ,CAACO,SAAS;IAClCA,SAAS,CAAC5D,WAAW,GAAG,IAAI,CAACA,WAAW;IAExC,IAAI6D,IAAI,GAAGR,QAAQ,CAACQ,IAAI;IACxB,IAAIpC,KAAK,GAAG4B,QAAQ,CAAC5B,KAAK;IAE1BoC,IAAI,CAAChD,KAAK,GAAGA,KAAK;IAClBgD,IAAI,CAACpC,KAAK,GAAGA,KAAK;IAElB,IAAIpD,KAAK,CAACoC,QAAQ,CAAC4C,QAAQ,CAACX,KAAK,CAAC,EAAE;MACnC,IAAI,CAACoB,aAAa,CAACT,QAAQ,CAAC;MAC5B/E,MAAM,CAACkE,IAAI,CAACa,QAAQ,CAACU,OAAO,EAAE,UAACC,MAAM;QACpC,IAAIX,QAAQ,CAACX,KAAK,IAAI,CAAC,IAAI9D,KAAI,CAACkE,gBAAgB,EAAE;UACjDkB,MAAM,CAACjB,UAAU,GAAG,IAAI;SACxB,MACI;UACJiB,MAAM,CAACjB,UAAU,GAAG,KAAK;;MAE3B,CAAC,CAAC;KACF,MACI;MACJzE,MAAM,CAACkE,IAAI,CAACa,QAAQ,CAACU,OAAO,EAAE,UAACC,MAAM;QACpCA,MAAM,CAACjB,UAAU,GAAG,IAAI;MACzB,CAAC,CAAC;;IAGH,IAAIM,QAAQ,CAACC,KAAK,IAAI,IAAI,CAACf,SAAS,CAACiB,MAAM,GAAG,CAAC,EAAE;MAChDI,SAAS,CAACK,QAAQ,GAAG,IAAI;;IAG1B;IACAtF,iBAAMuF,mBAAmB,YAACb,QAAQ,CAAC;IAEnCO,SAAS,CAACO,IAAI,GAAGtD,KAAK,CAACsD,IAAI;IAC3B;EACD,CAAC;EAED;;;;;;EAMU5D,oCAAa,GAAvB,UAAwB8C,QAA2B;IAClD,IAAIxC,KAAK,GAAGwC,QAAQ,CAACxC,KAAK;IAC1B,IAAI+C,SAAS,GAAGP,QAAQ,CAACO,SAAS;IAClC,IAAInC,KAAK,GAAG4B,QAAQ,CAAC5B,KAAK;IAC1B,IAAIoC,IAAI,GAAGR,QAAQ,CAACQ,IAAI;IAExB,IAAIO,QAAQ,GAAG,IAAI,CAACxE,eAAe,CAACyE,UAAU;IAC9C,IAAIC,SAAS,GAAG,IAAI,CAAC1E,eAAe,CAAC2E,WAAW;IAEhD,IAAIhB,SAAS,GAAG,IAAI,CAACI,YAAY,CAACN,QAAQ,CAAC;IAC3C,IAAImB,YAAY,GAAG7B,IAAI,CAACC,GAAG,CAACS,QAAQ,CAACR,eAAe,CAAC,OAAO,CAAC,CAAC;IAC9D,IAAIvC,WAAW,GAAG,IAAI,CAACA,WAAW;IAElC,IAAImE,CAAC,GAAG,CAAC;IACT,IAAIpB,QAAQ,CAACX,KAAK,IAAI,CAAC,EAAE;MACxB+B,CAAC,GAAGD,YAAY,GAAG7B,IAAI,CAACC,GAAG,CAACS,QAAQ,CAACX,KAAK,CAAC;KAC3C,MACI;MACJ,IAAIW,QAAQ,CAACN,UAAU,IAAIM,QAAQ,CAACL,QAAQ,IAAI,CAACK,QAAQ,CAACtD,OAAO,EAAE;QAClE0E,CAAC,GAAG,QAAQ;;;IAId,IAAI,IAAI,CAAC3B,gBAAgB,IAAIO,QAAQ,CAACX,KAAK,IAAI,CAAC,EAAE;MACjDW,QAAQ,CAACN,UAAU,GAAG,IAAI;MAC1B;KACA,MACI;MACJM,QAAQ,CAACN,UAAU,GAAG,KAAK;;IAG5B,IAAI,IAAI,CAAChB,MAAM,IAAI2C,QAAQ,EAAE;MAC5B,IAAI,CAAC3C,MAAM,GAAG,CAAC;;IAGhB,IAAI,IAAI,CAAC/B,WAAW,IAAI,UAAU,EAAE;MAEnC,IAAI2E,UAAU,GAAGf,SAAS,CAACgB,WAAW,GAAGH,CAAC;MAE1CH,SAAS,GAAGA,SAAS,GAAGK,UAAU,CAAC,CAAC;MAEpC9D,KAAK,CAACgE,QAAQ,GAAGL,YAAY,GAAG,IAAI,CAACnB,QAAQ,CAACyB,MAAM,CAACpC,KAAK,CAACqC,IAAI,GAAGX,QAAQ;MAC1EvD,KAAK,CAACmE,WAAW,GAAG,CAACR,YAAY,GAAG,CAACA,YAAY,GAAGjB,SAAS,IAAIjD,WAAW,IAAI,IAAI,CAAC+C,QAAQ,CAACyB,MAAM,CAACpC,KAAK,CAACqC,IAAI,GAAGX,QAAQ;MAE1HR,SAAS,CAACiB,QAAQ,GAAGhE,KAAK,CAACmE,WAAW;MACtCpB,SAAS,CAACoB,WAAW,GAAG,CAACR,YAAY,IAAIA,YAAY,GAAGjB,SAAS,CAAC,IAAI,IAAI,CAACF,QAAQ,CAACyB,MAAM,CAACpC,KAAK,CAACqC,IAAI,GAAGX,QAAQ;MAEhHvD,KAAK,CAACoE,CAAC,GAAG,IAAI,CAAClD,MAAM;MACrBlB,KAAK,CAACX,MAAM,GAAGyC,IAAI,CAACuC,GAAG,CAAC,MAAM,EAAE/G,KAAK,CAACgH,GAAG,CAAC,CAAC,EAAEb,SAAS,GAAG,IAAI,CAACpB,MAAM,GAAGuB,CAAC,GAAG,IAAI,CAACxB,MAAM,GAAG0B,UAAU,CAAC,CAAC;MAErG9D,KAAK,CAACuE,CAAC,GAAGhB,QAAQ,GAAG,CAAC;MAEtB,IAAI,CAAC,IAAI,CAACjC,WAAW,EAAE;QACtBV,KAAK,CAAC2D,CAAC,GAAGvE,KAAK,CAACuE,CAAC;OACjB,MACI;QACJ3D,KAAK,CAAC2D,CAAC,GAAGC,SAAS;;MAEpB5D,KAAK,CAACwD,CAAC,GAAGpE,KAAK,CAACyE,MAAM,GAAGzE,KAAK,CAAC+D,WAAW,GAAGf,IAAI,CAAC0B,SAAS;MAE3D,IAAI,CAACxD,MAAM,IAAIlB,KAAK,CAAC+D,WAAW,GAAGD,UAAU;MAC7Cf,SAAS,CAACqB,CAAC,GAAG,IAAI,CAAClD,MAAM,GAAG4C,UAAU;MACtCf,SAAS,CAACwB,CAAC,GAAGvE,KAAK,CAACuE,CAAC;KACrB,MACI;MACJ,IAAII,SAAS,GAAG5B,SAAS,CAAC6B,UAAU,GAAGhB,CAAC;MAExCL,QAAQ,GAAGA,QAAQ,GAAGoB,SAAS,CAAC,CAAC;MAEjC3E,KAAK,CAACgE,QAAQ,GAAGL,YAAY,GAAG,IAAI,CAACnB,QAAQ,CAACyB,MAAM,CAACpC,KAAK,CAACqC,IAAI,GAAGT,SAAS;MAC3EzD,KAAK,CAACmE,WAAW,GAAG,CAACR,YAAY,GAAG,CAACA,YAAY,GAAGjB,SAAS,IAAIjD,WAAW,IAAI,IAAI,CAAC+C,QAAQ,CAACyB,MAAM,CAACpC,KAAK,CAACqC,IAAI,GAAGT,SAAS;MAE3HV,SAAS,CAACiB,QAAQ,GAAGhE,KAAK,CAACmE,WAAW;MACtCpB,SAAS,CAACoB,WAAW,GAAG,CAACR,YAAY,IAAIA,YAAY,GAAGjB,SAAS,CAAC,IAAI,IAAI,CAACF,QAAQ,CAACyB,MAAM,CAACpC,KAAK,CAACqC,IAAI,GAAGT,SAAS;MAEjHzD,KAAK,CAACuE,CAAC,GAAG,IAAI,CAACrD,MAAM;MACrBlB,KAAK,CAACZ,KAAK,GAAG0C,IAAI,CAACuC,GAAG,CAAC,MAAM,EAAEd,QAAQ,GAAG,IAAI,CAAClB,MAAM,GAAGuB,CAAC,GAAG,CAAC,GAAG,IAAI,CAACxB,MAAM,GAAGuC,SAAS,CAAC;MACxF3E,KAAK,CAACoE,CAAC,GAAGX,SAAS,GAAG,CAAC;MAEvB,IAAI,CAAC,IAAI,CAACnC,WAAW,EAAE;QACtBV,KAAK,CAACwD,CAAC,GAAGpE,KAAK,CAACoE,CAAC;OACjB,MACI;QACJxD,KAAK,CAACwD,CAAC,GAAG,IAAI,CAAC7E,eAAe,CAACsF,cAAc;;MAE9CjE,KAAK,CAAC2D,CAAC,GAAGvE,KAAK,CAAC8E,MAAM,GAAG9E,KAAK,CAAC4E,UAAU,GAAG5B,IAAI,CAAC+B,SAAS;MAE1D,IAAI,CAAC7D,MAAM,IAAIlB,KAAK,CAAC4E,UAAU,GAAGD,SAAS;MAC3C5B,SAAS,CAACwB,CAAC,GAAG,IAAI,CAACrD,MAAM,GAAGyD,SAAS;MAErC5B,SAAS,CAACqB,CAAC,GAAGpE,KAAK,CAACoE,CAAC;;EAEvB,CAAC;EAES1E,mCAAY,GAAtB,UAAuB+C,KAAa;IACnC,IAAIA,KAAK,GAAG,CAAC,EAAE;MACd,IAAIuC,SAAS,GAAG,IAAI,CAAC5D,MAAM,CAACyB,QAAQ,CAACJ,KAAK,CAAC;MAC3C,IAAIuC,SAAS,CAAC9C,UAAU,IAAI,CAAC8C,SAAS,CAAC9F,OAAO,EAAE;QAC/C,OAAO,IAAI,CAAC+F,YAAY,CAACxC,KAAK,GAAG,CAAC,CAAC;OACnC,MACI;QACJ,OAAOuC,SAAS;;;EAGnB,CAAC;EAED;;;;;EAKUtF,oCAAa,GAAvB;IAEC,IAAI,IAAI,CAAC4B,WAAW,EAAE;MACrB,IAAIG,KAAK,GAAG,IAAI,CAACL,MAAM,CAACuB,MAAM;MAC9B,IAAIlB,KAAK,GAAG,CAAC,EAAE;QAEd,IAAIuD,SAAS,GAAG,IAAI,CAACC,YAAY,CAACxD,KAAK,GAAG,CAAC,CAAC;QAC5C,IAAIuD,SAAS,EAAE;UAEd,IAAIE,KAAK,GAAGF,SAAS,CAACP,MAAM;UAC5B,IAAIU,KAAK,GAAGH,SAAS,CAACF,MAAM;UAE5B,IAAIrD,KAAK,GAAG,CAAC,EAAE;YACd,KAAK,IAAI2D,CAAC,GAAG3D,KAAK,GAAG,CAAC,EAAE2D,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;cACpC,IAAIxE,KAAK,GAAG,IAAI,CAACQ,MAAM,CAACyB,QAAQ,CAACuC,CAAC,CAAC;cAEnC,IAAIxE,KAAK,CAAC1B,OAAO,IAAI,CAAC0B,KAAK,CAACsB,UAAU,EAAE;gBACvC,IAAItB,KAAK,CAACyE,OAAO,EAAE;kBAClBzE,KAAK,CAACK,QAAQ,EAAE;;gBAEjB,IAAI,IAAI,CAAC9B,WAAW,IAAI,UAAU,EAAE;kBACnC,IAAIyB,KAAK,CAAC6D,MAAM,GAAG7D,KAAK,CAACiE,cAAc,GAAGK,KAAK,EAAE;oBAChDtE,KAAK,CAACwD,CAAC,GAAGtC,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEa,KAAK,GAAGtE,KAAK,CAACiE,cAAc,CAAC;;;gBAG3D;gBAAA,KACK;kBACJ,IAAIjE,KAAK,CAACkE,MAAM,GAAGlE,KAAK,CAAC0E,aAAa,GAAGH,KAAK,EAAE;oBAC/CvE,KAAK,CAAC2D,CAAC,GAAGzC,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEc,KAAK,GAAGvE,KAAK,CAAC0E,aAAa,CAAC;;;gBAG1DJ,KAAK,GAAGtE,KAAK,CAAC6D,MAAM;gBACpBU,KAAK,GAAGvE,KAAK,CAACkE,MAAM;;;YAItBI,KAAK,GAAG,CAAC;YACTC,KAAK,GAAG,CAAC;YACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3D,KAAK,EAAE2D,CAAC,EAAE,EAAE;cAC/B,IAAIxE,KAAK,GAAG,IAAI,CAACQ,MAAM,CAACyB,QAAQ,CAACuC,CAAC,CAAC;cACnC,IAAIxE,KAAK,CAAC1B,OAAO,IAAI,CAAC0B,KAAK,CAACsB,UAAU,EAAE;gBACvC,IAAItB,KAAK,CAACyE,OAAO,EAAE;kBAClBzE,KAAK,CAACK,QAAQ,EAAE;;gBAEjB,IAAI,IAAI,CAAC9B,WAAW,IAAI,UAAU,EAAE;kBACnC,IAAIyB,KAAK,CAAC6D,MAAM,GAAGS,KAAK,EAAE;oBACzBtE,KAAK,CAACwD,CAAC,GAAGtC,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEa,KAAK,CAAC;;;gBAGpC;gBAAA,KACK;kBACJ,IAAItE,KAAK,CAACkE,MAAM,GAAGK,KAAK,EAAE;oBACzBvE,KAAK,CAAC2D,CAAC,GAAGzC,IAAI,CAACuC,GAAG,CAAC,OAAO,EAAEc,KAAK,CAAC;;;gBAIpCD,KAAK,IAAItE,KAAK,CAACiE,cAAc;gBAC7BM,KAAK,IAAIvE,KAAK,CAAC0E,aAAa;;;;;;;EAOnC,CAAC;EAED;;;;;;EAMO5F,qCAAc,GAArB,UAAsB6F,MAAc;IACnCzH,iBAAM0H,cAAc,YAACD,MAAM,CAAC;IAE5B,IAAI/C,QAAQ,GAAyC+C,MAAM,CAAC/C,QAAQ;IACpE,IAAIxC,KAAK,GAAgBwC,QAAQ,CAACxC,KAAK;IAEvC,IAAI+E,SAAS,GAAGQ,MAAM,CAACR,SAAS;IAChC,IAAI,CAACvH,KAAK,CAACiI,QAAQ,CAACV,SAAS,CAAC,EAAE;MAC/BA,SAAS,GAAG,GAAG;;IAEhB,IAAIL,SAAS,GAAGa,MAAM,CAACb,SAAS;IAChC,IAAI,CAAClH,KAAK,CAACiI,QAAQ,CAACf,SAAS,CAAC,EAAE;MAC/BA,SAAS,GAAG,CAAC;;IAGda,MAAM,CAAChB,CAAC,GAAGvE,KAAK,CAAC8E,MAAM,GAAG9E,KAAK,CAACsF,aAAa,GAAGP,SAAS;IACzDQ,MAAM,CAACnB,CAAC,GAAGpE,KAAK,CAACyE,MAAM,GAAGzE,KAAK,CAAC6E,cAAc,GAAGH,SAAS;EAC3D,CAAC;EAQDpG,sBAAWoB,qCAAW;IAmBtB;;;SAGA;MACC,OAAO,IAAI,CAACgG,gBAAgB,CAAC,aAAa,CAAC;IAC5C,CAAC;IA9BD;;;;;;SAMA,UAAuB7D,KAAkB;MACxC,IAAI,IAAI,CAAC8D,gBAAgB,CAAC,aAAa,EAAE9D,KAAK,CAAC,EAAE;QAChD,IAAI,CAACvC,cAAc,GAAG,IAAI,CAACA,cAAc;QACzC,IAAI,CAACsG,UAAU,EAAE;QACjB,IAAI/D,KAAK,IAAI,UAAU,EAAE;UACxB,IAAI,CAACgE,KAAK,CAACxE,QAAQ,CAAC0D,SAAS,GAAG,CAAC;UACjC,IAAI,CAACc,KAAK,CAACxE,QAAQ,CAACqD,SAAS,GAAG,GAAG;UACnC,IAAI,CAACtD,MAAM,CAACC,QAAQ,CAACyE,QAAQ,GAAG,CAAC;UACjC,IAAI,CAACtG,MAAM,GAAG,YAAY;SAC1B,MACI;UACJ,IAAI,CAACqG,KAAK,CAACxE,QAAQ,CAAC0D,SAAS,GAAG,GAAG;UACnC,IAAI,CAACc,KAAK,CAACxE,QAAQ,CAACqD,SAAS,GAAG,CAAC;UACjC,IAAI,CAACtD,MAAM,CAACC,QAAQ,CAACyE,QAAQ,GAAG,CAAC,EAAE;UACnC,IAAI,CAACtG,MAAM,GAAG,UAAU;;;IAG3B,CAAC;;;;EAmCDlB,sBAAWoB,qCAAW;IAMtB;;;SAGA;MACC,OAAO,IAAI,CAACgG,gBAAgB,CAAC,aAAa,CAAC;IAC5C,CAAC;IArCD;;;;;;;;;;;;;;;;;;;;;;;;;;SA0BA,UAAuB7D,KAAa;MACnC,IAAI,IAAI,CAAC8D,gBAAgB,CAAC,aAAa,EAAE9D,KAAK,CAAC,EAAE;QAChD,IAAI,CAAC+D,UAAU,EAAE;;IAEnB,CAAC;;;;EAsCDtH,sBAAWoB,oCAAU;IA7BrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA6BA;MACC,IAAI,CAAC,IAAI,CAACqG,WAAW,EAAE;QACtB,IAAIhD,SAAS,GAAG,IAAI9F,WAAW,EAAE;QACjC8F,SAAS,CAACiD,aAAa,GAAG,IAAI;QAC9BjD,SAAS,CAACkD,WAAW,GAAG,GAAG;QAC3BlD,SAAS,CAACpC,cAAc,GAAG,CAAE,GAAG;QAChCoC,SAAS,CAACmD,WAAW,CAAC/F,UAAU,CAACgG,OAAO,GAAG,CAAC;QAE5C,IAAI,CAACvH,UAAU,CAACC,IAAI,CAACkE,SAAS,CAAC;QAE/B,IAAI,CAACgD,WAAW,GAAG,IAAI5I,YAAY,CAAC4F,SAAS,CAAC;QAC9C,IAAI,CAACnE,UAAU,CAACC,IAAI,CAAC,IAAIzB,YAAY,CAAC,IAAI,CAAC2I,WAAW,CAAC,CAAC;;MAEzD,OAAO,IAAI,CAACA,WAAW;IACxB,CAAC;;;;EAED;;;;;;EAMOrG,2BAAI,GAAX,UAAY0G,QAAiB;IAA7B;IAEC,IAAIC,UAAU,GAAW,IAAI,CAACA,UAAU;IACxC,IAAIC,QAAQ,GAAW,IAAI,CAACA,QAAQ;IAEpC,IAAIC,qBAAqB,GAAG,IAAI,CAACrG,YAAY,CAACsG,kBAAkB;IAEhE,IAAIhJ,KAAK,CAACiI,QAAQ,CAACW,QAAQ,CAAC,EAAE;MAC7BG,qBAAqB,GAAGH,QAAQ;;IAGjC,IAAG,CAACxI,OAAO,CAAC6I,iBAAiB,EAAC;MAC7BF,qBAAqB,GAAG,CAAC;;IAG1B,IAAIG,KAAK,GAAW,CAAC;IACrBnJ,KAAK,CAACoE,IAAI,CAACpE,KAAK,CAACoJ,OAAO,CAAC,IAAI,CAACjF,SAAS,CAACkF,QAAQ,EAAE,CAAC,EAAE,UAACC,CAAC;MACtD,IAAIzB,CAAC,GAAGyB,CAAC,CAAC,CAAC,CAAC;MACZ,IAAIrE,QAAQ,GAAGqE,CAAC,CAAC,CAAC,CAAC;MAEnB,IAAI9I,KAAI,CAAC+I,sBAAsB,EAAE;QAChCJ,KAAK,GAAG3I,KAAI,CAACgJ,2BAA2B,GAAG3B,CAAC,GAAGmB,qBAAqB,IAAInB,CAAC,GAAGiB,UAAU,CAAC,IAAIC,QAAQ,GAAGD,UAAU,CAAC;;MAElH7D,QAAQ,CAACwE,IAAI,CAACT,qBAAqB,EAAEG,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC,CAAC;IAEF,IAAIO,SAAS,GAAGnJ,iBAAMkJ,IAAI,YAACZ,QAAQ,CAAC;IAEpC,OAAOa,SAAS;EACjB,CAAC;EAED;;;;;;EAMOvH,2BAAI,GAAX,UAAY0G,QAAiB;IAA7B;IACC,IAAIc,MAAM,GAAa,CAAC,OAAO,CAAC;IAChC,IAAIrF,KAAK,GAAW,CAAC;IAErB,IAAIwE,UAAU,GAAW,IAAI,CAACA,UAAU;IACxC,IAAIC,QAAQ,GAAW,IAAI,CAACA,QAAQ;IAEpC,IAAII,KAAK,GAAW,CAAC;IACrB,IAAIH,qBAAqB,GAAG,IAAI,CAACL,WAAW,CAACM,kBAAkB;IAC/D,IAAIhJ,KAAK,CAACiI,QAAQ,CAACW,QAAQ,CAAC,EAAE;MAC7BG,qBAAqB,GAAGH,QAAQ;;IAGjC,IAAG,CAACxI,OAAO,CAAC6I,iBAAiB,EAAC;MAC7BF,qBAAqB,GAAG,CAAC;;IAG1BhJ,KAAK,CAACoE,IAAI,CAACpE,KAAK,CAACoJ,OAAO,CAAC,IAAI,CAACjF,SAAS,CAACkF,QAAQ,EAAE,CAAC,EAAE,UAACC,CAAC;MACtD,IAAIzB,CAAC,GAAGyB,CAAC,CAAC,CAAC,CAAC;MACZ,IAAIrE,QAAQ,GAAGqE,CAAC,CAAC,CAAC,CAAC;MAEnB,IAAI9I,KAAI,CAAC+I,sBAAsB,EAAE;QAChCJ,KAAK,GAAG3I,KAAI,CAACgJ,2BAA2B,GAAG3B,CAAC,GAAGmB,qBAAqB,IAAInB,CAAC,GAAGiB,UAAU,CAAC,IAAIC,QAAQ,GAAGD,UAAU,CAAC;;MAElH7D,QAAQ,CAAC2E,IAAI,CAACZ,qBAAqB,EAAEG,KAAK,EAAE7E,KAAK,EAAEqF,MAAM,CAAC;IAC3D,CAAC,CAAC;IAEF,IAAID,SAAS,GAAcnJ,iBAAMqJ,IAAI,YAACf,QAAQ,CAAC;IAC/C,IAAIa,SAAS,IAAI,CAACA,SAAS,CAACG,UAAU,EAAE,EAAE;MACzCH,SAAS,CAACP,KAAK,CAACA,KAAK,CAAC;;IAGvB,OAAOO,SAAS;EACjB,CAAC;EAED;;;EAGUvH,qCAAc,GAAxB,UAAyBmC,KAAc;IACtC/D,iBAAMuJ,cAAc,YAACxF,KAAK,CAAC;IAC3B,IAAI,CAACgE,KAAK,CAACxE,QAAQ,CAAC+B,QAAQ,GAAG,CAACvB,KAAK;IACrC,IAAItC,eAAe,GAAG,IAAI,CAACA,eAAe;IAC1C,IAAIA,eAAe,EAAE;MACpB;MACA,IAAI,CAACsC,KAAK,EAAE;QACXtC,eAAe,CAACH,KAAK,GAAG1B,OAAO,CAAC,GAAG,CAAC;QACpC6B,eAAe,CAACF,MAAM,GAAG3B,OAAO,CAAC,GAAG,CAAC;;MAEtC;MAAA,KACK;QACJ6B,eAAe,CAACF,MAAM,GAAGmF,SAAS;QAClCjF,eAAe,CAACH,KAAK,GAAGoF,SAAS;QACjCjF,eAAe,CAAC+H,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;;IAGxC,IAAI,CAAChI,cAAc,GAAG,IAAI,CAACA,cAAc;EAC1C,CAAC;EAiBDhB,sBAAWoB,wCAAc;IA0DzB;;;SAGA;MACC,OAAO,IAAI,CAACgG,gBAAgB,CAAC,gBAAgB,CAAC;IAC/C,CAAC;IA9ED;;;;;;;;;;;;;;;SAeA,UAA0B7D,KAAc;MACvC,IAAI,CAAC8D,gBAAgB,CAAC,gBAAgB,EAAE9D,KAAK,CAAC;MAC9C,IAAIV,aAAa,GAAG,IAAI,CAACC,MAAM,CAACC,QAAQ;MAExC,IAAIkG,UAAU,GAAU,MAAM;MAC9B,IAAIC,WAAW,GAAkB,MAAM;MAEvC,IAAI,CAAC,IAAI,CAAClG,WAAW,EAAE;QACtB,IAAI,IAAI,CAACnC,WAAW,IAAI,UAAU,EAAE;UACnCoI,UAAU,GAAG,QAAQ;SACrB,MACI;UACJC,WAAW,GAAG,QAAQ;;OAEvB,MACI;QACJ;QACA,IAAI3F,KAAK,EAAE;UACV,IAAI,CAACtC,eAAe,CAACkI,OAAO,EAAE;UAC9B;UACA,IAAI,IAAI,CAACtI,WAAW,IAAI,UAAU,EAAE;YACnC,IAAI,CAAC0G,KAAK,CAACxE,QAAQ,CAAC0D,SAAS,GAAG,CAAC;YACjC5D,aAAa,CAACJ,gBAAgB,GAAG,MAAM;YACvCwG,UAAU,GAAG,OAAO;;UAErB;UAAA,KACK;YACJ,IAAI,CAAC1B,KAAK,CAACxE,QAAQ,CAACqD,SAAS,GAAG,CAAC;YACjCvD,aAAa,CAACJ,gBAAgB,GAAG,OAAO;YACxCyG,WAAW,GAAG,QAAQ;;;QAGxB;QAAA,KACK;UACJ,IAAI,CAACjI,eAAe,CAACmI,MAAM,EAAE;UAC7B;UACA,IAAI,IAAI,CAACvI,WAAW,IAAI,UAAU,EAAE;YACnC,IAAI,CAAC0G,KAAK,CAACxE,QAAQ,CAAC0D,SAAS,GAAG,CAAC;YACjCwC,UAAU,GAAG,MAAM;;UAEpB;UAAA,KACK;YACJC,WAAW,GAAG,KAAK;YACnB,IAAI,CAAC3B,KAAK,CAACxE,QAAQ,CAACqD,SAAS,GAAG,CAAC;;;;MAKpCvD,aAAa,CAACwG,KAAK,GAAGJ,UAAU;MAChCpG,aAAa,CAACyG,MAAM,GAAGJ,WAAW;MAElC,IAAI,CAACK,cAAc,EAAE;MACrB,IAAI,CAAChC,KAAK,CAAClE,IAAI,CAAC,UAACqB,IAAI;QACpBA,IAAI,CAAC4C,UAAU,EAAE;MAClB,CAAC,CAAC;MACF,IAAI,CAACxH,mBAAmB,EAAE;IAC3B,CAAC;;;;EAQF,mBAAC;AAAD,CAAC,CA1yBiCrB,aAAa;;AA4yB/C;;;;;;AAMAM,QAAQ,CAACyK,iBAAiB,CAAC,cAAc,CAAC,GAAGpI,YAAY;AACzDrC,QAAQ,CAACyK,iBAAiB,CAAC,sBAAsB,CAAC,GAAGvJ,oBAAoB","names":["PercentSeries","PercentSeriesDataItem","FunnelSlice","FunnelTick","ListTemplate","ListDisposer","registry","$math","$iter","$type","$array","percent","Disposer","options","__extends","_super","_this","className","events","on","component","invalidateDataItems","applyTheme","Object","FunnelSeriesDataItem","_sliceLink","sliceLink_1","sliceLinks","create","_disposers","push","parent","slicesContainer","removeValue","addSprite","visible","orientation","width","height","labelsOpposite","labelsContainer","layout","bottomRatio","FunnelSeries","applyInternalDefaults","hasValue","readerTitle","language","translate","slice","isMeasured","defaultState","properties","scale","observe","handleSliceScale","handleSliceMove","tooltipText","hoverState","states","expandDistance","label","initLabel","verticalCenter","horizontalCenter","padding","validate","_nextY","labelTemplate","labels","template","alignLabels","interactionsEnabled","total","count","dataItems","each","dItem","value","Math","abs","getWorkingValue","ignoreZeroValues","__disabled","isHiding","_total","_count","validateDataElements","arrangeLabels","dataItem","index","nextValue","length","nextItem","getIndex","getNextValue","sliceLink","tick","decorateSlice","sprites","sprite","disabled","validateDataElement","fill","maxWidth","innerWidth","maxHeight","innerHeight","workingValue","d","Infinity","linkHeight","pixelHeight","topWidth","values","high","bottomWidth","y","min","max","x","undefined","pixelY","locationY","linkWidth","pixelWidth","measuredHeight","pixelX","locationX","lastLabel","getLastLabel","lastY","lastX","i","invalid","measuredWidth","bullet","positionBullet","isNumber","getPropertyValue","setPropertyValue","invalidate","ticks","rotation","_sliceLinks","applyOnClones","fillOpacity","hiddenState","opacity","duration","startIndex","endIndex","interpolationDuration","transitionDuration","animationsEnabled","delay","indexed","iterator","a","sequencedInterpolation","sequencedInterpolationDelay","show","animation","fields","hide","isFinished","setAlignLabels","margin","labelAlign","labelValign","toFront","toBack","align","valign","validateLayout","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\series\\FunnelSeries.ts"],"sourcesContent":["/**\r\n * Defines Funnel Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPercentSeriesAdapters, IPercentSeriesDataFields, IPercentSeriesEvents, IPercentSeriesProperties, PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SlicedChart } from \"../types/SlicedChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { Align } from \"../../core/defs/Align\";\r\nimport { VerticalAlign } from \"../../core/defs/VerticalAlign\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FunnelSeriesDataItem extends PercentSeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * A reference to a label element.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a tick element.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: FunnelSeries;\r\n\r\n\t/**\r\n\t * Defines a type of elements linking slices.\r\n\t */\r\n\tpublic _sliceLink: FunnelSlice;\r\n\r\n\t/**\r\n\t * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n\t *\r\n\t * @readonly\r\n\t * @return Slice element\r\n\t */\r\n\tpublic get sliceLink(): this[\"_sliceLink\"] {\r\n\t\tif (!this._sliceLink) {\r\n\t\t\tlet sliceLink = this.component.sliceLinks.create();\r\n\t\t\tthis._sliceLink = sliceLink;\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\t\t\tsliceLink.parent = this.component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.sliceLinks.removeValue(sliceLink);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(sliceLink);\r\n\t\t\tsliceLink.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._sliceLink;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelSeriesDataItem\";\r\n\t\t// this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n\t\tthis.events.on(\"visibilitychanged\", () => {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesDataFields extends IPercentSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesProperties extends IPercentSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative width of the slice bottom. See description of `bottomRatio`\r\n\t * property for full description.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tbottomRatio?: number;\r\n\r\n\t/**\r\n\t * Orientation of series\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * @since 4.1.13\r\n\t */\r\n\tlabelsOpposite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesEvents extends IPercentSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSeriesAdapters extends IPercentSeriesAdapters, IFunnelSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSeries extends PercentSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: SlicedChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IFunnelSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: FunnelSeriesDataItem;\r\n\r\n\r\n\tprotected _nextY: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t */\r\n\tprotected _sliceLinks: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * Holds sum of values for all slices\r\n\t */\r\n\tprotected _total: number;\r\n\r\n\t/**\r\n\t * Holds number of slices.\r\n\t */\r\n\tprotected _count: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FunnelSeries\";\r\n\t\tthis.orientation = \"vertical\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.slicesContainer.width = percent(100);\r\n\t\tthis.slicesContainer.height = percent(100);\r\n\r\n\t\tthis._disposers.push(this.slicesContainer.events.on(\"maxsizechanged\", this.invalidateDataItems, this, false));\r\n\r\n\t\tthis.labelsOpposite = true;\r\n\r\n\t\tthis.labelsContainer.layout = \"absolute\";\r\n\r\n\t\tthis.bottomRatio = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelSlice]] element.\r\n\t *\r\n\t * @return Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new FunnelSlice();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelTick]] element.\r\n\t *\r\n\t * @return Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new FunnelTick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Funnel Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FunnelSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits FunnelSlice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tslice.isMeasured = false;\r\n\t\tslice.defaultState.properties.scale = 1;\r\n\t\tslice.observe(\"scale\", this.handleSliceScale, this);\r\n\t\tslice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n\t\tslice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\r\n\r\n\t\tlet hoverState = slice.states.create(\"hover\");\r\n\t\thoverState.properties.expandDistance = 0.2;\r\n\t}\r\n\r\n\t/**\r\n\t * [initLabel description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param label [description]\r\n\t */\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tsuper.initLabel(label);\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.isMeasured = true;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis._nextY = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements() {\r\n\r\n\t\tlet slicesContainer = this.slicesContainer;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlabelTemplate.interactionsEnabled = true;\r\n\t\t\tslicesContainer.isMeasured = true;\r\n\t\t\tlabelsContainer.isMeasured = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelTemplate.interactionsEnabled = false;\r\n\t\t\tslicesContainer.isMeasured = false;\r\n\t\t\tlabelsContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet total = 0;\r\n\t\tlet count = 0;\r\n\t\tthis.dataItems.each((dItem) => {\r\n\t\t\tif ($type.hasValue(dItem.value)) {\r\n\t\t\t\tcount++;\r\n\t\t\t\tif (dItem.value > 0) {\r\n\t\t\t\t\ttotal += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.ignoreZeroValues) {\r\n\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n\t\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis._total = 1 / count * total;\r\n\t\tthis._count = count;\r\n\r\n\t\tsuper.validateDataElements();\r\n\r\n\t\tthis.arrangeLabels();\r\n\t}\r\n\r\n\t/**\r\n\t * [getNextValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getNextValue(dataItem: FunnelSeriesDataItem): number {\r\n\t\tlet index = dataItem.index;\r\n\t\tlet nextValue: number = dataItem.getWorkingValue(\"value\");\r\n\t\tif (index < this.dataItems.length - 1) {\r\n\t\t\tlet nextItem = this.dataItems.getIndex(index + 1);\r\n\t\t\tnextValue = nextItem.getWorkingValue(\"value\");\r\n\r\n\t\t\tif (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n\t\t\t\treturn this.getNextValue(nextItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}\r\n\r\n\t/**\r\n\t * [formDataElement description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected formDataElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\t//if ($type.hasValue(dataItem.value)) {\r\n\t\t// FunnelSlice\r\n\t\tlet slice = dataItem.slice;\r\n\t\tslice.orientation = this.orientation;\r\n\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tsliceLink.orientation = this.orientation;\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tlet label = dataItem.label;\r\n\r\n\t\ttick.slice = slice;\r\n\t\ttick.label = label;\r\n\r\n\t\tif ($type.hasValue(dataItem.value)) {\r\n\t\t\tthis.decorateSlice(dataItem);\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tif (dataItem.value == 0 && this.ignoreZeroValues) {\r\n\t\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (dataItem.index == this.dataItems.length - 1) {\r\n\t\t\tsliceLink.disabled = true;\r\n\t\t}\r\n\r\n\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tsliceLink.fill = slice.fill;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * [decorateSlice description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected decorateSlice(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet slice = dataItem.slice;\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet tick = dataItem.tick;\r\n\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tlet nextValue = this.getNextValue(dataItem);\r\n\t\tlet workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n\t\tlet bottomRatio = this.bottomRatio;\r\n\r\n\t\tlet d = 1;\r\n\t\tif (dataItem.value != 0) {\r\n\t\t\td = workingValue / Math.abs(dataItem.value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n\t\t\t\td = 0.000001;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.ignoreZeroValues && dataItem.value == 0) {\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (this._nextY == Infinity) {\r\n\t\t\tthis._nextY = 0;\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\r\n\t\t\tlet linkHeight = sliceLink.pixelHeight * d;\r\n\r\n\t\t\tmaxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tslice.y = this._nextY;\r\n\t\t\tslice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n\r\n\t\t\tslice.x = maxWidth / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.x = slice.x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.x = undefined;\r\n\t\t\t}\r\n\t\t\tlabel.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n\r\n\t\t\tthis._nextY += slice.pixelHeight + linkHeight;\r\n\t\t\tsliceLink.y = this._nextY - linkHeight;\r\n\t\t\tsliceLink.x = slice.x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linkWidth = sliceLink.pixelWidth * d;\r\n\r\n\t\t\tmaxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tslice.x = this._nextY;\r\n\t\t\tslice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n\t\t\tslice.y = maxHeight / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.y = slice.y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.y = this.labelsContainer.measuredHeight;\r\n\t\t\t}\r\n\t\t\tlabel.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n\r\n\t\t\tthis._nextY += slice.pixelWidth + linkWidth;\r\n\t\t\tsliceLink.x = this._nextY - linkWidth;\r\n\r\n\t\t\tsliceLink.y = slice.y;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getLastLabel(index: number): Label {\r\n\t\tif (index > 0) {\r\n\t\t\tlet lastLabel = this.labels.getIndex(index);\r\n\t\t\tif (lastLabel.__disabled || !lastLabel.visible) {\r\n\t\t\t\treturn this.getLastLabel(index - 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn lastLabel;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [arrangeLabels description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected arrangeLabels(): void {\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlet count = this.labels.length;\r\n\t\t\tif (count > 1) {\r\n\r\n\t\t\t\tlet lastLabel = this.getLastLabel(count - 1);\r\n\t\t\t\tif (lastLabel) {\r\n\r\n\t\t\t\t\tlet lastY = lastLabel.pixelY;\r\n\t\t\t\t\tlet lastX = lastLabel.pixelX;\r\n\r\n\t\t\t\t\tif (count > 1) {\r\n\t\t\t\t\t\tfor (let i = count - 2; i >= 0; i--) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY + label.measuredHeight > lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY - label.measuredHeight);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX + label.measuredWidth > lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX - label.measuredWidth);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlastY = label.pixelY;\r\n\t\t\t\t\t\t\t\tlastX = label.pixelX;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlastY = 0;\r\n\t\t\t\t\t\tlastX = 0;\r\n\t\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY < lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX < lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlastY += label.measuredHeight;\r\n\t\t\t\t\t\t\t\tlastX += label.measuredWidth;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice: FunnelSlice = dataItem.slice;\r\n\r\n\t\tlet locationX = bullet.locationX;\r\n\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\tlocationX = 0.5;\r\n\t\t}\r\n\t\tlet locationY = bullet.locationY;\r\n\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\tlocationY = 1;\r\n\t\t}\r\n\r\n\t\tbullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n\t\tbullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tif (this.setPropertyValue(\"orientation\", value)) {\r\n\t\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t\t\tthis.invalidate();\r\n\t\t\tif (value == \"vertical\") {\r\n\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\tthis.ticks.template.locationY = 0.5;\r\n\t\t\t\tthis.labels.template.rotation = 0;\r\n\t\t\t\tthis.layout = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.ticks.template.locationX = 0.5;\r\n\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\tthis.labels.template.rotation = -90;\r\n\t\t\t\tthis.layout = \"vertical\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how slice's bottom will change in relation to slices top AND\r\n\t * next slices top.\r\n\t *\r\n\t * Basically it's a relative value (0-1) that indicates bottom width\r\n\t * position between current slice's top width and the top withd of the next\r\n\t * one.\r\n\t *\r\n\t * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n\t * slice with).\r\n\t *\r\n\t * `0` (default) will mean that bottom will be the same as top, resulting in\r\n\t * a prefectly square slice.\r\n\t *\r\n\t * From the data-viz standpoint `0` is a correct setting, since area of the\r\n\t * slices will depict their value correctly.\r\n\t *\r\n\t * `1` will mean that slice will become trapezoid with its bottom matching\r\n\t * width of the next slice.\r\n\t *\r\n\t * `0.5` will make bottom width be in the middle of width of current slice\r\n\t * and the next slice.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set bottomRatio(value: number) {\r\n\t\tif (this.setPropertyValue(\"bottomRatio\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get bottomRatio(): number {\r\n\t\treturn this.getPropertyValue(\"bottomRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of elements linking each actual slice.\r\n\t *\r\n\t * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n\t * so they have all the same configuration options.\r\n\t *\r\n\t * You can use `template` of this link, to specify how links will look.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"FunnelSeries\",\r\n\t *      // ...\r\n\t *      \"sliceLinks\": {\r\n\t *        \"fillOpacity\": 0.5\r\n\t *      }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Funnel links\r\n\t */\r\n\tpublic get sliceLinks(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._sliceLinks) {\r\n\t\t\tlet sliceLink = new FunnelSlice();\r\n\t\t\tsliceLink.applyOnClones = true;\r\n\t\t\tsliceLink.fillOpacity = 0.5;\r\n\t\t\tsliceLink.expandDistance = - 0.3;\r\n\t\t\tsliceLink.hiddenState.properties.opacity = 0;\r\n\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\r\n\t\t\tthis._sliceLinks = new ListTemplate(sliceLink);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._sliceLinks));\r\n\t\t}\r\n\t\treturn this._sliceLinks;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\r\n\r\n\t\tlet delay: number = 0;\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.show(interpolationDuration, delay, [\"value\"]);\r\n\t\t});\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[] = [\"value\"];\r\n\t\tlet value: number = 0;\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\t\t\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.hide(interpolationDuration, delay, value, fields);\r\n\t\t});\r\n\r\n\t\tlet animation: Animation = super.hide(duration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setAlignLabels(value: boolean) {\r\n\t\tsuper.setAlignLabels(value);\r\n\t\tthis.ticks.template.disabled = !value;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tif (labelsContainer) {\r\n\t\t\t// do not align\r\n\t\t\tif (!value) {\r\n\t\t\t\tlabelsContainer.width = percent(100);\r\n\t\t\t\tlabelsContainer.height = percent(100);\r\n\t\t\t}\r\n\t\t\t//align\r\n\t\t\telse {\r\n\t\t\t\tlabelsContainer.height = undefined;\r\n\t\t\t\tlabelsContainer.width = undefined;\r\n\t\t\t\tlabelsContainer.margin(10, 10, 10, 10);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t}\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * This setting is only used if `alignLabels = true`.\r\n\t *\r\n\t * If set to `true` (default) labels will be drawn to the right (on vertical\r\n\t * series), or to the bottom (on horizontal series).\r\n\t *\r\n\t * If set to `false`, labels will be positioned to the left or top\r\n\t * respectively.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.1.13\r\n\t * @param  value  Labels on opposite side?\r\n\t */\r\n\tpublic set labelsOpposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"labelsOpposite\", value)\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tlet labelAlign: Align = \"none\";\r\n\t\tlet labelValign: VerticalAlign = \"none\";\r\n\r\n\t\tif (!this.alignLabels) {\r\n\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\tlabelAlign = \"center\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabelValign = \"middle\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// opposite (left/bottom)\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.labelsContainer.toFront();\r\n\t\t\t\t// left\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"left\";\r\n\t\t\t\t\tlabelAlign = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\t// bottom\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"right\";\r\n\t\t\t\t\tlabelValign = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// non oposite (right/top)\r\n\t\t\telse {\r\n\t\t\t\tthis.labelsContainer.toBack();\r\n\t\t\t\t// right\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 0;\r\n\t\t\t\t\tlabelAlign = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\t// top\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabelValign = \"top\";\r\n\t\t\t\t\tthis.ticks.template.locationY = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlabelTemplate.align = labelAlign;\r\n\t\tlabelTemplate.valign = labelValign;\r\n\r\n\t\tthis.validateLayout();\r\n\t\tthis.ticks.each((tick) => {\r\n\t\t\ttick.invalidate();\r\n\t\t})\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels on opposite side?\r\n\t */\r\n\tpublic get labelsOpposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"labelsOpposite\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}