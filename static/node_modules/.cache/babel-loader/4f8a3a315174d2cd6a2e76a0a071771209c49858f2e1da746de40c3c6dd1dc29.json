{"ast":null,"code":"import { EventDispatcher } from \"./EventDispatcher\";\nimport { Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nvar TemplateState = /** @class */function () {\n  function TemplateState(name, template, settings) {\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._name = name;\n    this._template = template;\n    this._settings = settings;\n  }\n  Object.defineProperty(TemplateState.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._settings[key] = value;\n      // TODO maybe only do this if the value changed ?\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      delete this._settings[key];\n      // TODO maybe only do this if the value changed ?\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      var _this = this;\n      $object.keys(settings).forEach(function (key) {\n        _this._settings[key] = settings[key];\n      });\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (other, seen) {\n      $object.each(this._settings, function (key, value) {\n        if (!seen[key] && !other._userSettings[key]) {\n          seen[key] = true;\n          other.setRaw(key, value);\n        }\n      });\n    }\n  });\n  return TemplateState;\n}();\nexport { TemplateState };\nvar TemplateStates = /** @class */function () {\n  function TemplateStates(template) {\n    Object.defineProperty(this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._template = template;\n  }\n  Object.defineProperty(TemplateStates.prototype, \"lookup\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      return this._states[name];\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"create\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, settings) {\n      var state = this._states[name];\n      if (state) {\n        state.setAll(settings);\n        return state;\n      } else {\n        var state_1 = new TemplateState(name, this._template, settings);\n        this._states[name] = state_1;\n        this._template._stateChanged(name);\n        return state_1;\n      }\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      delete this._states[name];\n      this._template._stateChanged(name);\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity, state) {\n      $object.each(this._states, function (key, value) {\n        var seen = state.states[key];\n        if (seen == null) {\n          seen = state.states[key] = {};\n        }\n        var other = entity.states.create(key, {});\n        value._apply(other, seen);\n      });\n    }\n  });\n  return TemplateStates;\n}();\nexport { TemplateStates };\nvar TemplateAdapters = /** @class */function () {\n  function TemplateAdapters() {\n    Object.defineProperty(this, \"_callbacks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n  }\n  Object.defineProperty(TemplateAdapters.prototype, \"add\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var callbacks = this._callbacks[key];\n      if (callbacks === undefined) {\n        callbacks = this._callbacks[key] = [];\n      }\n      callbacks.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(callbacks, callback);\n        if (callbacks.length === 0) {\n          delete _this._callbacks[key];\n        }\n      });\n    }\n  });\n  Object.defineProperty(TemplateAdapters.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var callbacks = this._callbacks[key];\n      if (callbacks !== undefined) {\n        delete this._callbacks[key];\n      }\n    }\n  });\n  Object.defineProperty(TemplateAdapters.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      var disposers = [];\n      $object.each(this._callbacks, function (key, callbacks) {\n        $array.each(callbacks, function (callback) {\n          disposers.push(entity.adapters.add(key, callback));\n        });\n      });\n      return new MultiDisposer(disposers);\n    }\n  });\n  return TemplateAdapters;\n}();\nexport { TemplateAdapters };\n// TODO maybe extend from Properties ?\nvar Template = /** @class */function () {\n  function Template(settings, isReal) {\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_privateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    // TODO code duplication with Properties\n    Object.defineProperty(this, \"_settingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_privateSettingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_entities\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new TemplateStates(this)\n    });\n    Object.defineProperty(this, \"adapters\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new TemplateAdapters()\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    Object.defineProperty(this, \"setup\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n    this._settings = settings;\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   root      Root element\r\n   * @param   settings  Settings\r\n   * @param   template  Template\r\n   * @return            Instantiated object\r\n   */\n  Object.defineProperty(Template, \"new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      return new Template(settings, true);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._settings[key] = value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n      if (this._settings[key] !== value) {\n        this.setRaw(key, value);\n        this._entities.forEach(function (entity) {\n          entity._setTemplateProperty(_this, key, value);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._settings) {\n        delete this._settings[key];\n        this._entities.forEach(function (entity) {\n          entity._removeTemplateProperty(key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"removeAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      $object.each(this._settings, function (key, _value) {\n        _this.remove(key);\n      });\n    }\n  });\n  Object.defineProperty(Template.prototype, \"getPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._privateSettings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._privateSettings[key] = value;\n      return value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n      if (this._privateSettings[key] !== value) {\n        this.setPrivateRaw(key, value);\n        this._entities.forEach(function (entity) {\n          entity._setTemplatePrivateProperty(_this, key, value);\n        });\n      }\n      return value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"removePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._privateSettings) {\n        delete this._privateSettings[key];\n        this._entities.forEach(function (entity) {\n          entity._removeTemplatePrivateProperty(key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      var _this = this;\n      $object.each(value, function (key, value) {\n        _this.set(key, value);\n      });\n    }\n  });\n  // TODO code duplication with Properties\n  Object.defineProperty(Template.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var events = this._settingEvents[key];\n      if (events === undefined) {\n        events = this._settingEvents[key] = [];\n      }\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n        if (events.length === 0) {\n          delete _this._settingEvents[key];\n        }\n      });\n    }\n  });\n  // TODO code duplication with Properties\n  Object.defineProperty(Template.prototype, \"onPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var events = this._privateSettingEvents[key];\n      if (events === undefined) {\n        events = this._privateSettingEvents[key] = [];\n      }\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n        if (events.length === 0) {\n          delete _this._privateSettingEvents[key];\n        }\n      });\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity, state) {\n      var disposers = [];\n      $object.each(this._settingEvents, function (key, events) {\n        $array.each(events, function (event) {\n          disposers.push(entity.on(key, event));\n        });\n      });\n      $object.each(this._privateSettingEvents, function (key, events) {\n        $array.each(events, function (event) {\n          disposers.push(entity.onPrivate(key, event));\n        });\n      });\n      this.states._apply(entity, state);\n      disposers.push(this.adapters._apply(entity));\n      disposers.push(entity.events.copyFrom(this.events));\n      return new MultiDisposer(disposers);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_setObjectTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      this._entities.push(entity);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_removeObjectTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      $array.remove(this._entities, entity);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_stateChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      this._entities.forEach(function (entity) {\n        entity._applyStateByKey(name);\n      });\n    }\n  });\n  return Template;\n}();\nexport { Template };","map":{"version":3,"mappings":"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","names":["EventDispatcher","Disposer","MultiDisposer","$array","$object","name","template","settings","Object","_name","_template","_settings","key","fallback","value","undefined","_stateChanged","keys","forEach","_this","other","seen","each","_userSettings","setRaw","_states","state","setAll","state_1","TemplateState","entity","states","create","_apply","callback","callbacks","_callbacks","push","removeFirst","length","disposers","adapters","add","isReal","TemplateStates","TemplateAdapters","Error","Template","_entities","_setTemplateProperty","_removeTemplateProperty","_value","remove","_privateSettings","setPrivateRaw","_setTemplatePrivateProperty","_removeTemplatePrivateProperty","set","events","_settingEvents","_privateSettingEvents","event","on","onPrivate","copyFrom","_applyStateByKey"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\util\\Template.ts"],"sourcesContent":["import type { Entity, Dirty } from \"./Entity\";\nimport type { State } from \"./States\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { IDisposer, Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\n\nexport class TemplateState<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\n\tprivate _name: string;\n\tprivate _template: Template<E>;\n\n\tconstructor(name: string, template: Template<E>, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._name = name;\n\t\tthis._template = template;\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._settings[key];\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis._settings[key] = settings[key];\n\t\t});\n\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic _apply(other: State<E>, seen: Dirty<E[\"_settings\"]>): void {\n\t\t$object.each(this._settings, (key, value) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tseen[key] = true;\n\t\t\t\tother.setRaw(key, value);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nexport class TemplateStates<E extends Entity> {\n\tprivate _template: Template<E>;\n\tprivate _states: { [key: string]: TemplateState<E> } = {};\n\n\tconstructor(template: Template<E>) {\n\t\tthis._template = template;\n\t}\n\n\tpublic lookup(name: string): TemplateState<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): TemplateState<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new TemplateState(name, this._template, settings);\n\t\t\tthis._states[name] = state;\n\t\t\tthis._template._stateChanged(name);\n\t\t\treturn state;\n\t\t}\n\t}\n\n\tpublic remove(name: string) {\n\t\tdelete this._states[name];\n\t\tthis._template._stateChanged(name);\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): void {\n\t\t$object.each(this._states, (key, value) => {\n\t\t\tlet seen = state.states[key];\n\n\t\t\tif (seen == null) {\n\t\t\t\tseen = state.states[key] = {};\n\t\t\t}\n\n\t\t\tconst other = entity.states.create(key as string, {});\n\t\t\tvalue._apply(other, seen);\n\t\t});\n\t}\n}\n\n\nexport class TemplateAdapters<E extends Entity> {\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(callbacks!, callback);\n\n\t\t\tif (callbacks!.length === 0) {\n\t\t\t\tdelete this._callbacks[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\t\t}\n\t}\n\n\tpublic _apply(entity: E): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._callbacks, (key, callbacks) => {\n\t\t\t$array.each(callbacks, (callback) => {\n\t\t\t\tdisposers.push(entity.adapters.add(key, callback));\n\t\t\t});\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n}\n\n\nexport interface ApplyState<E extends Entity> {\n\tsettings: Dirty<E[\"_settings\"]>;\n\tprivateSettings: Dirty<E[\"_privateSettings\"]>;\n\tstates: { [name: string]: Dirty<E[\"_settings\"]> };\n}\n\n\n// TODO maybe extend from Properties ?\nexport class Template<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _privateSettings: E[\"_privateSettings\"] = {};\n\n\t// TODO code duplication with Properties\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\n\tpublic _entities: Array<E> = [];\n\n\tpublic readonly states: TemplateStates<E> = new TemplateStates(this);\n\n\tpublic readonly adapters: TemplateAdapters<E> = new TemplateAdapters();\n\tpublic readonly events: EventDispatcher<Events<E, E[\"_events\"]>> = new EventDispatcher();\n\n\tpublic setup: (<O extends E>(entity: O) => void) | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tpublic static new<E extends Entity>(settings: E[\"_settings\"]): Template<E> {\n\t\treturn new Template<E>(settings, true);\n\t}\n\n\tconstructor(settings: E[\"_settings\"], isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setRaw<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t}\n\n\tpublic set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (this._settings[key] !== value) {\n\t\t\tthis.setRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tdelete this._settings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic removeAll(): void {\n\t\t$object.each(this._settings, (key, _value) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._privateSettings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._privateSettings[key] = value;\n\t\treturn value;\n\t}\n\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tif (this._privateSettings[key] !== value) {\n\t\t\tthis.setPrivateRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplatePrivateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tdelete this._privateSettings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplatePrivateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setAll(value: this[\"_settings\"]) {\n\t\t$object.each(value, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._settingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.on(key, event));\n\t\t\t});\n\t\t});\n\n\t\t$object.each(this._privateSettingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.onPrivate(key, event));\n\t\t\t});\n\t\t});\n\n\t\tthis.states._apply(entity, state);\n\n\t\tdisposers.push(this.adapters._apply(entity));\n\t\tdisposers.push(entity.events.copyFrom(this.events));\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n\tpublic _setObjectTemplate(entity: E) {\n\t\tthis._entities.push(entity);\n\t}\n\n\tpublic _removeObjectTemplate(entity: E) {\n\t\t$array.remove(this._entities, entity);\n\t}\n\n\tpublic _stateChanged(name: string): void {\n\t\tthis._entities.forEach((entity) => {\n\t\t\tentity._applyStateByKey(name);\n\t\t});\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}