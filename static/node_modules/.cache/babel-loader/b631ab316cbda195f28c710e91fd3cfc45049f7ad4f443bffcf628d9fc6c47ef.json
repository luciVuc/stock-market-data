{"ast":null,"code":"import { __extends, __read, __spreadArray } from \"tslib\";\nimport { Disposer } from \"./Disposer\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\nvar Adapters = /** @class */function () {\n  function Adapters(entity) {\n    Object.defineProperty(this, \"_entity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_callbacks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_disabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._entity = entity;\n  }\n  /**\r\n   * Add a function (`callback`) that will modify value for setting `key`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n   */\n  Object.defineProperty(Adapters.prototype, \"add\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var callbacks = this._callbacks[key];\n      if (callbacks === undefined) {\n        callbacks = this._callbacks[key] = [];\n      }\n      callbacks.push(callback);\n      this._entity._markDirtyKey(key);\n      return new Disposer(function () {\n        if ($array.removeFirst(callbacks, callback)) {\n          _this._entity._markDirtyKey(key);\n        }\n      });\n    }\n  });\n  /**\r\n   * Removes all adapters for the specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n  Object.defineProperty(Adapters.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var callbacks = this._callbacks[key];\n      if (callbacks !== undefined) {\n        delete this._callbacks[key];\n        if (callbacks.length !== 0) {\n          this._entity._markDirtyKey(key);\n        }\n      }\n    }\n  });\n  /**\r\n   * Enables (previously disabled) adapters for specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n  Object.defineProperty(Adapters.prototype, \"enable\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (this._disabled[key]) {\n        delete this._disabled[key];\n        this._entity._markDirtyKey(key);\n      }\n    }\n  });\n  /**\r\n   * Disables all adapters for specific key.\r\n   *\r\n   * @since 5.1.0\r\n   */\n  Object.defineProperty(Adapters.prototype, \"disable\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (!this._disabled[key]) {\n        this._disabled[key] = true;\n        this._entity._markDirtyKey(key);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Adapters.prototype, \"fold\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!this._disabled[key]) {\n        var callbacks = this._callbacks[key];\n        if (callbacks !== undefined) {\n          for (var i = 0, len = callbacks.length; i < len; ++i) {\n            value = callbacks[i](value, this._entity, key);\n          }\n        }\n      }\n      return value;\n    }\n  });\n  return Adapters;\n}();\nexport { Adapters };\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\nvar Animation = /** @class */function () {\n  function Animation(animation, from, to, duration, easing, loops, startingTime) {\n    Object.defineProperty(this, \"_animation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_from\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_to\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_duration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_easing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_loops\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_interpolate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_oldTime\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_time\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_stopped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_playing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    this._animation = animation;\n    this._from = from;\n    this._to = to;\n    this._duration = duration;\n    this._easing = easing;\n    this._loops = loops;\n    this._interpolate = getInterpolate(from, to);\n    this._oldTime = startingTime;\n  }\n  Object.defineProperty(Animation.prototype, \"to\", {\n    get: function () {\n      return this._to;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"from\", {\n    get: function () {\n      return this._from;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"playing\", {\n    get: function () {\n      return this._playing;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"stopped\", {\n    get: function () {\n      return this._stopped;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"stop\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._stopped) {\n        this._stopped = true;\n        this._playing = false;\n        if (this.events.isEnabled(\"stopped\")) {\n          this.events.dispatch(\"stopped\", {\n            type: \"stopped\",\n            target: this\n          });\n        }\n      }\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"pause\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._playing = false;\n      this._oldTime = null;\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"play\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._stopped && !this._playing) {\n        this._playing = true;\n        this._animation._startAnimation();\n      }\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"percentage\", {\n    get: function () {\n      return this._time / this._duration;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Animation.prototype, \"waitForStop\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      return new Promise(function (resolve, _reject) {\n        if (_this._stopped) {\n          resolve();\n        } else {\n          var listener = function () {\n            stopped_1.dispose();\n            resolve();\n          };\n          var stopped_1 = _this.events.on(\"stopped\", listener);\n        }\n      });\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_checkEnded\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this._loops > 1) {\n        --this._loops;\n        return false;\n      } else {\n        return true;\n      }\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_run\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (currentTime) {\n      if (this._oldTime !== null) {\n        this._time += currentTime - this._oldTime;\n        if (this._time > this._duration) {\n          this._time = this._duration;\n        }\n      }\n      this._oldTime = currentTime;\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_reset\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (currentTime) {\n      this._oldTime = currentTime;\n      this._time = 0;\n    }\n  });\n  Object.defineProperty(Animation.prototype, \"_value\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (diff) {\n      return this._interpolate(this._easing(diff), this._from, this._to);\n    }\n  });\n  return Animation;\n}();\nexport { Animation };\n/**\r\n * @ignore\r\n */\nvar counter = 0;\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\nvar Settings = /** @class */function () {\n  function Settings(settings) {\n    /**\r\n     * Unique ID.\r\n     */\n    Object.defineProperty(this, \"uid\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: ++counter\n    });\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_privateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_settingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_privateSettingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_prevSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_prevPrivateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_animatingSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_animatingPrivateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_disposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // TODO move this into Entity\n    Object.defineProperty(this, \"_userProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._settings = settings;\n  }\n  Object.defineProperty(Settings.prototype, \"_checkDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      $object.keys(this._settings).forEach(function (key) {\n        _this._userProperties[key] = true;\n        _this._markDirtyKey(key);\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"resetUserSettings\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._userProperties = {};\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_runAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (currentTime) {\n      var _this = this;\n      if (!this.isDisposed()) {\n        var playing_1 = false;\n        $object.each(this._animatingSettings, function (key, animation) {\n          if (animation._stopped) {\n            _this._stopAnimation(key);\n          } else if (animation._playing) {\n            animation._run(currentTime);\n            var diff = animation.percentage;\n            if (diff >= 1) {\n              if (animation._checkEnded()) {\n                _this.set(key, animation._value(1));\n              } else {\n                playing_1 = true;\n                animation._reset(currentTime);\n                _this._set(key, animation._value(1));\n              }\n            } else {\n              playing_1 = true;\n              _this._set(key, animation._value(diff));\n            }\n          }\n        });\n        $object.each(this._animatingPrivateSettings, function (key, animation) {\n          if (animation._stopped) {\n            _this._stopAnimationPrivate(key);\n          } else if (animation._playing) {\n            animation._run(currentTime);\n            var diff = animation.percentage;\n            if (diff >= 1) {\n              if (animation._checkEnded()) {\n                _this.setPrivate(key, animation._value(1));\n              } else {\n                playing_1 = true;\n                animation._reset(currentTime);\n                _this._setPrivate(key, animation._value(1));\n              }\n            } else {\n              playing_1 = true;\n              _this._setPrivate(key, animation._value(diff));\n            }\n          }\n        });\n        return playing_1;\n      } else {\n        return false;\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_markDirtyKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_key) {\n      this.markDirty();\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_markDirtyPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_key) {\n      this.markDirty();\n    }\n  });\n  /**\r\n   * Sets a callback function to invoke when specific key of settings changes\r\n   * or is set.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @param   key       Settings key\r\n   * @param   callback  Callback\r\n   * @return            Disposer for event\r\n   */\n  Object.defineProperty(Settings.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var events = this._settingEvents[key];\n      if (events === undefined) {\n        events = this._settingEvents[key] = [];\n      }\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n        if (events.length === 0) {\n          delete _this._settingEvents[key];\n        }\n      });\n    }\n  });\n  /**\r\n   * Sets a callback function to invoke when specific key of private settings\r\n   * changes or is set.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n   * @ignore\r\n   * @param   key       Private settings key\r\n   * @param   callback  Callback\r\n   * @return            Disposer for event\r\n   */\n  Object.defineProperty(Settings.prototype, \"onPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var events = this._privateSettingEvents[key];\n      if (events === undefined) {\n        events = this._privateSettingEvents[key] = [];\n      }\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n        if (events.length === 0) {\n          delete _this._privateSettingEvents[key];\n        }\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"getRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      return this.getRaw(key, fallback);\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_sendKeyEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n      var events = this._settingEvents[key];\n      if (events !== undefined) {\n        $array.each(events, function (callback) {\n          callback(value, _this, key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_sendPrivateKeyEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n      var events = this._privateSettingEvents[key];\n      if (events !== undefined) {\n        $array.each(events, function (callback) {\n          callback(value, _this, key);\n        });\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"_setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, old, value) {\n      this._prevSettings[key] = old;\n      this._sendKeyEvent(key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._settings[key];\n      this._settings[key] = value;\n      if (old !== value) {\n        this._setRaw(key, old, value);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"_set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._settings[key];\n      this._settings[key] = value;\n      if (old !== value) {\n        this._setRaw(key, old, value);\n        this._markDirtyKey(key);\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_stopAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var animation = this._animatingSettings[key];\n      if (animation) {\n        delete this._animatingSettings[key];\n        animation.stop();\n      }\n    }\n  });\n  /**\r\n   * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n  Object.defineProperty(Settings.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._set(key, value);\n      this._stopAnimation(key);\n      return value;\n    }\n  });\n  /**\r\n   * Removes a setting value for the specified `key`;\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   */\n  Object.defineProperty(Settings.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._settings) {\n        this._prevSettings[key] = this._settings[key];\n        delete this._settings[key];\n        this._sendKeyEvent(key, undefined);\n        this._markDirtyKey(key);\n      }\n      this._stopAnimation(key);\n    }\n  });\n  /**\r\n   * Removes all keys;\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   */\n  Object.defineProperty(Settings.prototype, \"removeAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      $array.each($object.keys(this._settings), function (key) {\n        _this.remove(key);\n      });\n    }\n  });\n  /**\r\n   * Returns a value of a private setting.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n   */\n  Object.defineProperty(Settings.prototype, \"getPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._privateSettings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"_setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, old, value) {\n      this._prevPrivateSettings[key] = old;\n      this._sendPrivateKeyEvent(key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._privateSettings[key];\n      this._privateSettings[key] = value;\n      if (old !== value) {\n        this._setPrivateRaw(key, old, value);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"_setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var old = this._privateSettings[key];\n      this._privateSettings[key] = value;\n      if (old !== value) {\n        this._setPrivateRaw(key, old, value);\n        this._markDirtyPrivateKey(key);\n      }\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_stopAnimationPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var animation = this._animatingPrivateSettings[key];\n      if (animation) {\n        animation.stop();\n        delete this._animatingPrivateSettings[key];\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._setPrivate(key, value);\n      this._stopAnimationPrivate(key);\n      return value;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"removePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._privateSettings) {\n        this._prevPrivateSettings[key] = this._privateSettings[key];\n        delete this._privateSettings[key];\n        this._markDirtyPrivateKey(key);\n      }\n      this._stopAnimationPrivate(key);\n    }\n  });\n  /**\r\n   * Sets multiple settings at once.\r\n   *\r\n   * `settings` must be an object with key: value pairs.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param settings Settings\r\n   */\n  Object.defineProperty(Settings.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      var _this = this;\n      $object.each(settings, function (key, value) {\n        _this.set(key, value);\n      });\n    }\n  });\n  /**\r\n   * Animates setting values from current/start values to new ones.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n   * @param   options  Animation options\r\n   * @return           Animation object\r\n   */\n  Object.defineProperty(Settings.prototype, \"animate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (options) {\n      var key = options.key;\n      var to = options.to;\n      var duration = options.duration || 0;\n      var loops = options.loops || 1;\n      var from = options.from === undefined ? this.get(key) : options.from;\n      var easing = options.easing === undefined ? $ease.linear : options.easing;\n      if (duration === 0) {\n        this.set(key, to);\n      } else {\n        if (from === undefined || from === to) {\n          this.set(key, to);\n        } else {\n          this.set(key, from);\n          var animation_1 = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n          this._startAnimation();\n          return animation_1;\n        }\n      }\n      var animation = new Animation(this, from, to, duration, easing, loops, null);\n      animation.stop();\n      return animation;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Settings.prototype, \"animatePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (options) {\n      var key = options.key;\n      var to = options.to;\n      var duration = options.duration || 0;\n      var loops = options.loops || 1;\n      var from = options.from === undefined ? this.getPrivate(key) : options.from;\n      var easing = options.easing === undefined ? $ease.linear : options.easing;\n      if (duration === 0) {\n        this.setPrivate(key, to);\n      } else {\n        if (from === undefined || from === to) {\n          this.setPrivate(key, to);\n        } else {\n          this.setPrivate(key, from);\n          var animation_2 = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n          this._startAnimation();\n          return animation_2;\n        }\n      }\n      var animation = new Animation(this, from, to, duration, easing, loops, null);\n      animation.stop();\n      return animation;\n    }\n  });\n  Object.defineProperty(Settings.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * Returns `true` if this element is disposed.\r\n   *\r\n   * @return Disposed\r\n   */\n  Object.defineProperty(Settings.prototype, \"isDisposed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._disposed;\n    }\n  });\n  /**\r\n   * Disposes this object.\r\n   */\n  Object.defineProperty(Settings.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._disposed) {\n        this._disposed = true;\n        this._dispose();\n      }\n    }\n  });\n  return Settings;\n}();\nexport { Settings };\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\nvar Entity = /** @class */function (_super) {\n  __extends(Entity, _super);\n  /**\r\n   * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n   *\r\n   * Use static method `Class.new()` instead.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @ignore\r\n   */\n  function Entity(root, settings, isReal, templates) {\n    if (templates === void 0) {\n      templates = [];\n    }\n    var _this = _super.call(this, settings) || this;\n    Object.defineProperty(_this, \"_root\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_user_id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // for testing purposes\n    Object.defineProperty(_this, \"states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new States(_this)\n    });\n    Object.defineProperty(_this, \"adapters\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Adapters(_this)\n    });\n    Object.defineProperty(_this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._createEvents()\n    });\n    Object.defineProperty(_this, \"_userPrivateProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_dirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_dirtyPrivate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // Templates for the themes\n    Object.defineProperty(_this, \"_templates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    // Internal templates which can be overridden by the user's templates\n    Object.defineProperty(_this, \"_internalTemplates\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // Default themes which can be overridden by the user's themes\n    Object.defineProperty(_this, \"_defaultThemes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    // Disposers for all of the templates\n    Object.defineProperty(_this, \"_templateDisposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_disposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    // Whether the template setup function should be run\n    Object.defineProperty(_this, \"_runSetup\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_disposerProperties\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n    _this._root = root;\n    _this._internalTemplates = templates;\n    if (settings.id) {\n      _this._registerId(settings.id);\n    }\n    return _this;\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   root      Root element\r\n   * @param   settings  Settings\r\n   * @param   template  Template\r\n   * @return            Instantiated object\r\n   */\n  Object.defineProperty(Entity, \"new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root, settings, template) {\n      var x = new this(root, settings, true);\n      x._template = template;\n      x._afterNew();\n      return x;\n    }\n  });\n  Object.defineProperty(Entity, \"_new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root, settings, templates) {\n      if (templates === void 0) {\n        templates = [];\n      }\n      var x = new this(root, settings, true, templates);\n      x._afterNew();\n      return x;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this._checkDirty();\n      var shouldApply = false;\n      var template = this._template;\n      if (template) {\n        shouldApply = true;\n        template._setObjectTemplate(this);\n      }\n      $array.each(this._internalTemplates, function (template) {\n        shouldApply = true;\n        template._setObjectTemplate(_this);\n      });\n      if (shouldApply) {\n        this._applyTemplates(false);\n      }\n      this.states.create(\"default\", {});\n      this._setDefaults();\n    }\n  });\n  // This is the same as _afterNew, except it also applies the themes.\n  // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n  Object.defineProperty(Entity.prototype, \"_afterNewApplyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this._checkDirty();\n      var template = this._template;\n      if (template) {\n        template._setObjectTemplate(this);\n      }\n      $array.each(this._internalTemplates, function (template) {\n        template._setObjectTemplate(_this);\n      });\n      this.states.create(\"default\", {});\n      this._setDefaults();\n      this._applyThemes();\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_createEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new EventDispatcher();\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"classNames\", {\n    /**\r\n     * @ignore\r\n     */\n    get: function () {\n      return this.constructor.classNames;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Entity.prototype, \"className\", {\n    /**\r\n     * @ignore\r\n     */\n    get: function () {\n      return this.constructor.className;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Entity.prototype, \"_setDefaults\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Entity.prototype, \"_setDefault\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!(key in this._settings)) {\n        _super.prototype.set.call(this, key, value);\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_setRawDefault\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!(key in this._settings)) {\n        _super.prototype.setRaw.call(this, key, value);\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      $object.keys(this._dirty).forEach(function (key) {\n        _this._dirty[key] = false;\n      });\n      $object.keys(this._dirtyPrivate).forEach(function (key) {\n        _this._dirtyPrivate[key] = false;\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"isDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return !!this._dirty[key];\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"isPrivateDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return !!this._dirtyPrivate[key];\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_markDirtyKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      this._dirty[key] = true;\n      _super.prototype._markDirtyKey.call(this, key);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_markDirtyPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      this._dirtyPrivate[key] = true;\n      _super.prototype._markDirtyKey.call(this, key);\n    }\n  });\n  /**\r\n   * Checks if element is of certain class (or inherits one).\r\n   *\r\n   * @param   type  Class name to check\r\n   * @return {boolean} Is of class?\r\n   */\n  Object.defineProperty(Entity.prototype, \"isType\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (type) {\n      return this.classNames.indexOf(type) !== -1;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_pushPropertyDisposer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, disposer) {\n      var disposers = this._disposerProperties[key];\n      if (disposers === undefined) {\n        disposers = this._disposerProperties[key] = [];\n      }\n      disposers.push(disposer);\n      return disposer;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_disposeProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var disposers = this._disposerProperties[key];\n      if (disposers !== undefined) {\n        $array.each(disposers, function (disposer) {\n          disposer.dispose();\n        });\n        delete this._disposerProperties[key];\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"template\", {\n    get: function () {\n      return this._template;\n    },\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\n    set: function (value) {\n      var template = this._template;\n      if (template !== value) {\n        this._template = value;\n        if (template) {\n          template._removeObjectTemplate(this);\n        }\n        if (value) {\n          value._setObjectTemplate(this);\n        }\n        this._applyTemplates();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._root._addDirtyEntity(this);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_startAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._root._addAnimation(this);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_animationTime\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._root.animationTime;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyState\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_name) {}\n  });\n  Object.defineProperty(Entity.prototype, \"_applyStateAnimated\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_name, _duration) {}\n  });\n  Object.defineProperty(Entity.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this.adapters.fold(key, this._settings[key]);\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  /**\r\n   * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n  Object.defineProperty(Entity.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userProperties[key] = true;\n      return _super.prototype.set.call(this, key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userProperties[key] = true;\n      _super.prototype.setRaw.call(this, key, value);\n    }\n  });\n  /**\r\n   * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   * @param   value     Setting value\r\n   * @return            Setting value\r\n   */\n  Object.defineProperty(Entity.prototype, \"_setSoft\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      if (!this._userProperties[key]) {\n        return _super.prototype.set.call(this, key, value);\n      }\n      return value;\n    }\n  });\n  /**\r\n   * Removes a setting value for the specified `key`.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n   * @param   key       Setting key\r\n   */\n  Object.defineProperty(Entity.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      delete this._userProperties[key];\n      this._removeTemplateProperty(key);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userPrivateProperties[key] = true;\n      return _super.prototype.setPrivate.call(this, key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._userPrivateProperties[key] = true;\n      _super.prototype.setPrivateRaw.call(this, key, value);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"removePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      delete this._userPrivateProperties[key];\n      this._removeTemplatePrivateProperty(key);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_setTemplateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (template, key, value) {\n      if (!this._userProperties[key]) {\n        var match = this._findTemplateByKey(key);\n        if (template === match) {\n          _super.prototype.set.call(this, key, value);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_setTemplatePrivateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (template, key, value) {\n      if (!this._userPrivateProperties[key]) {\n        var match = this._findTemplateByPrivateKey(key);\n        if (template === match) {\n          _super.prototype.setPrivate.call(this, key, value);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_removeTemplateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (!this._userProperties[key]) {\n        var match = this._findTemplateByKey(key);\n        if (match) {\n          // TODO don't stop the animation if the property didn't change\n          _super.prototype.set.call(this, key, match._settings[key]);\n        } else {\n          _super.prototype.remove.call(this, key);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_removeTemplatePrivateProperty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (!this._userPrivateProperties[key]) {\n        var match = this._findTemplateByPrivateKey(key);\n        if (match) {\n          // TODO don't stop the animation if the property didn't change\n          _super.prototype.setPrivate.call(this, key, match._privateSettings[key]);\n        } else {\n          _super.prototype.removePrivate.call(this, key);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_walkParents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      f(this._root._rootContainer);\n      f(this);\n    }\n  });\n  // TODO faster version of this method which is specialized to just 1 key\n  Object.defineProperty(Entity.prototype, \"_applyStateByKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      var other = this.states.create(name, {});\n      var seen = {};\n      this._eachTemplate(function (template) {\n        var state = template.states.lookup(name);\n        if (state) {\n          state._apply(other, seen);\n        }\n      });\n      $object.each(other._settings, function (key) {\n        if (!seen[key] && !other._userSettings[key]) {\n          other.remove(key);\n        }\n      });\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (template, state) {\n      var _this = this;\n      this._templateDisposers.push(template._apply(this, state));\n      $object.each(template._settings, function (key, value) {\n        if (!state.settings[key] && !_this._userProperties[key]) {\n          state.settings[key] = true;\n          _super.prototype.set.call(_this, key, value);\n        }\n      });\n      $object.each(template._privateSettings, function (key, value) {\n        if (!state.privateSettings[key] && !_this._userPrivateProperties[key]) {\n          state.privateSettings[key] = true;\n          _super.prototype.setPrivate.call(_this, key, value);\n        }\n      });\n      if (this._runSetup && template.setup) {\n        this._runSetup = false;\n        template.setup(this);\n      }\n    }\n  });\n  /**\r\n   * Calls the closure with each template and returns the first template which is true\r\n   */\n  Object.defineProperty(Entity.prototype, \"_findStaticTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      if (this._template) {\n        if (f(this._template)) {\n          return this._template;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_eachTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      this._findStaticTemplate(function (template) {\n        f(template);\n        return false;\n      });\n      // _internalTemplates is sorted with most specific to the right\n      $array.eachReverse(this._internalTemplates, f);\n      // _templates is sorted with most specific to the left\n      $array.each(this._templates, f);\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyTemplates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (remove) {\n      var _this = this;\n      if (remove === void 0) {\n        remove = true;\n      }\n      if (remove) {\n        this._disposeTemplates();\n      }\n      var state = {\n        settings: {},\n        privateSettings: {},\n        states: {}\n      };\n      this._eachTemplate(function (template) {\n        _this._applyTemplate(template, state);\n      });\n      if (remove) {\n        $object.each(this._settings, function (key) {\n          if (!_this._userProperties[key] && !state.settings[key]) {\n            _super.prototype.remove.call(_this, key);\n          }\n        });\n        $object.each(this._privateSettings, function (key) {\n          if (!_this._userPrivateProperties[key] && !state.privateSettings[key]) {\n            _super.prototype.removePrivate.call(_this, key);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_findTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      var value = this._findStaticTemplate(f);\n      if (value === undefined) {\n        // _internalTemplates is sorted with most specific to the right\n        var value_1 = $array.findReverse(this._internalTemplates, f);\n        if (value_1 === undefined) {\n          // _templates is sorted with most specific to the left\n          return $array.find(this._templates, f);\n        } else {\n          return value_1;\n        }\n      } else {\n        return value;\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_findTemplateByKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return this._findTemplate(function (template) {\n        return key in template._settings;\n      });\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_findTemplateByPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      return this._findTemplate(function (template) {\n        return key in template._privateSettings;\n      });\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_disposeTemplates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      $array.each(this._templateDisposers, function (disposer) {\n        disposer.dispose();\n      });\n      this._templateDisposers.length = 0;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_removeTemplates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      $array.each(this._templates, function (template) {\n        template._removeObjectTemplate(_this);\n      });\n      this._templates.length = 0;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_applyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var isConnected = false;\n      var defaults = [];\n      var themes = [];\n      var themeTags = new Set();\n      var tags = this.get(\"themeTagsSelf\");\n      if (tags) {\n        $array.each(tags, function (tag) {\n          themeTags.add(tag);\n        });\n      }\n      this._walkParents(function (entity) {\n        if (entity === _this._root._rootContainer) {\n          isConnected = true;\n        }\n        if (entity._defaultThemes.length > 0) {\n          defaults.push(entity._defaultThemes);\n        }\n        var theme = entity.get(\"themes\");\n        if (theme) {\n          themes.push(theme);\n        }\n        var tags = entity.get(\"themeTags\");\n        if (tags) {\n          $array.each(tags, function (tag) {\n            themeTags.add(tag);\n          });\n        }\n      });\n      themes = defaults.concat(themes);\n      this._removeTemplates();\n      if (isConnected) {\n        $array.eachReverse(this.classNames, function (name) {\n          var allRules = [];\n          $array.each(themes, function (themes) {\n            $array.each(themes, function (theme) {\n              var rules = theme._lookupRules(name);\n              if (rules) {\n                $array.eachReverse(rules, function (rule) {\n                  var matches = rule.tags.every(function (tag) {\n                    return themeTags.has(tag);\n                  });\n                  if (matches) {\n                    var result = $array.getFirstSortedIndex(allRules, function (x) {\n                      var order = $order.compare(rule.tags.length, x.tags.length);\n                      if (order === 0) {\n                        return $order.compareArray(rule.tags, x.tags, $order.compare);\n                      } else {\n                        return order;\n                      }\n                    });\n                    allRules.splice(result.index, 0, rule);\n                  }\n                });\n              }\n            });\n          });\n          $array.each(allRules, function (rule) {\n            _this._templates.push(rule.template);\n            rule.template._setObjectTemplate(_this);\n          });\n        });\n      }\n      this._applyTemplates();\n      if (isConnected) {\n        // This causes it to only run the setup function the first time that the themes are applied\n        this._runSetup = false;\n      }\n      return isConnected;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Entity.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isDirty(\"id\")) {\n        var id = this.get(\"id\");\n        if (id) {\n          this._registerId(id);\n        }\n        var prevId = this._prevSettings.id;\n        if (prevId) {\n          delete registry.entitiesById[prevId];\n        }\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_registerId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\n        throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n      }\n      registry.entitiesById[id] = this;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_afterChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"addDisposer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (disposer) {\n      this._disposers.push(disposer);\n      return disposer;\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._dispose.call(this);\n      var template = this._template;\n      if (template) {\n        template._removeObjectTemplate(this);\n      }\n      $array.each(this._internalTemplates, function (template) {\n        template._removeObjectTemplate(_this);\n      });\n      this._removeTemplates();\n      this._disposeTemplates();\n      this.events.dispose();\n      this._disposers.forEach(function (x) {\n        x.dispose();\n      });\n      $object.each(this._disposerProperties, function (_, disposers) {\n        $array.each(disposers, function (disposer) {\n          disposer.dispose();\n        });\n      });\n      var id = this.get(\"id\");\n      if (id) {\n        delete registry.entitiesById[id];\n      }\n    }\n  });\n  /**\r\n   * Creates and returns a \"disposable\" timeout.\r\n   *\r\n   * @param   fn     Callback\r\n   * @param   delay  Delay in milliseconds\r\n   * @return         Timeout disposer\r\n   */\n  Object.defineProperty(Entity.prototype, \"setTimeout\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fn, delay) {\n      var _this = this;\n      var id = setTimeout(function () {\n        _this.removeDispose(disposer);\n        fn();\n      }, delay);\n      var disposer = new Disposer(function () {\n        clearTimeout(id);\n      });\n      this._disposers.push(disposer);\n      return disposer;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"removeDispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target) {\n      if (!this.isDisposed()) {\n        var index = $array.indexOf(this._disposers, target);\n        if (index > -1) {\n          this._disposers.splice(index, 1);\n        }\n      }\n      target.dispose();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"hasTag\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tag) {\n      return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"addTag\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tag) {\n      if (!this.hasTag(tag)) {\n        var tags = this.get(\"themeTags\", []);\n        tags.push(tag);\n        this.set(\"themeTags\", tags);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Entity.prototype, \"removeTag\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tag) {\n      if (this.hasTag(tag)) {\n        var tags = this.get(\"themeTags\", []);\n        $array.remove(tags, tag);\n        this.set(\"themeTags\", tags);\n      }\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"_t\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, locale) {\n      var _a;\n      var rest = [];\n      for (var _i = 2; _i < arguments.length; _i++) {\n        rest[_i - 2] = arguments[_i];\n      }\n      return (_a = this._root.language).translate.apply(_a, __spreadArray([text, locale], __read(rest), false));\n    }\n  });\n  Object.defineProperty(Entity.prototype, \"root\", {\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\n    get: function () {\n      return this._root;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Entity, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Entity\"\n  });\n  Object.defineProperty(Entity, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: [\"Entity\"]\n  });\n  return Entity;\n}(Settings);\nexport { Entity };","map":{"version":3,"mappings":"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","names":["Disposer","EventDispatcher","getInterpolate","States","registry","$object","$ease","$array","$order","entity","Object","_entity","key","callback","callbacks","_callbacks","undefined","push","_markDirtyKey","removeFirst","_this","length","_disabled","value","i","len","animation","from","to","duration","easing","loops","startingTime","_animation","_from","_to","_duration","_easing","_loops","_interpolate","_oldTime","Animation","_playing","_stopped","events","isEnabled","dispatch","type","target","_startAnimation","_time","Promise","resolve","_reject","listener","stopped_1","dispose","on","currentTime","diff","counter","settings","_settings","keys","forEach","_userProperties","isDisposed","playing_1","each","_animatingSettings","_stopAnimation","_run","percentage","_checkEnded","set","_value","_reset","_set","_animatingPrivateSettings","_stopAnimationPrivate","setPrivate","_setPrivate","_key","markDirty","_settingEvents","_privateSettingEvents","fallback","getRaw","old","_prevSettings","_sendKeyEvent","_setRaw","stop","remove","_privateSettings","_prevPrivateSettings","_sendPrivateKeyEvent","_setPrivateRaw","_markDirtyPrivateKey","options","get","linear","animation_1","_animationTime","getPrivate","animation_2","_disposed","_dispose","__extends","root","isReal","templates","_super","Adapters","_createEvents","Error","_root","_internalTemplates","id","_registerId","template","x","_template","_afterNew","_checkDirty","shouldApply","_setObjectTemplate","_applyTemplates","states","create","_setDefaults","_applyThemes","Entity","constructor","classNames","className","setRaw","_dirty","_dirtyPrivate","indexOf","disposer","disposers","_disposerProperties","_removeObjectTemplate","_addDirtyEntity","_addAnimation","animationTime","_name","adapters","fold","_removeTemplateProperty","_userPrivateProperties","setPrivateRaw","_removeTemplatePrivateProperty","match","_findTemplateByKey","_findTemplateByPrivateKey","removePrivate","f","_rootContainer","name","other","seen","_eachTemplate","state","lookup","_apply","_userSettings","_templateDisposers","privateSettings","_runSetup","setup","_findStaticTemplate","eachReverse","_templates","_disposeTemplates","_applyTemplate","value_1","findReverse","find","_findTemplate","isConnected","defaults","themes","themeTags","Set","tags","tag","add","_walkParents","_defaultThemes","theme","concat","_removeTemplates","allRules","rules","_lookupRules","rule","matches","every","has","result","getFirstSortedIndex","order","compare","compareArray","splice","index","isDirty","prevId","entitiesById","_disposers","_","fn","delay","setTimeout","removeDispose","clearTimeout","hasTag","text","locale","_i","rest","language","translate","Settings"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\util\\Entity.ts"],"sourcesContent":["import type { Root } from \"../Root\";\nimport type { Template, ApplyState } from \"./Template\";\nimport type { Theme, IRule } from \"../Theme\";\nimport type { ILocale } from \"./Language\";\n\nimport { IDisposer, Disposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { Time, IAnimation, getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\n\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n\n/**\n * @ignore\n */\nexport type Dirty<A> = { [K in keyof A]?: boolean };\n\n\n/**\n * Allows to dynamically modify setting value of its target element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n */\nexport class Adapters<E extends Settings> {\n\tprivate _entity: E;\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\tprivate _disabled: { [K in keyof E[\"_settings\"]]?: boolean } = {};\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Add a function (`callback`) that will modify value for setting `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n\t */\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\tthis._entity._markDirtyKey(key);\n\n\t\treturn new Disposer(() => {\n\t\t\tif ($array.removeFirst(callbacks!, callback)) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes all adapters for the specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\n\t\t\tif (callbacks.length !== 0) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Enables (previously disabled) adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic enable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (this._disabled[key]) {\n\t\t\tdelete this._disabled[key];\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * Disables all adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic disable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (!this._disabled[key]) {\n\t\t\tthis._disabled[key] = true;\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fold<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]): E[\"_settings\"][Key] {\n\t\tif (!this._disabled[key]) {\n\t\t\tconst callbacks = this._callbacks[key];\n\n\t\t\tif (callbacks !== undefined) {\n\t\t\t\tfor (let i = 0, len = callbacks.length; i < len; ++i) {\n\t\t\t\t\tvalue = callbacks[i](value, this._entity, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n\nexport interface IEntitySettings {\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTags?: Array<string>;\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * These tags only apply to this object, not any children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTagsSelf?: Array<string>;\n\n\t/**\n\t * A list of themes applied to the element.\n\t */\n\tthemes?: Array<Theme>;\n\n\n\t/**\n\t * Duration of transition from one state to another.\n\t */\n\tstateAnimationDuration?:number;\n\n\t/**\n\t * Easing of transition from one state to another.\n\t */\n\tstateAnimationEasing?:$ease.Easing;\n\n\t/**\n\t * A custom string ID for the element.\n\t *\n\t * If set, element can be looked up via `am5.registry.entitiesById`.\n\t *\n\t * Will raise error if an element with the same ID already exists.\n\t */\n\tid?: string;\n\n\t/**\n\t * A storage for any custom user data that needs to be associated with the\n\t * element.\n\t */\n\tuserData?: any;\n\n}\n\nexport interface IEntityPrivate {\n}\n\nexport interface IEntityEvents {\n}\n\n/**\n * Animation options.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport interface AnimationOptions<Key, Value> {\n\n\t/**\n\t * A setting key to animate value for.\n\t */\n\tkey: Key,\n\n\t/**\n\t * Initial value to animate from. If not set, will use current value.\n\t */\n\tfrom?: Value;\n\n\t/**\n\t * Target value to animate to.\n\t */\n\tto: Value;\n\n\t/**\n\t * Animation duration in milliseconds.\n\t */\n\tduration: number;\n\n\t/**\n\t * Easing function. Defaults to linear.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\teasing?: $ease.Easing;\n\n\t/**\n\t * How many times to play the animation. Defaults to 1.\n\t */\n\tloops?: number;\n}\n\nexport interface IAnimationEvents {\n\t/**\n\t * Invoked when animation was stopped, which happens in these situations:\n\t * 1. When the animation reached the end.\n\t * 2. When the `stop()` method is called.\n\t * 3. When a new animation starts for the same key.\n\t * 4. When calling `set` for the same key.\n\t */\n\tstopped: {};\n}\n\n/**\n * Animation object.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport class Animation<Value> {\n\tprivate _animation: IStartAnimation;\n\tprivate _from: Value;\n\tprivate _to: Value;\n\tprivate _duration: number;\n\tprivate _easing: $ease.Easing;\n\tprivate _loops: number;\n\tprivate _interpolate: <A extends Value>(diff: Time, from: A, to: A) => A;\n\tprivate _oldTime: number | null;\n\tprivate _time: number = 0;\n\n\tpublic _stopped: boolean = false;\n\tpublic _playing: boolean = true;\n\n\tpublic events: EventDispatcher<Events<this, IAnimationEvents>> = new EventDispatcher();\n\n\tconstructor(animation: IStartAnimation, from: Value, to: Value, duration: number, easing: $ease.Easing, loops: number, startingTime: number | null) {\n\t\tthis._animation = animation;\n\t\tthis._from = from;\n\t\tthis._to = to;\n\t\tthis._duration = duration;\n\t\tthis._easing = easing;\n\t\tthis._loops = loops;\n\t\tthis._interpolate = getInterpolate(from, to);\n\t\tthis._oldTime = startingTime;\n\t}\n\n\tpublic get to() {\n\t\treturn this._to;\n\t}\n\n\tpublic get from() {\n\t\treturn this._from;\n\t}\n\n\tpublic get playing() {\n\t\treturn this._playing;\n\t}\n\n\tpublic get stopped() {\n\t\treturn this._stopped;\n\t}\n\n\tpublic stop(): void {\n\t\tif (!this._stopped) {\n\t\t\tthis._stopped = true;\n\t\t\tthis._playing = false;\n\n\t\t\tif (this.events.isEnabled(\"stopped\")) {\n\t\t\t\tthis.events.dispatch(\"stopped\", {\n\t\t\t\t\ttype: \"stopped\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic pause(): void {\n\t\tthis._playing = false;\n\t\tthis._oldTime = null;\n\t}\n\n\tpublic play(): void {\n\t\tif (!this._stopped && !this._playing) {\n\t\t\tthis._playing = true;\n\t\t\tthis._animation._startAnimation();\n\t\t}\n\t}\n\n\tpublic get percentage(): Time {\n\t\treturn this._time / this._duration;\n\t}\n\n\tpublic waitForStop(): Promise<void> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tif (this._stopped) {\n\t\t\t\tresolve();\n\n\t\t\t} else {\n\t\t\t\tconst listener = () => {\n\t\t\t\t\tstopped.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\n\t\t\t\tconst stopped = this.events.on(\"stopped\", listener);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _checkEnded(): boolean {\n\t\tif (this._loops > 1) {\n\t\t\t--this._loops;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic _run(currentTime: number): void {\n\t\tif (this._oldTime !== null) {\n\t\t\tthis._time += currentTime - this._oldTime;\n\n\t\t\tif (this._time > this._duration) {\n\t\t\t\tthis._time = this._duration;\n\t\t\t}\n\t\t}\n\n\t\tthis._oldTime = currentTime;\n\t}\n\n\tpublic _reset(currentTime: number): void {\n\t\tthis._oldTime = currentTime;\n\t\tthis._time = 0;\n\t}\n\n\tpublic _value(diff: Time): Value {\n\t\treturn this._interpolate(this._easing(diff), this._from, this._to);\n\t}\n}\n\ntype Animated<P> = { [K in keyof P]?: Animation<P[K]> };\n\n\ninterface IStartAnimation {\n\t_startAnimation(): void;\n}\n\n\n/**\n * @ignore\n */\nlet counter = 0;\n\n/**\n * Base class for [[Entity]] objects that support Settings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n */\nexport abstract class Settings implements IDisposer, IAnimation, IStartAnimation {\n\n\t/**\n\t * Unique ID.\n\t */\n\tpublic uid: number = ++counter;\n\n\tpublic _settings: {};\n\tpublic _privateSettings: {} = {};\n\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\n\tpublic _prevSettings: this[\"_settings\"] = {};\n\tpublic _prevPrivateSettings: this[\"_privateSettings\"] = {};\n\n\tprotected _animatingSettings: Animated<this[\"_settings\"]> = {};\n\tprotected _animatingPrivateSettings: Animated<this[\"_privateSettings\"]> = {};\n\n\tprivate _disposed: boolean = false;\n\n\t// TODO move this into Entity\n\tprotected _userProperties: Dirty<this[\"_settings\"]> = {};\n\n\tconstructor(settings: Settings[\"_settings\"]) {\n\t\tthis._settings = settings;\n\t}\n\n\tprotected _checkDirty(): void {\n\t\t$object.keys(this._settings).forEach((key) => {\n\t\t\t(this._userProperties as any)[key] = true;\n\t\t\tthis._markDirtyKey(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetUserSettings(){\n\t\tthis._userProperties = {};\n\t}\t\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirty(): void;\n\n\tpublic _runAnimation(currentTime: number): boolean {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet playing = false;\n\n\t\t\t$object.each(this._animatingSettings, (key, animation) => {\n\t\t\t\tif (animation._stopped) {\n\t\t\t\t\tthis._stopAnimation(key);\n\n\t\t\t\t} else if (animation._playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.set(key, animation._value(1));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._set(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._set(key, animation._value(diff));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._animatingPrivateSettings, (key, animation) => {\n\t\t\t\tif (animation._stopped) {\n\t\t\t\t\tthis._stopAnimationPrivate(key);\n\n\t\t\t\t} else if (animation._playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.setPrivate(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._setPrivate(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._setPrivate(key, animation._value(diff));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn playing;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic abstract _startAnimation(): void;\n\tprotected abstract _animationTime(): number | null;\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of settings changes\n\t * or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of private settings\n\t * changes or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @ignore\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._settings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return  {any}     Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\treturn this.getRaw(key, fallback);\n\t}\n\n\tprotected _sendKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._settingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _sendPrivateKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._privateSettingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevSettings[key] = old;\n\t\tthis._sendKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\t}\n\n\n\tprotected _stopAnimation<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst animation = this._animatingSettings[key];\n\n\t\tif (animation) {\n\t\t\tdelete this._animatingSettings[key];\n\t\t\tanimation.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._set(key, value);\n\t\tthis._stopAnimation(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tthis._prevSettings[key] = (<any>this._settings)[key];\n\n\t\t\tdelete (<any>this._settings)[key];\n\n\t\t\tthis._sendKeyEvent(key, undefined as any);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\n\t\tthis._stopAnimation(key);\n\t}\n\n\t/**\n\t * Removes all keys;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t */\n\tpublic removeAll(): void {\n\t\t$array.each($object.keys(this._settings), (key) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\n\t/**\n\t * Returns a value of a private setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._privateSettings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevPrivateSettings[key] = old;\n\t\tthis._sendPrivateKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\t}\n\n\tprotected _stopAnimationPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tconst animation = this._animatingPrivateSettings[key];\n\n\t\tif (animation) {\n\t\t\tanimation.stop();\n\t\t\tdelete this._animatingPrivateSettings[key];\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._setPrivate(key, value);\n\t\tthis._stopAnimationPrivate(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tthis._prevPrivateSettings[key] = (<any>this._privateSettings)[key];\n\n\t\t\tdelete (<any>this._privateSettings)[key];\n\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\n\t\tthis._stopAnimationPrivate(key);\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: Partial<this[\"_settings\"]>) {\n\t\t$object.each(settings, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t/**\n\t * Animates setting values from current/start values to new ones.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\n\t * @param   options  Animation options\n\t * @return           Animation object\n\t */\n\tpublic animate<Key extends keyof this[\"_settings\"]>(options: AnimationOptions<Key, this[\"_settings\"][Key]>): Animation<this[\"_settings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.get(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.set(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.set(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.set(key, from);\n\n\t\t\t\tconst animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic animatePrivate<Key extends keyof this[\"_privateSettings\"]>(options: AnimationOptions<Key, this[\"_privateSettings\"][Key]>): Animation<this[\"_privateSettings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.getPrivate(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.setPrivate(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.setPrivate(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.setPrivate(key, from);\n\n\t\t\t\tconst animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\tprotected _dispose() {}\n\n\t/**\n\t * Returns `true` if this element is disposed.\n\t *\n\t * @return Disposed\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes this object.\n\t */\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * Base class.\n *\n * @important\n */\nexport class Entity extends Settings implements IDisposer {\n\tpublic _root: Root;\n\n\tpublic _user_id:any; // for testing purposes\n\n\tdeclare public _settings: IEntitySettings;\n\tdeclare public _privateSettings: IEntityPrivate;\n\tdeclare public _events: IEntityEvents;\n\n\tpublic states: States<this> = new States(this);\n\tpublic adapters: Adapters<this> = new Adapters(this);\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = this._createEvents();\n\n\tprotected _userPrivateProperties: Dirty<this[\"_privateSettings\"]> = {};\n\n\tpublic _dirty: Dirty<this[\"_settings\"]> = {};\n\tpublic _dirtyPrivate: Dirty<this[\"_privateSettings\"]> = {};\n\n\tprotected _template: Template<this> | undefined;\n\n\t// Templates for the themes\n\tprotected _templates: Array<Template<this>> = [];\n\n\t// Internal templates which can be overridden by the user's templates\n\tprotected _internalTemplates: Array<Template<this>>;\n\n\t// Default themes which can be overridden by the user's themes\n\tpublic _defaultThemes: Array<Theme> = [];\n\n\t// Disposers for all of the templates\n\tprotected _templateDisposers: Array<IDisposer> = [];\n\n\tprotected _disposers: Array<IDisposer> = [];\n\n\t// Whether the template setup function should be run\n\tprotected _runSetup: boolean = true;\n\n\tpublic static className: string = \"Entity\";\n\tpublic static classNames: Array<string> = [\"Entity\"];\n\n\tprotected _disposerProperties: { [Key in keyof this[\"_settings\"]]?: Array<IDisposer> } = {};\n\n\t/**\n\t * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\n\t *\n\t * Use static method `Class.new()` instead.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @ignore\n\t */\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(settings);\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\t\tthis._root = root;\n\t\tthis._internalTemplates = templates as Array<Template<this>>;\n\n\t\tif (settings.id) {\n\t\t\tthis._registerId(settings.id);\n\t\t}\n\t}\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], template?: Template<T>): T {\n\t\tconst x = (new this(root, settings, true)) as T;\n\t\tx._template = template;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tstatic _new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], templates: Array<Template<T>> = []): T {\n\t\tconst x = (new this(root, settings, true, templates)) as T;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._checkDirty();\n\n\t\tlet shouldApply = false;\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tif (shouldApply) {\n\t\t\tthis._applyTemplates(false);\n\t\t}\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\t}\n\n\t// This is the same as _afterNew, except it also applies the themes.\n\t// This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n\tprotected _afterNewApplyThemes() {\n\t\tthis._checkDirty();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\n\t\tthis._applyThemes();\n\t}\n\n\tprotected _createEvents(): EventDispatcher<Events<this, this[\"_events\"]>> {\n\t\treturn new EventDispatcher();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get classNames(): Array<string> {\n\t\treturn (this.constructor as any).classNames;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get className(): string {\n\t\treturn (this.constructor as any).className;\n\t}\n\n\tprotected _setDefaults(){\n\n\t}\n\n\tpublic _setDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!(key in this._settings)) {\n\t\t\tsuper.set(key, value);\n\t\t}\n\t}\n\n\tpublic _setRawDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!(key in this._settings)) {\n\t\t\tsuper.setRaw(key, value);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tthis._dirty[key] = false;\n\t\t});\n\n\t\t$object.keys(this._dirtyPrivate).forEach((key) => {\n\t\t\tthis._dirtyPrivate[key] = false;\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDirty<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn !!this._dirty[key];\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isPrivateDirty<Key extends keyof this[\"_privateSettings\"]>(key: Key): boolean {\n\t\treturn !!this._dirtyPrivate[key];\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tthis._dirty[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tthis._dirtyPrivate[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\t/**\n\t * Checks if element is of certain class (or inherits one).\n\t *\n\t * @param   type  Class name to check\n\t * @return {boolean} Is of class?\n\t */\n\tpublic isType<A>(type: string): this is A {\n\t\treturn this.classNames.indexOf(type) !== -1;\n\t}\n\n\tprotected _pushPropertyDisposer<Key extends keyof this[\"_settings\"], D extends IDisposer>(key: Key, disposer: D): D {\n\t\tlet disposers = this._disposerProperties[key];\n\n\t\tif (disposers === undefined) {\n\t\t\tdisposers = this._disposerProperties[key] = [];\n\t\t}\n\n\t\tdisposers.push(disposer);\n\n\t\treturn disposer;\n\t}\n\n\tprotected _disposeProperty<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst disposers = this._disposerProperties[key];\n\n\t\tif (disposers !== undefined) {\n\t\t\t$array.each(disposers!, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\n\t\t\tdelete this._disposerProperties[key];\n\t\t}\n\t}\n\n\t/**\n\t * @todo needs description\n\t * @param  value  Template\n\t */\n\tpublic set template(value: Template<this> | undefined) {\n\t\tconst template = this._template;\n\n\t\tif (template !== value) {\n\t\t\tthis._template = value;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._removeObjectTemplate(this);\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tvalue._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\tpublic get template(): Template<this> | undefined {\n\t\treturn this._template;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tthis._root._addDirtyEntity(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this._root.animationTime;\n\t}\n\n\tpublic _applyState(_name: string): void { }\n\tpublic _applyStateAnimated(_name: string, _duration?: number): void { }\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this.adapters.fold(key, (<any>this._settings)[key]);\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userProperties[key] = true;\n\t\treturn super.set(key, value);\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userProperties[key] = true;\n\t\tsuper.setRaw(key, value);\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic _setSoft<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tif(!this._userProperties[key]){\n\t\t\treturn super.set(key, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userProperties[key];\n\t\tthis._removeTemplateProperty(key);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userPrivateProperties[key] = true;\n\t\treturn super.setPrivate(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userPrivateProperties[key] = true;\n\t\tsuper.setPrivateRaw(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tdelete this._userPrivateProperties[key];\n\t\tthis._removeTemplatePrivateProperty(key);\n\t}\n\n\tpublic _setTemplateProperty<Key extends keyof this[\"_settings\"]>(template: Template<this>, key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(template: Template<this>, key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplateProperty<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.set(key, match._settings[key]!);\n\n\t\t\t} else {\n\t\t\t\tsuper.remove(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.setPrivate(key, match._privateSettings[key]);\n\n\t\t\t} else {\n\t\t\t\tsuper.removePrivate(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _walkParents(f: (parent: Entity) => void): void {\n\t\tf(this._root._rootContainer);\n\t\tf(this);\n\t}\n\n\t// TODO faster version of this method which is specialized to just 1 key\n\tpublic _applyStateByKey(name: string): void {\n\t\tconst other = this.states.create(name, {});\n\t\tconst seen: Dirty<this[\"_settings\"]> = {};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tconst state = template.states.lookup(name);\n\n\t\t\tif (state) {\n\t\t\t\tstate._apply(other, seen);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(other._settings, (key) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tother.remove(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _applyTemplate(template: Template<this>, state: ApplyState<this>): void {\n\t\tthis._templateDisposers.push(template._apply(this, state));\n\n\t\t$object.each(template._settings, (key, value) => {\n\t\t\tif (!state.settings[key] && !this._userProperties[key]) {\n\t\t\t\tstate.settings[key] = true;\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(template._privateSettings, (key, value) => {\n\t\t\tif (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\n\t\t\t\tstate.privateSettings[key] = true;\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t});\n\n\t\tif (this._runSetup && template.setup) {\n\t\t\tthis._runSetup = false;\n\t\t\ttemplate.setup(this);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the closure with each template and returns the first template which is true\n\t */\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tif (this._template) {\n\t\t\tif (f(this._template)) {\n\t\t\t\treturn this._template;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _eachTemplate(f: (template: Template<this>) => void): void {\n\t\tthis._findStaticTemplate((template) => {\n\t\t\tf(template);\n\t\t\treturn false;\n\t\t});\n\n\t\t// _internalTemplates is sorted with most specific to the right\n\t\t$array.eachReverse(this._internalTemplates, f);\n\n\t\t// _templates is sorted with most specific to the left\n\t\t$array.each(this._templates, f);\n\t}\n\n\tpublic _applyTemplates(remove: boolean = true): void {\n\t\tif (remove) {\n\t\t\tthis._disposeTemplates();\n\t\t}\n\n\t\tconst state: ApplyState<this> = {\n\t\t\tsettings: {},\n\t\t\tprivateSettings: {},\n\t\t\tstates: {},\n\t\t};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tthis._applyTemplate(template, state);\n\t\t});\n\n\t\tif (remove) {\n\t\t\t$object.each(this._settings, (key) => {\n\t\t\t\tif (!this._userProperties[key] && !state.settings[key]) {\n\t\t\t\t\tsuper.remove(key);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._privateSettings, (key) => {\n\t\t\t\tif (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\n\t\t\t\t\tsuper.removePrivate(key);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _findTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tconst value = this._findStaticTemplate(f);\n\n\t\tif (value === undefined) {\n\t\t\t// _internalTemplates is sorted with most specific to the right\n\t\t\tconst value = $array.findReverse(this._internalTemplates, f);\n\n\t\t\tif (value === undefined) {\n\t\t\t\t// _templates is sorted with most specific to the left\n\t\t\t\treturn $array.find(this._templates, f);\n\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprotected _findTemplateByKey<Key extends keyof this[\"_settings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._settings;\n\t\t});\n\t}\n\n\tprotected _findTemplateByPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._privateSettings;\n\t\t});\n\t}\n\n\tprotected _disposeTemplates() {\n\t\t$array.each(this._templateDisposers, (disposer) => {\n\t\t\tdisposer.dispose();\n\t\t});\n\n\t\tthis._templateDisposers.length = 0;\n\t}\n\n\tprotected _removeTemplates() {\n\t\t$array.each(this._templates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._templates.length = 0;\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tlet isConnected = false;\n\n\t\tconst defaults: Array<Array<Theme>> = [];\n\n\t\tlet themes: Array<Array<Theme>> = [];\n\n\t\tconst themeTags: Set<string> = new Set();\n\n\t\tconst tags = this.get(\"themeTagsSelf\");\n\n\t\tif (tags) {\n\t\t\t$array.each(tags, (tag) => {\n\t\t\t\tthemeTags.add(tag);\n\t\t\t});\n\t\t}\n\n\t\tthis._walkParents((entity) => {\n\t\t\tif (entity === this._root._rootContainer) {\n\t\t\t\tisConnected = true;\n\t\t\t}\n\n\t\t\tif (entity._defaultThemes.length > 0) {\n\t\t\t\tdefaults.push(entity._defaultThemes);\n\t\t\t}\n\n\t\t\tconst theme = entity.get(\"themes\");\n\n\t\t\tif (theme) {\n\t\t\t\tthemes.push(theme);\n\t\t\t}\n\n\t\t\tconst tags = entity.get(\"themeTags\");\n\n\t\t\tif (tags) {\n\t\t\t\t$array.each(tags, (tag) => {\n\t\t\t\t\tthemeTags.add(tag);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthemes = defaults.concat(themes);\n\n\t\tthis._removeTemplates();\n\n\t\tif (isConnected) {\n\t\t\t$array.eachReverse(this.classNames, (name) => {\n\t\t\t\tconst allRules: Array<IRule<this>> = [];\n\n\t\t\t\t$array.each(themes, (themes) => {\n\t\t\t\t\t$array.each(themes, (theme) => {\n\t\t\t\t\t\tconst rules = theme._lookupRules<this>(name);\n\n\t\t\t\t\t\tif (rules) {\n\t\t\t\t\t\t\t$array.eachReverse(rules, (rule) => {\n\t\t\t\t\t\t\t\tconst matches = rule.tags.every((tag) => {\n\t\t\t\t\t\t\t\t\treturn themeTags.has(tag);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\t\tconst result = $array.getFirstSortedIndex(allRules, (x) => {\n\t\t\t\t\t\t\t\t\t\tconst order = $order.compare(rule.tags.length, x.tags.length);\n\n\t\t\t\t\t\t\t\t\t\tif (order === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn $order.compareArray(rule.tags, x.tags, $order.compare);\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn order;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tallRules.splice(result.index, 0, rule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$array.each(allRules, (rule) => {\n\t\t\t\t\tthis._templates.push(rule.template);\n\t\t\t\t\trule.template._setObjectTemplate(this);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tthis._applyTemplates();\n\n\t\tif (isConnected) {\n\t\t\t// This causes it to only run the setup function the first time that the themes are applied\n\t\t\tthis._runSetup = false;\n\t\t}\n\n\t\treturn isConnected;\n\t}\n\n\tpublic _changed(): void { }\n\n\tpublic _beforeChanged(): void {\n\n\t\tif (this.isDirty(\"id\")) {\n\t\t\tconst id = this.get(\"id\")!;\n\t\t\tif (id) {\n\t\t\t\tthis._registerId(id);\n\t\t\t}\n\n\t\t\tconst prevId = this._prevSettings.id;\n\t\t\tif(prevId) {\n\t\t\t\tdelete registry.entitiesById[prevId];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _registerId(id: string): void {\n\t\tif (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\n\t\t\tthrow new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n\t\t}\n\t\tregistry.entitiesById[id] = this;\n\t}\n\n\tpublic _afterChanged(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._removeTemplates();\n\t\tthis._disposeTemplates();\n\n\t\tthis.events.dispose();\n\n\t\tthis._disposers.forEach((x) => {\n\t\t\tx.dispose();\n\t\t});\n\n\t\t$object.each(this._disposerProperties, (_, disposers) => {\n\t\t\t$array.each(disposers, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t});\n\n\t\tconst id = this.get(\"id\")!;\n\t\tif (id) {\n\t\t\tdelete registry.entitiesById[id];\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a \"disposable\" timeout.\n\t *\n\t * @param   fn     Callback\n\t * @param   delay  Delay in milliseconds\n\t * @return         Timeout disposer\n\t */\n\tpublic setTimeout(fn: () => void, delay: number): IDisposer {\n\t\tconst id = setTimeout(() => {\n\t\t\tthis.removeDispose(disposer);\n\t\t\tfn();\n\t\t}, delay);\n\n\t\tconst disposer = new Disposer(() => {\n\t\t\tclearTimeout(id);\n\t\t});\n\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeDispose(target: IDisposer): void {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet index = $array.indexOf(this._disposers, target);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._disposers.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\ttarget.dispose();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hasTag(tag: string): boolean {\n\t\treturn $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addTag(tag: string): void {\n\t\tif (!this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\ttags.push(tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeTag(tag: string): void {\n\t\tif (this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\t$array.remove(tags, tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\tprotected _t(text: any, locale?: ILocale, ...rest: Array<string>){\n\t\treturn this._root.language.translate(text, locale, ...rest);\n\t}\n\n\t/**\n\t * An instance of [[Root]] object.\n\t *\n\t * @readonly\n\t * @since 5.0.6\n\t * @return Root object\n\t */\n\tpublic get root(): Root {\n\t\treturn this._root;\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}