{"ast":null,"code":"/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { BaseObjectEvents } from \"../Base\";\nimport { registry } from \"../Registry\";\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\nvar Validatable = /** @class */function (_super) {\n  __extends(Validatable, _super);\n  function Validatable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Is invalid and should be revalidated?\r\n     */\n    _this._validateDisposer = null;\n    return _this;\n  }\n  /**\r\n   * Invalidates the element, so that it can re-validate/redraw itself in the\r\n   * next cycle.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Validatable.prototype.invalidate = function () {\n    if (this._validateDisposer === null) {\n      this._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\n    }\n  };\n  /**\r\n   * Validates itself.\r\n   *\r\n   * Most probably the extending class will have an overriding `validate()`\r\n   * method which will do actual work, as well as call this method using\r\n   * `super.validate()`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Validatable.prototype.validate = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n      this._validateDisposer = null;\n    }\n  };\n  Validatable.prototype.dispose = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n      this._validateDisposer = null;\n    }\n    _super.prototype.dispose.call(this);\n  };\n  return Validatable;\n}(BaseObjectEvents);\nexport { Validatable };","map":{"version":3,"mappings":"AAAA;;;;;AAKA;;;;;;AAMA,SAASA,gBAAgB,QAA2B,SAAS;AAE7D,SAASC,QAAQ,QAAQ,aAAa;AAQtC;;;;;;AAMA;EAAiCC;EAAjC;IAAA;IAEC;;;IAGQC,uBAAiB,GAAqB,IAAI;;EAsCnD;EApCC;;;;;;EAMOC,gCAAU,GAAjB;IACC,IAAI,IAAI,CAACC,iBAAiB,KAAK,IAAI,EAAE;MACpC,IAAI,CAACA,iBAAiB,GAAGJ,QAAQ,CAACK,MAAM,CAACC,EAAE,CAAC,WAAW,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAAC;;EAE/E,CAAC;EAED;;;;;;;;;EASOJ,8BAAQ,GAAf;IACC,IAAI,IAAI,CAACC,iBAAiB,KAAK,IAAI,EAAE;MACpC,IAAI,CAACA,iBAAiB,CAACI,OAAO,EAAE;MAChC,IAAI,CAACJ,iBAAiB,GAAG,IAAI;;EAE/B,CAAC;EAEMD,6BAAO,GAAd;IACC,IAAI,IAAI,CAACC,iBAAiB,KAAK,IAAI,EAAE;MACpC,IAAI,CAACA,iBAAiB,CAACI,OAAO,EAAE;MAChC,IAAI,CAACJ,iBAAiB,GAAG,IAAI;;IAG9BK,iBAAMD,OAAO,WAAE;EAChB,CAAC;EACF,kBAAC;AAAD,CAAC,CA3CgCT,gBAAgB","names":["BaseObjectEvents","registry","__extends","_this","Validatable","_validateDisposer","events","on","validate","dispose","_super"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\utils\\Validatable.ts"],"sourcesContent":["/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * Events.\r\n */\r\nexport interface IValidatableEvents extends IBaseObjectEvents { }\r\n\r\n\r\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Validatable extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Is invalid and should be revalidated?\r\n\t */\r\n\tprivate _validateDisposer: IDisposer | null = null;\r\n\r\n\t/**\r\n\t * Invalidates the element, so that it can re-validate/redraw itself in the\r\n\t * next cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tif (this._validateDisposer === null) {\r\n\t\t\tthis._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates itself.\r\n\t *\r\n\t * Most probably the extending class will have an overriding `validate()`\r\n\t * method which will do actual work, as well as call this method using\r\n\t * `super.validate()`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this._validateDisposer !== null) {\r\n\t\t\tthis._validateDisposer.dispose();\r\n\t\t\tthis._validateDisposer = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tif (this._validateDisposer !== null) {\r\n\t\t\tthis._validateDisposer.dispose();\r\n\t\t\tthis._validateDisposer = null;\r\n\t\t}\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}