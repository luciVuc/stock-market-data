{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { List } from \"./List\";\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\nvar ListData = /** @class */function (_super) {\n  __extends(ListData, _super);\n  function ListData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * An optional processor for data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n     */\n    Object.defineProperty(_this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(ListData.prototype, \"incrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(ListData.prototype, \"decrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(ListData.prototype, \"_onPush\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (newValue) {\n      if (this.processor) {\n        this.processor.processRow(newValue);\n        //console.log(newValue)\n      }\n\n      _super.prototype._onPush.call(this, newValue);\n    }\n  });\n  Object.defineProperty(ListData.prototype, \"_onInsertIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (index, newValue) {\n      if (this.processor) {\n        this.processor.processRow(newValue);\n      }\n      _super.prototype._onInsertIndex.call(this, index, newValue);\n    }\n  });\n  Object.defineProperty(ListData.prototype, \"_onSetIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (index, oldValue, newValue) {\n      if (this.processor) {\n        this.processor.processRow(newValue);\n      }\n      _super.prototype._onSetIndex.call(this, index, oldValue, newValue);\n    }\n  });\n  return ListData;\n}(List);\nexport { ListData };\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\nvar JsonData = /** @class */function () {\n  function JsonData(value) {\n    Object.defineProperty(this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_value\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._value = value;\n  }\n  Object.defineProperty(JsonData.prototype, \"incrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(JsonData.prototype, \"decrementRef\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  return JsonData;\n}();\nexport { JsonData };","map":{"version":3,"mappings":";AACA,SAASA,IAAI,QAAQ,QAAQ;AAiB7B;;;;;AAKA;EAAiCC;EAAjC;IAAA;IAYC;;;;;IAKAC;;;;;;;EAuBD;EAtCC;;;;;;;WAGA,aAA8B;;EAE9B;;;;;;;WAGA,aAA8B;;;;;;WAS9B,UAAkBC,QAAW;MAC5B,IAAI,IAAI,CAACC,SAAS,EAAE;QACnB,IAAI,CAACA,SAAS,CAACC,UAAU,CAACF,QAAQ,CAAC;QACnC;;;MAEDG,iBAAMC,OAAO,YAACJ,QAAQ,CAAC;IACxB;;;;;;WAEA,UAAyBK,KAAa,EAAEL,QAAW;MAClD,IAAI,IAAI,CAACC,SAAS,EAAE;QACnB,IAAI,CAACA,SAAS,CAACC,UAAU,CAACF,QAAQ,CAAC;;MAEpCG,iBAAMG,cAAc,YAACD,KAAK,EAAEL,QAAQ,CAAC;IACtC;;;;;;WAEA,UAAsBK,KAAa,EAAEE,QAAW,EAAEP,QAAW;MAC5D,IAAI,IAAI,CAACC,SAAS,EAAE;QACnB,IAAI,CAACA,SAAS,CAACC,UAAU,CAACF,QAAQ,CAAC;;MAEpCG,iBAAMK,WAAW,YAACH,KAAK,EAAEE,QAAQ,EAAEP,QAAQ,CAAC;IAC7C;;EACD,eAAC;AAAD,CAAC,CAxCgCH,IAAI;;AA0CrC;;;;AAIA;EAOC,kBAAYY,KAAQ;IAHpBV;;;;;;IACAA;;;;;;IAGC,IAAI,CAACW,MAAM,GAAGD,KAAK;EACpB;;;;;WARA,aAA8B;;;;;;WAC9B,aAA8B;;EAW/B,eAAC;AAAD,CAAC,EAbD","names":["List","__extends","Object","newValue","processor","processRow","_super","_onPush","index","_onInsertIndex","oldValue","_onSetIndex","value","_value"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\util\\Data.ts"],"sourcesContent":["import type { ICounterRef } from \"./Counter\";\nimport { List } from \"./List\";\nimport type { DataProcessor } from \"./DataProcessor\";\n\n/**\n * Defines interface for a [[List]] with a data processor.\n */\nexport interface IDataWithProcessor {\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tprocessor?: DataProcessor;\n\n}\n\n/**\n * A [[List]] that holds components data.\n * \n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n */\nexport class ListData<T> extends List<T> implements ICounterRef, IDataWithProcessor {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic incrementRef(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic decrementRef(): void { }\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tpublic processor?: DataProcessor;\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t\t//console.log(newValue)\n\t\t}\n\t\tsuper._onPush(newValue);\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onInsertIndex(index, newValue);\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n}\n\n/**\n * @deprecated\n * @todo remove\n */\nexport class JsonData<T> implements ICounterRef, IDataWithProcessor {\n\tpublic incrementRef(): void { }\n\tpublic decrementRef(): void { }\n\n\tpublic processor?: DataProcessor;\n\tprotected _value: T;\n\n\tconstructor(value: T) {\n\t\tthis._value = value;\n\t}\n\n\t// TODO: how do we go about calling processor here?\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}