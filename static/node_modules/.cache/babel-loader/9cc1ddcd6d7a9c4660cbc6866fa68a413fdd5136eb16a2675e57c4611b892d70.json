{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Component } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\n/**\r\n * A base class for all series.\r\n */\nvar Series = /** @class */function (_super) {\n  __extends(Series, _super);\n  function Series() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_aggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_selectionAggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_dataProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_psi\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_pei\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A chart series belongs to.\r\n     */\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * List of bullets to use for the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n     */\n    Object.defineProperty(_this, \"bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    /**\r\n     * A [[Container]] series' bullets are stored in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        position: \"absolute\"\n      })\n    });\n    return _this;\n  }\n  Object.defineProperty(Series.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this.valueFields.push(\"value\");\n      _super.prototype._afterNew.call(this);\n      this.setPrivate(\"customData\", {});\n      this._disposers.push(this.bullets.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"push\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"setIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"insertIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"removeIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"moveIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else {\n          throw new Error(\"Unknown IListEvent type\");\n        }\n      }));\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.bulletsContainer.dispose(); // can be in a different parent\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"startIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.min(this.getPrivate(\"startIndex\", 0), len);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"endIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.min(this.getPrivate(\"endIndex\", len), len);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_handleBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItems) {\n      $array.each(dataItems, function (dataItem) {\n        var bullets = dataItem.bullets;\n        if (bullets) {\n          $array.each(bullets, function (bullet) {\n            bullet.dispose();\n          });\n          dataItem.bullets = undefined;\n        }\n      });\n      this.markDirtyValues();\n    }\n  });\n  /**\r\n   * Looks up and returns a data item by its ID.\r\n   *\r\n   * @param   id  ID\r\n   * @return      Data item\r\n   */\n  Object.defineProperty(Series.prototype, \"getDataItemById\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      return $array.find(this.dataItems, function (dataItem) {\n        return dataItem.get(\"id\") == id;\n      });\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_makeBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n      if (this._shouldMakeBullet(dataItem)) {\n        dataItem.bullets = [];\n        this.bullets.each(function (bulletFunction) {\n          _this._makeBullet(dataItem, bulletFunction);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_shouldMakeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      return true;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_makeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, bulletFunction, index) {\n      var bullet = bulletFunction(this._root, this, dataItem);\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          sprite._setDataItem(dataItem);\n          sprite.setRaw(\"position\", \"absolute\");\n          this.bulletsContainer.children.push(sprite);\n        }\n        bullet._index = index;\n        bullet.series = this;\n        dataItem.bullets.push(bullet);\n      }\n      return bullet;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n      this._aggregatesCalculated = false;\n      this._selectionAggregatesCalculated = false;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._prepareChildren.call(this);\n      var startIndex = this.startIndex();\n      var endIndex = this.endIndex();\n      if (this.isDirty(\"heatRules\")) {\n        this._valuesDirty = true;\n      }\n      if (this.isPrivateDirty(\"baseValueSeries\")) {\n        var baseValueSeries = this.getPrivate(\"baseValueSeries\");\n        if (baseValueSeries) {\n          this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", function () {\n            _this.markDirtyValues();\n          }));\n        }\n      }\n      var calculateAggregates = this.get(\"calculateAggregates\");\n      if (calculateAggregates) {\n        if (this._valuesDirty && !this._dataProcessed) {\n          if (!this._aggregatesCalculated) {\n            this._calculateAggregates(0, this.dataItems.length);\n            this._aggregatesCalculated = true;\n          }\n        }\n        if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\n          if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n            // void\n          } else {\n            this._calculateAggregates(startIndex, endIndex);\n          }\n          this._selectionAggregatesCalculated = true;\n        }\n      }\n      if (this.isDirty(\"tooltip\")) {\n        var tooltip = this.get(\"tooltip\");\n        if (tooltip) {\n          tooltip.hide(0);\n          tooltip.set(\"tooltipTarget\", this);\n        }\n      }\n      if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n        var markerRectangle = void 0;\n        var legendDataItem = this.get(\"legendDataItem\");\n        if (legendDataItem) {\n          markerRectangle = legendDataItem.get(\"markerRectangle\");\n          if (markerRectangle) {\n            if (this.isVisible()) {\n              if (this.isDirty(\"stroke\")) {\n                var stroke = this.get(\"stroke\");\n                markerRectangle.set(\"stroke\", stroke);\n              }\n              if (this.isDirty(\"fill\")) {\n                var fill = this.get(\"fill\");\n                markerRectangle.set(\"fill\", fill);\n              }\n            }\n          }\n        }\n        this.updateLegendMarker(undefined);\n      }\n      if (this.bullets.length > 0) {\n        var startIndex_1 = this.startIndex();\n        var endIndex_1 = this.endIndex();\n        if (endIndex_1 < this.dataItems.length) {\n          endIndex_1++;\n        }\n        for (var i = startIndex_1; i < endIndex_1; i++) {\n          var dataItem = this.dataItems[i];\n          if (!dataItem.bullets) {\n            this._makeBullets(dataItem);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_calculateAggregates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (startIndex, endIndex) {\n      var _this = this;\n      var fields = this._valueFields;\n      if (!fields) {\n        throw new Error(\"No value fields are set for the series.\");\n      }\n      var sum = {};\n      var absSum = {};\n      var count = {};\n      var low = {};\n      var high = {};\n      var open = {};\n      var close = {};\n      var average = {};\n      var previous = {};\n      $array.each(fields, function (key) {\n        sum[key] = 0;\n        absSum[key] = 0;\n        count[key] = 0;\n      });\n      $array.each(fields, function (key) {\n        var change = key + \"Change\";\n        var changePercent = key + \"ChangePercent\";\n        var changePrevious = key + \"ChangePrevious\";\n        var changePreviousPercent = key + \"ChangePreviousPercent\";\n        var changeSelection = key + \"ChangeSelection\";\n        var changeSelectionPercent = key + \"ChangeSelectionPercent\";\n        var openKey = \"valueY\";\n        if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\n          openKey = \"valueX\";\n        }\n        var baseValueSeries = _this.getPrivate(\"baseValueSeries\");\n        for (var i = startIndex; i < endIndex; i++) {\n          var dataItem = _this.dataItems[i];\n          var value = dataItem.get(key);\n          if (value != null) {\n            count[key]++;\n            sum[key] += value;\n            absSum[key] += Math.abs(value);\n            average[key] = sum[key] / count[key];\n            if (low[key] > value || low[key] == null) {\n              low[key] = value;\n            }\n            if (high[key] < value || high[key] == null) {\n              high[key] = value;\n            }\n            close[key] = value;\n            if (open[key] == null) {\n              open[key] = value;\n              previous[key] = value;\n              if (baseValueSeries) {\n                open[openKey] = baseValueSeries._getBase(openKey);\n              }\n            }\n            if (startIndex === 0) {\n              dataItem.setRaw(change, value - open[openKey]);\n              dataItem.setRaw(changePercent, (value - open[openKey]) / open[openKey] * 100);\n            }\n            dataItem.setRaw(changePrevious, value - previous[openKey]);\n            dataItem.setRaw(changePreviousPercent, (value - previous[openKey]) / previous[openKey] * 100);\n            dataItem.setRaw(changeSelection, value - open[openKey]);\n            dataItem.setRaw(changeSelectionPercent, (value - open[openKey]) / open[openKey] * 100);\n            previous[key] = value;\n          }\n        }\n      });\n      $array.each(fields, function (key) {\n        _this.setPrivate(key + \"AverageSelection\", average[key]);\n        _this.setPrivate(key + \"CountSelection\", count[key]);\n        _this.setPrivate(key + \"SumSelection\", sum[key]);\n        _this.setPrivate(key + \"AbsoluteSumSelection\", absSum[key]);\n        _this.setPrivate(key + \"LowSelection\", low[key]);\n        _this.setPrivate(key + \"HighSelection\", high[key]);\n        _this.setPrivate(key + \"OpenSelection\", open[key]);\n        _this.setPrivate(key + \"CloseSelection\", close[key]);\n      });\n      if (startIndex === 0 && endIndex === this.dataItems.length) {\n        $array.each(fields, function (key) {\n          _this.setPrivate(key + \"Average\", average[key]);\n          _this.setPrivate(key + \"Count\", count[key]);\n          _this.setPrivate(key + \"Sum\", sum[key]);\n          _this.setPrivate(key + \"AbsoluteSum\", absSum[key]);\n          _this.setPrivate(key + \"Low\", low[key]);\n          _this.setPrivate(key + \"High\", high[key]);\n          _this.setPrivate(key + \"Open\", open[key]);\n          _this.setPrivate(key + \"Close\", close[key]);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._updateChildren.call(this);\n      this._psi = this.startIndex();\n      this._pei = this.endIndex();\n      if (this.isDirty(\"visible\")) {\n        this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n      }\n      // Apply heat rules\n      var rules = this.get(\"heatRules\");\n      if (this._valuesDirty && rules && rules.length > 0) {\n        $array.each(rules, function (rule) {\n          var minValue = rule.minValue || _this.getPrivate(rule.dataField + \"Low\") || 0;\n          var maxValue = rule.maxValue || _this.getPrivate(rule.dataField + \"High\") || 0;\n          $array.each(rule.target._entities, function (target) {\n            var value = target.dataItem.get(rule.dataField);\n            if (!$type.isNumber(value)) {\n              if (rule.neutral) {\n                target.set(rule.key, rule.neutral);\n              }\n              return;\n            }\n            var percent;\n            if (rule.logarithmic) {\n              percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / (Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E);\n            } else {\n              percent = (value - minValue) / (maxValue - minValue);\n            }\n            if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n              percent = 0.5;\n            }\n            // fixes problems if all values are the same\n            var propertyValue;\n            if ($type.isNumber(rule.min)) {\n              propertyValue = rule.min + (rule.max - rule.min) * percent;\n            } else if (rule.min instanceof Color) {\n              propertyValue = Color.interpolate(percent, rule.min, rule.max);\n            } else if (rule.min instanceof Percent) {\n              propertyValue = percentInterpolate(percent, rule.min, rule.max);\n            }\n            if (rule.customFunction) {\n              rule.customFunction.call(_this, target, minValue, maxValue, value);\n            } else {\n              target.set(rule.key, propertyValue);\n            }\n          });\n        });\n      }\n      if (this.bullets.length > 0) {\n        var count = this.dataItems.length;\n        var startIndex = this.startIndex();\n        var endIndex = this.endIndex();\n        if (endIndex < count) {\n          endIndex++;\n        }\n        if (startIndex > 0) {\n          startIndex--;\n        }\n        for (var i = 0; i < startIndex; i++) {\n          this._hideBullets(this.dataItems[i]);\n        }\n        for (var i = startIndex; i < endIndex; i++) {\n          this._positionBullets(this.dataItems[i]);\n        }\n        for (var i = endIndex; i < count; i++) {\n          this._hideBullets(this.dataItems[i]);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_positionBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n      if (dataItem.bullets) {\n        $array.each(dataItem.bullets, function (bullet) {\n          _this._positionBullet(bullet);\n          var sprite = bullet.get(\"sprite\");\n          if (bullet.get(\"dynamic\")) {\n            if (sprite) {\n              sprite._markDirtyKey(\"fill\");\n              sprite.markDirtySize();\n            }\n            if (sprite instanceof Container) {\n              sprite.walkChildren(function (child) {\n                child._markDirtyKey(\"fill\");\n                child.markDirtySize();\n                if (child instanceof Label) {\n                  child.text.markDirtyText();\n                }\n              });\n            }\n          }\n          if (sprite instanceof Label && sprite.get(\"populateText\")) {\n            sprite.text.markDirtyText();\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_hideBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (dataItem.bullets) {\n        $array.each(dataItem.bullets, function (bullet) {\n          var sprite = bullet.get(\"sprite\");\n          if (sprite) {\n            sprite.setPrivate(\"visible\", false);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bullet) {}\n  });\n  Object.defineProperty(Series.prototype, \"_placeBulletsContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (chart) {\n      chart.bulletsContainer.children.moveValue(this.bulletsContainer);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_removeBulletsContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var bulletsContainer = this.bulletsContainer;\n      if (bulletsContainer.parent) {\n        bulletsContainer.parent.children.removeValue(bulletsContainer);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      //super.disposeDataItem(dataItem); // does nothing\n      var bullets = dataItem.bullets;\n      if (bullets) {\n        $array.each(bullets, function (bullet) {\n          bullet.dispose();\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_getItemReaderLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return \"\";\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(Series.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, bullets;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              bullets = dataItem.bullets;\n              if (bullets) {\n                $array.each(bullets, function (bullet) {\n                  promises.push(bullet.get(\"sprite\").show(duration));\n                });\n              }\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(Series.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, bullets;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              bullets = dataItem.bullets;\n              if (bullets) {\n                $array.each(bullets, function (bullet) {\n                  promises.push(bullet.get(\"sprite\").hide(duration));\n                });\n              }\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(Series.prototype, \"_sequencedShowHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (show, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var startIndex_2, endIndex_2;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.get(\"sequencedInterpolation\")) return [3 /*break*/, 4];\n              if (!$type.isNumber(duration)) {\n                duration = this.get(\"interpolationDuration\", 0);\n              }\n              if (!(duration > 0)) return [3 /*break*/, 2];\n              startIndex_2 = this.startIndex();\n              endIndex_2 = this.endIndex();\n              return [4 /*yield*/, Promise.all($array.map(this.dataItems, function (dataItem, i) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var realDuration, delay;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        realDuration = duration || 0;\n                        if (i < startIndex_2 - 10 || i > endIndex_2 + 10) {\n                          realDuration = 0;\n                        }\n                        delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex_2 - startIndex_2);\n                        return [4 /*yield*/, $time.sleep(delay * (i - startIndex_2))];\n                      case 1:\n                        _a.sent();\n                        if (!show) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.showDataItem(dataItem, realDuration)];\n                      case 2:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                      case 3:\n                        return [4 /*yield*/, this.hideDataItem(dataItem, realDuration)];\n                      case 4:\n                        _a.sent();\n                        _a.label = 5;\n                      case 5:\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              }))];\n\n            case 1:\n              _a.sent();\n              return [3 /*break*/, 4];\n            case 2:\n              return [4 /*yield*/, Promise.all($array.map(this.dataItems, function (dataItem) {\n                if (show) {\n                  return _this.showDataItem(dataItem, 0);\n                } else {\n                  return _this.hideDataItem(dataItem, 0);\n                }\n              }))];\n            case 3:\n              _a.sent();\n              _a.label = 4;\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"updateLegendValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var legendDataItem = dataItem.get(\"legendDataItem\");\n      if (legendDataItem) {\n        var valueLabel = legendDataItem.get(\"valueLabel\");\n        if (valueLabel) {\n          var text = valueLabel.text;\n          var txt = \"\";\n          valueLabel._setDataItem(dataItem);\n          txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n          valueLabel.set(\"text\", txt);\n          text.markDirtyText();\n        }\n        var label = legendDataItem.get(\"label\");\n        if (label) {\n          var text = label.text;\n          var txt = \"\";\n          label._setDataItem(dataItem);\n          txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n          label.set(\"text\", txt);\n          text.markDirtyText();\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"updateLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  Object.defineProperty(Series.prototype, \"_onHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._onHide.call(this);\n      var tooltip = this.getTooltip();\n      if (tooltip) {\n        tooltip.hide();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"hoverDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"unhoverDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"_getBase\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var dataItem = this.dataItems[this.startIndex()];\n      if (dataItem) {\n        return dataItem.get(key);\n      }\n      return 0;\n    }\n  });\n  Object.defineProperty(Series, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Series\"\n  });\n  Object.defineProperty(Series, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Component.classNames.concat([Series.className])\n  });\n  return Series;\n}(Component);\nexport { Series };","map":{"version":3,"mappings":"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","names":["Component","List","Color","percentInterpolate","Percent","$array","$type","$time","p100","Container","Label","__extends","Object","new","_this","_root","width","height","position","valueFields","push","_super","_afterNew","setPrivate","_disposers","bullets","events","onAll","change","type","_handleBullets","dataItems","Error","bulletsContainer","dispose","_dispose","len","length","Math","min","getPrivate","each","dataItem","bullet","undefined","markDirtyValues","id","find","get","_shouldMakeBullet","bulletFunction","_makeBullet","_dataItem","index","sprite","_setDataItem","setRaw","children","_index","series","_clearDirty","_aggregatesCalculated","_selectionAggregatesCalculated","_prepareChildren","startIndex","endIndex","isDirty","_valuesDirty","isPrivateDirty","baseValueSeries","onPrivate","calculateAggregates","_dataProcessed","_calculateAggregates","_psi","_pei","tooltip","hide","set","markerRectangle","legendDataItem","isVisible","stroke","fill","updateLegendMarker","startIndex_1","endIndex_1","i","_makeBullets","fields","_valueFields","sum","absSum","count","low","high","open","close","average","previous","key","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","value","abs","_getBase","_updateChildren","rules","rule","minValue","dataField","maxValue","target","_entities","isNumber","neutral","percent","logarithmic","log","LOG10E","Infinity","propertyValue","max","interpolate","customFunction","call","_hideBullets","_positionBullets","_positionBullet","_markDirtyKey","markDirtySize","walkChildren","child","text","markDirtyText","_bullet","chart","moveValue","parent","removeValue","duration","promises","showDataItem","show","Promise","all","_a","hideDataItem","startIndex_2","endIndex_2","map","realDuration","delay","sleep","valueLabel","txt","label","_onHide","getTooltip","classNames","concat","Series","className"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\render\\Series.ts"],"sourcesContent":["import { Component, IComponentSettings, IComponentPrivate, DataItem, IComponentEvents, IComponentDataItem } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\nimport type { Root } from \"../../core/Root\";\nimport { p100 } from \"../../core/util/Percent\";\nimport type { Chart } from \"./Chart\";\nimport type { Bullet } from \"./Bullet\";\nimport { Container } from \"../../core/render/Container\";\nimport type { Graphics } from \"../../core/render/Graphics\";\nimport type { ILegendDataItem } from \"./Legend\";\nimport type { Template } from \"../../core/util/Template\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport { Label } from \"../../core/render/Label\";\n//import { Animations } from \"../../core/util/Animation\";\n\n/**\n * Defines interface for a heat rule.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n */\nexport interface IHeatRule {\n\n\t/**\n\t * Target template.\n\t */\n\ttarget: Template<any>;\n\n\t/**\n\t * The setting value to use for items if the lowest value.\n\t */\n\tmin: any;\n\n\t/**\n\t * The setting value to use for items if the highest value.\n\t */\n\tmax: any;\n\n\t/**\n\t * The setting value to use for items which do not have value at all.\n\t */\n\tneutral?: any;\t\n\n\t/**\n\t * Which data field to use when determining item's value.\n\t */\n\tdataField: string;\n\n\t/**\n\t * A setting key to set.\n\t */\n\tkey?: string;\n\n\t/**\n\t * Custom lowest value.\n\t */\n\tminValue?: number;\n\n\t/**\n\t * Custom highest value.\n\t */\n\tmaxValue?: number;\n\n\t/**\n\t * Use logarithmic scale when calculating intermediate setting values.\n\t *\n\t * @default false\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * A custom function that will set target element's settings.\n\t *\n\t * Can be used to do custom manipulation on complex objects requiring more\n\t * than modifying a setting.\n\t */\n\tcustomFunction?: (target: Sprite, minValue: number, maxValue: number, value?: any) => void;\n\n}\n\n\nexport interface ISeriesDataItem extends IComponentDataItem {\n\tid?: string;\n\tvalue?: number;\n\tvalueWorking?:number;\n\tvalueChange?: number;\n\tvalueChangePercent?: number;\n\tvalueChangeSelection?: number;\n\tvalueChangeSelectionPercent?: number;\n\tvalueChangePrevious?: number;\n\tvalueChangePreviousPercent?: number;\n\tvalueWorkingOpen?: number;\n\tvalueWorkingClose?: number;\n}\n\nexport interface ISeriesSettings extends IComponentSettings {\n\n\t/**\n\t * Name of the series.\n\t */\n\tname?: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric value of the data item.\n\t *\n\t * Some series use it to display its elements. It can also be used in heat\n\t * rules.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A text template to be used for label in legend.\n\t */\n\tlegendLabelText?: string;\n\n\t/**\n\t * A text template to be used for value label in legend.\n\t */\n\tlegendValueText?: string;\n\n\t/**\n\t * If set to `true` the series initial animation will be played item by item\n\t * rather than all at once.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedInterpolation?:boolean;\n\n\t/**\n\t * A delay in milliseconds to wait before starting animation of next data\n\t * item.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedDelay?:number;\n\n\t/**\n\t * A list of heat rules to apply on series elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n\t */\n\theatRules?:IHeatRule[];\n\n\t/**\n\t * If set to `true`, series will calculate aggregate values, e.g. change\n\t * percent, high, low, etc.\n\t *\n\t * Do not enable unless you are using such aggregate values in tooltips,\n\t * display data fields, heat rules, or similar.\n\t */\n\tcalculateAggregates?: boolean;\n\n\t/**\n\t * Series stroke color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Series fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * A data item representing series in a [[Legend]].\n\t *\n\t * @readonly\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface ISeriesPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: Chart;\n\tstartIndex?: number;\n\tendIndex?: number;\n\n\tvalueAverage?: number;\n\tvalueCount?: number;\n\tvalueSum?: number;\n\tvalueAbsoluteSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n\tvalueOpen?: number;\n\tvalueClose?: number;\n\n\tbaseValueSeries?: Series;\n}\n\nexport interface ISeriesEvents extends IComponentEvents {\n\n}\n\n/**\n * A base class for all series.\n */\nexport abstract class Series extends Component {\n\tpublic static className: string = \"Series\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Series.className]);\n\n\tdeclare public _settings: ISeriesSettings;\n\tdeclare public _privateSettings: ISeriesPrivate;\n\tdeclare public _dataItemSettings: ISeriesDataItem;\n\tdeclare public _events: ISeriesEvents;\n\n\tprotected _aggregatesCalculated: boolean = false;\n\tprotected _selectionAggregatesCalculated: boolean = false;\n\tprotected _dataProcessed: boolean = false;\n\n\tprotected _psi: number | undefined;\n\tprotected _pei: number | undefined;\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tpublic chart:Chart | undefined;\n\n\t/**\n\t * List of bullets to use for the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n\t */\n\tpublic bullets: List<<D extends DataItem<this[\"_dataItemSettings\"]>>(root: Root, series:Series, dataItem: D) => Bullet | undefined> = new List();\n\n\t/**\n\t * A [[Container]] series' bullets are stored in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, {width:p100, height:p100, position:\"absolute\"});\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"value\");\n\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"customData\", {});\n\n\t\tthis._disposers.push(this.bullets.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _dispose(){\n\t\tthis.bulletsContainer.dispose(); // can be in a different parent\n\t\tsuper._dispose();\n\t}\n\n\tpublic startIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"startIndex\", 0), len);\n\t}\n\n\tpublic endIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"endIndex\", len), len)\n\t}\n\n\tprotected _handleBullets(dataItems:Array<DataItem<this[\"_dataItemSettings\"]>>){\n\t\t$array.each(dataItems, (dataItem)=>{\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif(bullets){\n\t\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\t\t})\n\n\t\tthis.markDirtyValues();\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn $array.find(this.dataItems, (dataItem: any) => {\n\t\t\treturn dataItem.get(\"id\") == id;\n\t\t})\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(this._shouldMakeBullet(dataItem)){\n\t\t\tdataItem.bullets = [];\n\n\t\t\tthis.bullets.each((bulletFunction) => {\n\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _shouldMakeBullet(_dataItem: DataItem<this[\"_dataItemSettings\"]>):boolean{\n\t\treturn true;\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction:(root: Root, series:Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?:number):Bullet | undefined{\n\t\tconst bullet = bulletFunction(this._root, this, dataItem);\n\t\tif(bullet){\n\t\t\tlet sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tsprite.setRaw(\"position\", \"absolute\");\n\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t}\n\t\t\tbullet._index = index;\n\t\t\tbullet.series = this;\n\t\t\tdataItem.bullets!.push(bullet);\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._aggregatesCalculated = false;\n\t\tthis._selectionAggregatesCalculated = false;\n\t}\n\n\tpublic _prepareChildren(){\n\t\tsuper._prepareChildren();\n\n\t\tlet startIndex = this.startIndex();\n\t\tlet endIndex = this.endIndex();\n\n\n\t\tif(this.isDirty(\"heatRules\")){\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif(this.isPrivateDirty(\"baseValueSeries\")){\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\t\t\tif(baseValueSeries){\n\t\t\t\tthis._disposers.push(baseValueSeries.onPrivate(\"startIndex\", ()=>{\n\t\t\t\t\tthis.markDirtyValues();\n\t\t\t\t}))\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tconst calculateAggregates = this.get(\"calculateAggregates\");\n\t\tif(calculateAggregates){\n\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\t\tif (!this._aggregatesCalculated) {\n\t\t\t\t\tthis._calculateAggregates(0, this.dataItems.length);\n\t\t\t\t\tthis._aggregatesCalculated = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\n\t\t\t\tif (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n\t\t\t\t\t// void\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._calculateAggregates(startIndex, endIndex);\n\t\t\t\t}\n\n\t\t\t\tthis._selectionAggregatesCalculated = true;\n\t\t\t}\n\t\t}\n\n\t\tif(this.isDirty(\"tooltip\")){\n\t\t\tlet tooltip = this.get(\"tooltip\");\n\t\t\tif(tooltip){\n\t\t\t\ttooltip.hide(0);\n\t\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n\n\t\t\tlet markerRectangle: Graphics | undefined;\n\t\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tmarkerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tif(this.isVisible()){\n\t\t\t\t\t\tif (this.isDirty(\"stroke\")) {\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet stroke = this.get(\"stroke\");\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", stroke);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.isDirty(\"fill\")) {\n\t\t\t\t\t\t\tlet fill = this.get(\"fill\");\t\t\t\t\t\t\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", fill);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateLegendMarker(undefined);\n\t\t}\n\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < this.dataItems.length){\n\t\t\t\tendIndex++;\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (!dataItem.bullets) {\n\t\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _calculateAggregates(startIndex: number, endIndex: number) {\n\t\tlet fields = this._valueFields;\n\n\t\tif (!fields) {\n\t\t\tthrow new Error(\"No value fields are set for the series.\");\n\t\t}\n\n\t\tconst sum: { [index: string]: number } = {};\n\t\tconst absSum: { [index: string]: number } = {};\n\t\tconst count: { [index: string]: number } = {};\n\t\tconst low: { [index: string]: number } = {};\n\t\tconst high: { [index: string]: number } = {};\n\t\tconst open: { [index: string]: number } = {};\n\t\tconst close: { [index: string]: number } = {};\n\t\tconst average: { [index: string]: number } = {};\n\t\tconst previous: { [index: string]: number } = {};\n\n\t\t$array.each(fields, (key) => {\n\t\t\tsum[key] = 0;\n\t\t\tabsSum[key] = 0;\n\t\t\tcount[key] = 0;\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tlet change = key + \"Change\";\n\t\t\tlet changePercent = key + \"ChangePercent\";\n\t\t\tlet changePrevious = key + \"ChangePrevious\";\n\t\t\tlet changePreviousPercent = key + \"ChangePreviousPercent\";\n\t\t\tlet changeSelection = key + \"ChangeSelection\";\n\t\t\tlet changeSelectionPercent = key + \"ChangeSelectionPercent\";\n\n\t\t\tlet openKey = \"valueY\";\n\n\t\t\tif(key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\"){\n\t\t\t\topenKey = \"valueX\";\n\t\t\t}\n\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\n\t\t\t\tlet value = dataItem.get(<any>key)\n\n\t\t\t\tif (value != null) {\n\t\t\t\t\tcount[key]++;\n\t\t\t\t\tsum[key] += value;\n\n\t\t\t\t\tabsSum[key] += Math.abs(value);\n\n\t\t\t\t\taverage[key] = sum[key] / count[key];\n\n\t\t\t\t\tif (low[key] > value || low[key] == null) {\n\t\t\t\t\t\tlow[key] = value;\n\t\t\t\t\t}\n\t\t\t\t\tif (high[key] < value || high[key] == null) {\n\t\t\t\t\t\thigh[key] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tclose[key] = value;\n\n\t\t\t\t\tif (open[key] == null) {\n\t\t\t\t\t\topen[key] = value;\n\t\t\t\t\t\tprevious[key] = value;\n\n\t\t\t\t\t\tif(baseValueSeries){\n\t\t\t\t\t\t\topen[openKey] = baseValueSeries._getBase(openKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startIndex === 0) {\n\t\t\t\t\t\tdataItem.setRaw(<any>(change), value - open[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\n\t\t\t\t\tprevious[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tthis.setPrivate(<any>(key + \"AverageSelection\"), average[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CountSelection\"), count[key]);\n\t\t\tthis.setPrivate(<any>(key + \"SumSelection\"), sum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSumSelection\"), absSum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"LowSelection\"), low[key]);\n\t\t\tthis.setPrivate(<any>(key + \"HighSelection\"), high[key]);\n\t\t\tthis.setPrivate(<any>(key + \"OpenSelection\"), open[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CloseSelection\"), close[key]);\n\t\t})\n\n\t\tif (startIndex === 0 && endIndex === this.dataItems.length) {\n\t\t\t$array.each(fields, (key) => {\n\t\t\t\tthis.setPrivate(<any>(key + \"Average\"), average[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Count\"), count[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Sum\"), sum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSum\"), absSum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Low\"), low[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"High\"), high[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Open\"), open[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Close\"), close[key]);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tthis._psi = this.startIndex();\n\t\tthis._pei = this.endIndex();\n\n\t\tif(this.isDirty(\"visible\")){\n\t\t\tthis.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n\t\t}\n\n\n\t\t// Apply heat rules\n\t\tconst rules = this.get(\"heatRules\");\n\n\t\tif (this._valuesDirty && rules && rules.length > 0) {\t\t\t\n\t\t\t$array.each(rules, (rule) => {\n\t\t\t\tconst minValue = rule.minValue || this.getPrivate(<any>(rule.dataField + \"Low\")) || 0;\n\t\t\t\tconst maxValue = rule.maxValue || this.getPrivate(<any>(rule.dataField + \"High\")) || 0;\n\t\t\t\t\n\n\t\t\t\t$array.each(rule.target._entities, (target) => {\n\t\t\t\t\tconst value = target.dataItem.get(rule.dataField);\n\n\t\t\t\t\tif (!$type.isNumber(value)) {\n\t\t\t\t\t\tif(rule.neutral){\n\t\t\t\t\t\t\ttarget.set(rule.key, rule.neutral);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet percent: number;\n\t\t\t\t\tif (rule.logarithmic) {\n\t\t\t\t\t\tpercent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpercent = (value - minValue) / (maxValue - minValue);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n\t\t\t\t\t\tpercent = 0.5;\n\t\t\t\t\t}\n\n\t\t\t\t\t// fixes problems if all values are the same\n\t\t\t\t\tlet propertyValue;\n\t\t\t\t\tif ($type.isNumber(rule.min)) {\n\t\t\t\t\t\tpropertyValue = rule.min + (rule.max - rule.min) * percent;\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Color) {\n\t\t\t\t\t\tpropertyValue = Color.interpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Percent) {\n\t\t\t\t\t\tpropertyValue = percentInterpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rule.customFunction) {\n\t\t\t\t\t\trule.customFunction.call(this, target, minValue, maxValue, value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttarget.set(rule.key, propertyValue);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet count = this.dataItems.length;\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < count){\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis._positionBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = endIndex; i < count; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tif(dataItem.bullets){\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif(bullet.get(\"dynamic\")){\n\n\t\t\t\t\tif(sprite){\n\t\t\t\t\t\tsprite._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\tsprite.markDirtySize();\n\t\t\t\t\t}\n\t\t\t\t\tif(sprite instanceof Container){\n\t\t\t\t\t\tsprite.walkChildren((child)=>{\n\t\t\t\t\t\t\tchild._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\t\tchild.markDirtySize();\n\n\t\t\t\t\t\t\tif(child instanceof Label){\n\t\t\t\t\t\t\t\tchild.text.markDirtyText();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(sprite instanceof Label && sprite.get(\"populateText\" as any)){\n\t\t\t\t\tsprite.text.markDirtyText();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _hideBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (dataItem.bullets) {\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _positionBullet(_bullet: Bullet) {\n\t}\n\n\tpublic _placeBulletsContainer(chart:Chart){\n\t\tchart.bulletsContainer.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer(){\n\t\tconst bulletsContainer = this.bulletsContainer;\n\t\tif(bulletsContainer.parent){\n\t\t\tbulletsContainer.parent.children.removeValue(bulletsContainer)\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t//super.disposeDataItem(dataItem); // does nothing\n\t\t\n\t\tconst bullets = dataItem.bullets;\n\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tbullet.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").show(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").hide(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\n\tprotected async _sequencedShowHide(show: boolean, duration?: number): Promise<void> {\n\t\tif (this.get(\"sequencedInterpolation\")) {\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tconst startIndex = this.startIndex();\n\t\t\t\tconst endIndex = this.endIndex();\n\n\t\t\t\tawait Promise.all($array.map(this.dataItems, async (dataItem, i) => {\n\t\t\t\t\tlet realDuration = duration || 0;\n\n\t\t\t\t\tif (i < startIndex - 10 || i > endIndex + 10) {\n\t\t\t\t\t\trealDuration = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t//let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n\t\t\t\t\tlet delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n\n\t\t\t\t\tawait $time.sleep(delay * (i - startIndex));\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tawait this.showDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tawait this.hideDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait Promise.all($array.map(this.dataItems, (dataItem) => {\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\treturn this.showDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn this.hideDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst legendDataItem = dataItem.get(\"legendDataItem\" as any) as DataItem<ILegendDataItem>;\n\n\t\tif (legendDataItem) {\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tconst text = valueLabel.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tconst text = label.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _onHide(){\n\t\tsuper._onHide();\n\n\t\tconst tooltip = this.getTooltip();\n\t\tif(tooltip){\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic unhoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _getBase(key: any): number {\n\t\tconst dataItem = this.dataItems[this.startIndex()];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(key);\n\t\t}\n\t\treturn 0;\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}