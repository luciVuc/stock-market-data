{"ast":null,"code":"/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Column } from \"./Column\";\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar Column3D = /** @class */function (_super) {\n  __extends(Column3D, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Column3D() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Column3D\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Column3D.prototype.createAssets = function () {\n    this.column3D = this.createChild(Rectangle3D);\n    this.column3D.shouldClone = false;\n    this.column3D.strokeOpacity = 0;\n    // some dirty hack so that if user access column, it won't get error\n    this.column = this.column3D;\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n  Column3D.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n    if (this.column3D) {\n      this.column3D.width = this.pixelWidth;\n      this.column3D.height = this.pixelHeight;\n      if (this.column3D.invalid) {\n        this.column3D.validate();\n      }\n    }\n  };\n  /**\r\n   * Copies all parameters from another [[Column3D]].\r\n   *\r\n   * @param source Source Column3D\r\n   */\n  Column3D.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    if (this.column3D) {\n      this.column3D.copyFrom(source.column3D);\n    }\n  };\n  /**\r\n   * Sets actual `fill` property on the SVG element, including applicable color\r\n   * modifiers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param value  Fill\r\n   */\n  Column3D.prototype.setFill = function (value) {\n    _super.prototype.setFill.call(this, value);\n    this.column.fill = value;\n  };\n  return Column3D;\n}(Column);\nexport { Column3D };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Column3D\"] = Column3D;","map":{"version":3,"mappings":"AAAA;;;;;AAKA;;;;;;AAMA,SAASA,MAAM,QAA2D,UAAU;AACpF,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,QAAQ,QAAQ,qBAAqB;AAiC9C;;;;;;AAOA;;;;;;;;AAQA;EAA8BC;EAuB7B;;;EAGA;IAAA,YACCC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,UAAU;;EAC5B;EAEA;;;EAGUC,+BAAY,GAAtB;IACC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACR,WAAW,CAAC;IAC7C,IAAI,CAACO,QAAQ,CAACE,WAAW,GAAG,KAAK;IACjC,IAAI,CAACF,QAAQ,CAACG,aAAa,GAAG,CAAC;IAE/B;IACA,IAAI,CAACC,MAAM,GAAQ,IAAI,CAACJ,QAAQ;EACjC,CAAC;EAED;;;EAGOD,2BAAQ,GAAf;IACCH,iBAAMS,QAAQ,WAAE;IAChB,IAAI,IAAI,CAACL,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,CAACM,KAAK,GAAG,IAAI,CAACC,UAAU;MACrC,IAAI,CAACP,QAAQ,CAACQ,MAAM,GAAG,IAAI,CAACC,WAAW;MACvC,IAAG,IAAI,CAACT,QAAQ,CAACU,OAAO,EAAC;QACxB,IAAI,CAACV,QAAQ,CAACK,QAAQ,EAAE;;;EAG3B,CAAC;EAED;;;;;EAKON,2BAAQ,GAAf,UAAgBY,MAAY;IAC3Bf,iBAAMgB,QAAQ,YAACD,MAAM,CAAC;IACtB,IAAI,IAAI,CAACX,QAAQ,EAAE;MAClB,IAAI,CAACA,QAAQ,CAACY,QAAQ,CAACD,MAAM,CAACX,QAAQ,CAAC;;EAEzC,CAAC;EAED;;;;;;;EAOUD,0BAAO,GAAjB,UAAkBc,KAAwE;IACzFjB,iBAAMkB,OAAO,YAACD,KAAK,CAAC;IACpB,IAAI,CAACT,MAAM,CAACW,IAAI,GAAGF,KAAK;EACzB,CAAC;EACF,eAAC;AAAD,CAAC,CAhF6BrB,MAAM;;AAkFpC;;;;;;AAMAE,QAAQ,CAACsB,iBAAiB,CAAC,UAAU,CAAC,GAAGjB,QAAQ","names":["Column","Rectangle3D","registry","__extends","_super","_this","className","Column3D","column3D","createChild","shouldClone","strokeOpacity","column","validate","width","pixelWidth","height","pixelHeight","invalid","source","copyFrom","value","setFill","fill","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\elements\\Column3D.ts"],"sourcesContent":["/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column3D]].\r\n */\r\nexport interface IColumn3DProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Column3D]].\r\n */\r\nexport interface IColumn3DEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumn3DAdapters extends IColumnAdapters, IColumn3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column3D extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumn3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumn3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumn3DEvents;\r\n\r\n\r\n\t/**\r\n\t * column3D element\r\n\t */\r\n\tpublic column3D: Rectangle3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column3D\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.column3D = this.createChild(Rectangle3D);\r\n\t\tthis.column3D.shouldClone = false;\r\n\t\tthis.column3D.strokeOpacity = 0;\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.column3D;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.width = this.pixelWidth;\r\n\t\t\tthis.column3D.height = this.pixelHeight;\r\n\t\t\tif(this.column3D.invalid){\r\n\t\t\t\tthis.column3D.validate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Column3D]].\r\n\t *\r\n\t * @param source Source Column3D\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.copyFrom(source.column3D);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\t\tthis.column.fill = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column3D\"] = Column3D;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}