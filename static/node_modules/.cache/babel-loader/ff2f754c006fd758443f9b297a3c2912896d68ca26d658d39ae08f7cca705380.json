{"ast":null,"code":"/**\r\n * Zoom out button functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $path from \"../rendering/Path\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IZoomOutButtonEvents} for a list of available events\r\n * @see {@link IZoomOutButtonAdapters} for a list of available Adapters\r\n */\nvar ZoomOutButton = /** @class */function (_super) {\n  __extends(ZoomOutButton, _super);\n  /**\r\n   * Constructor\r\n   */\n  function ZoomOutButton() {\n    var _this =\n    // Init\n    _super.call(this) || this;\n    _this.className = \"ZoomOutButton\";\n    _this.padding(9, 9, 9, 9);\n    //this.dx = - 5;\n    //this.dy = 5;\n    _this.showSystemTooltip = true;\n    var interfaceColors = new InterfaceColorSet();\n    var background = _this.background;\n    background.cornerRadius(20, 20, 20, 20);\n    background.fill = interfaceColors.getFor(\"primaryButton\");\n    background.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\n    background.strokeOpacity = 0;\n    background.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\n    background.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\n    // Create an icon\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    var path = $path.moveTo({\n      x: 0,\n      y: 0\n    });\n    path += $path.lineTo({\n      x: 11,\n      y: 0\n    });\n    icon.path = path;\n    icon.pixelPerfect = true;\n    icon.padding(8, 3, 8, 3);\n    icon.stroke = interfaceColors.getFor(\"primaryButtonText\");\n    _this.icon = icon;\n    // Apply theme\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n  ZoomOutButton.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Zoom Out\");\n    }\n  };\n  return ZoomOutButton;\n}(Button);\nexport { ZoomOutButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"ZoomOutButton\"] = ZoomOutButton;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA2D,UAAU;AACpF,SAASC,MAAM,QAAQ,WAAW;AAElC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,iBAAiB,QAAQ,oCAAoC;AACtE,OAAO,KAAKC,KAAK,MAAM,mBAAmB;AAC1C,OAAO,KAAKC,KAAK,MAAM,uBAAuB;AA4B9C;;;;;;AAOA;;;;;;AAMA;EAAmCC;EAiBlC;;;EAGA;IAAA;IAEC;IACAC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,eAAe;IAEhCD,KAAI,CAACE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxB;IACA;IAEAF,KAAI,CAACG,iBAAiB,GAAG,IAAI;IAE7B,IAAIC,eAAe,GAAG,IAAIT,iBAAiB,EAAE;IAE7C,IAAIU,UAAU,GAAqBL,KAAI,CAACK,UAAU;IAClDA,UAAU,CAACC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvCD,UAAU,CAACE,IAAI,GAAGH,eAAe,CAACI,MAAM,CAAC,eAAe,CAAC;IACzDH,UAAU,CAACI,MAAM,GAAGL,eAAe,CAACI,MAAM,CAAC,qBAAqB,CAAC;IACjEH,UAAU,CAACK,aAAa,GAAG,CAAC;IAE5BL,UAAU,CAACM,MAAM,CAACC,MAAM,CAAC,OAAO,CAAC,CAACC,UAAU,CAACN,IAAI,GAAGH,eAAe,CAACI,MAAM,CAAC,oBAAoB,CAAC;IAChGH,UAAU,CAACM,MAAM,CAACC,MAAM,CAAC,MAAM,CAAC,CAACC,UAAU,CAACN,IAAI,GAAGH,eAAe,CAACI,MAAM,CAAC,qBAAqB,CAAC;IAEhG;IACA,IAAIM,IAAI,GAAW,IAAIrB,MAAM,EAAE;IAC/BqB,IAAI,CAACC,OAAO,GAAGf,KAAI,CAACgB,KAAK,CAACC,GAAG,CAAC,MAAM,CAAC;IAErC,IAAIC,IAAI,GAAGtB,KAAK,CAACuB,MAAM,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAC,CAAE,CAAC;IACvCH,IAAI,IAAItB,KAAK,CAAC0B,MAAM,CAAC;MAAEF,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAC,CAAE,CAAC;IACrCP,IAAI,CAACI,IAAI,GAAGA,IAAI;IAEhBJ,IAAI,CAACS,YAAY,GAAG,IAAI;IACxBT,IAAI,CAACZ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxBY,IAAI,CAACL,MAAM,GAAGL,eAAe,CAACI,MAAM,CAAC,mBAAmB,CAAC;IACzDR,KAAI,CAACc,IAAI,GAAGA,IAAI;IAEhB;IACAd,KAAI,CAACwB,UAAU,EAAE;;EAClB;EAEA;;;;EAIUC,6CAAqB,GAA/B;IACC1B,iBAAM2B,qBAAqB,WAAE;IAC7B,IAAI,CAAC7B,KAAK,CAAC8B,QAAQ,CAAC,IAAI,CAACC,WAAW,CAAC,EAAE;MACtC,IAAI,CAACA,WAAW,GAAG,IAAI,CAACC,QAAQ,CAACC,SAAS,CAAC,UAAU,CAAC;;EAExD,CAAC;EAEF,oBAAC;AAAD,CAAC,CAvEkCtC,MAAM;;AAyEzC;;;;;;AAMAE,QAAQ,CAACqC,iBAAiB,CAAC,eAAe,CAAC,GAAGN,aAAa","names":["Button","Sprite","registry","InterfaceColorSet","$path","$type","__extends","_super","_this","className","padding","showSystemTooltip","interfaceColors","background","cornerRadius","fill","getFor","stroke","strokeOpacity","states","getKey","properties","icon","element","paper","add","path","moveTo","x","y","lineTo","pixelPerfect","applyTheme","ZoomOutButton","applyInternalDefaults","hasValue","readerTitle","language","translate","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\elements\\ZoomOutButton.ts"],"sourcesContent":["/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomOutButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomOutButtonAdapters extends IButtonAdapters, IZoomOutButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IZoomOutButtonEvents} for a list of available events\r\n * @see {@link IZoomOutButtonAdapters} for a list of available Adapters\r\n */\r\nexport class ZoomOutButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomOutButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomOutButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomOutButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ZoomOutButton\";\r\n\r\n\t\tthis.padding(9, 9, 9, 9);\r\n\t\t//this.dx = - 5;\r\n\t\t//this.dy = 5;\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\t\tbackground.fill = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n\t\tbackground.strokeOpacity = 0;\r\n\r\n\t\tbackground.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n\t\tbackground.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: 0, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 11, y: 0 });\r\n\t\ticon.path = path;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(8, 3, 8, 3);\r\n\t\ticon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Zoom Out\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomOutButton\"] = ZoomOutButton;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}