{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\nvar Container = /** @class */function (_super) {\n  __extends(Container, _super);\n  function Container() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    Object.defineProperty(_this, \"_childrenDisplay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    /**\r\n     * List of Container's child elements.\r\n     */\n    Object.defineProperty(_this, \"children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Children(_this)\n    });\n    Object.defineProperty(_this, \"_percentageSizeChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_percentagePositionChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_prevWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_prevHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_vsbd0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_vsbd1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  Object.defineProperty(Container.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterNew.call(this);\n      this._display.addChild(this._childrenDisplay);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      $array.eachReverse(this.allChildren(), function (child) {\n        child.dispose();\n      });\n      if (this.getPrivate(\"htmlElement\")) {\n        this._root._removeHTMLContent(this);\n      }\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      if (this.isDirty(\"interactiveChildren\")) {\n        this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n      }\n      if (this.isDirty(\"layout\")) {\n        this._prevWidth = 0;\n        this._prevHeight = 0;\n        this.markDirtyBounds();\n        if (this._prevSettings.layout) {\n          this.children.each(function (child) {\n            child.removePrivate(\"x\");\n            child.removePrivate(\"y\");\n          });\n        }\n      }\n      if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n        this.children.each(function (child) {\n          child.markDirtyPosition();\n        });\n      }\n      if (this.isDirty(\"maskContent\")) {\n        var childrenDisplay = this._childrenDisplay;\n        var contentMask = this._contentMask;\n        if (this.get(\"maskContent\")) {\n          if (!contentMask) {\n            contentMask = Rectangle.new(this._root, {\n              width: this.width() + .5,\n              height: this.height() + .5\n            });\n            this._contentMask = contentMask;\n            childrenDisplay.addChildAt(contentMask._display, 0);\n            childrenDisplay.mask = contentMask._display;\n          }\n        } else {\n          if (contentMask) {\n            childrenDisplay.removeChild(contentMask._display);\n            childrenDisplay.mask = null;\n            contentMask.dispose();\n            this._contentMask = undefined;\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateSize.call(this);\n      $array.each(this._percentageSizeChildren, function (child) {\n        child._updateSize();\n      });\n      $array.each(this._percentagePositionChildren, function (child) {\n        child.markDirtyPosition();\n        child._updateSize();\n      });\n      this.updateBackground();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"updateBackground\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var background = this.get(\"background\");\n      var bounds = this._localBounds;\n      if (bounds && !this.isHidden()) {\n        var x = bounds.left;\n        var y = bounds.top;\n        var w = bounds.right - x;\n        var h = bounds.bottom - y;\n        var maxWidth = this.get(\"maxWidth\");\n        var maxHeight = this.get(\"maxHeight\");\n        if (maxHeight) {\n          if (h > maxHeight) {\n            h = maxHeight;\n          }\n        }\n        if (maxWidth) {\n          if (w > maxWidth) {\n            w = maxWidth;\n          }\n        }\n        var width = this.width();\n        var height = this.height();\n        if (background) {\n          background.setAll({\n            width: w,\n            height: h,\n            x: x,\n            y: y\n          });\n          if (this._display.interactive) {\n            background._display.interactive = true;\n          }\n        }\n        var contentMask = this._contentMask;\n        if (contentMask) {\n          contentMask.setAll({\n            width: width + .5,\n            height: height + .5\n          });\n        }\n        var verticalScrollbar = this.get(\"verticalScrollbar\");\n        if (verticalScrollbar) {\n          verticalScrollbar.set(\"height\", height);\n          verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n          verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n          var bg = verticalScrollbar.get(\"background\");\n          if (bg) {\n            bg.setAll({\n              width: verticalScrollbar.width(),\n              height: height\n            });\n          }\n          var visible = true;\n          if (this._contentHeight <= height) {\n            visible = false;\n          }\n          verticalScrollbar.setPrivate(\"visible\", visible);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (_super.prototype._applyThemes.call(this)) {\n        this.eachChildren(function (child) {\n          child._applyThemes();\n        });\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyState\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      _super.prototype._applyState.call(this, name);\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.apply(name);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyStateAnimated\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, duration) {\n      _super.prototype._applyStateAnimated.call(this, name, duration);\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.applyAnimate(name, duration);\n        });\n      }\n    }\n  });\n  /**\r\n   * Returns container's inner width (width without padding) in pixels.\r\n   *\r\n   * @return Inner width (px)\r\n   */\n  Object.defineProperty(Container.prototype, \"innerWidth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n    }\n  });\n  /**\r\n   * Returns container's inner height (height without padding) in pixels.\r\n   *\r\n   * @return Inner height (px)\r\n   */\n  Object.defineProperty(Container.prototype, \"innerHeight\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var width = this.get(\"width\");\n      var height = this.get(\"height\");\n      var pWidth = this.getPrivate(\"width\");\n      var pHeight = this.getPrivate(\"height\");\n      var bounds = {\n        left: 0,\n        top: 0,\n        right: this.width(),\n        bottom: this.height()\n      };\n      var layout = this.get(\"layout\");\n      var horizontal = false;\n      var vertical = false;\n      if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n        horizontal = true;\n      }\n      if (layout instanceof VerticalLayout) {\n        vertical = true;\n      }\n      if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n        // void\n      } else {\n        var m = Number.MAX_VALUE;\n        var l_1 = m;\n        var r_1 = -m;\n        var t_1 = m;\n        var b_1 = -m;\n        var paddingLeft = this.get(\"paddingLeft\", 0);\n        var paddingTop = this.get(\"paddingTop\", 0);\n        var paddingRight = this.get(\"paddingRight\", 0);\n        var paddingBottom = this.get(\"paddingBottom\", 0);\n        this.children.each(function (child) {\n          if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n            var childBounds = child.adjustedLocalBounds();\n            var childX = child.x();\n            var childY = child.y();\n            var cl = childX + childBounds.left;\n            var cr = childX + childBounds.right;\n            var ct = childY + childBounds.top;\n            var cb = childY + childBounds.bottom;\n            if (horizontal) {\n              cl -= child.get(\"marginLeft\", 0);\n              cr += child.get(\"marginRight\", 0);\n            }\n            if (vertical) {\n              ct -= child.get(\"marginTop\", 0);\n              cb += child.get(\"marginBottom\", 0);\n            }\n            if (cl < l_1) {\n              l_1 = cl;\n            }\n            if (cr > r_1) {\n              r_1 = cr;\n            }\n            if (ct < t_1) {\n              t_1 = ct;\n            }\n            if (cb > b_1) {\n              b_1 = cb;\n            }\n          }\n        });\n        if (l_1 == m) {\n          l_1 = 0;\n        }\n        if (r_1 == -m) {\n          r_1 = 0;\n        }\n        if (t_1 == m) {\n          t_1 = 0;\n        }\n        if (b_1 == -m) {\n          b_1 = 0;\n        }\n        bounds.left = l_1 - paddingLeft;\n        bounds.top = t_1 - paddingTop;\n        bounds.right = r_1 + paddingRight;\n        bounds.bottom = b_1 + paddingBottom;\n      }\n      this._contentWidth = bounds.right - bounds.left;\n      this._contentHeight = bounds.bottom - bounds.top;\n      if ($type.isNumber(width)) {\n        bounds.left = 0;\n        bounds.right = width;\n      }\n      if ($type.isNumber(pWidth)) {\n        bounds.left = 0;\n        bounds.right = pWidth;\n      }\n      if ($type.isNumber(height)) {\n        bounds.top = 0;\n        bounds.bottom = height;\n      }\n      if ($type.isNumber(pHeight)) {\n        bounds.top = 0;\n        bounds.bottom = pHeight;\n      }\n      this._localBounds = bounds;\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var layout = this.get(\"layout\");\n      if (layout) {\n        layout.updateContainer(this);\n      }\n      _super.prototype._updateBounds.call(this);\n      this.updateBackground();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Container.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.markDirty.call(this);\n      this._root._addDirtyParent(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var innerWidth = this.innerWidth();\n      var innerHeight = this.innerHeight();\n      if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n        var layout = this.get(\"layout\");\n        var horizontal_1 = false;\n        var vertical_1 = false;\n        if (layout) {\n          if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n            horizontal_1 = true;\n          }\n          if (layout instanceof VerticalLayout) {\n            vertical_1 = true;\n          }\n        }\n        $array.each(this._percentageSizeChildren, function (child) {\n          if (!horizontal_1) {\n            var width = child.get(\"width\");\n            if (width instanceof Percent) {\n              child.setPrivate(\"width\", width.value * innerWidth);\n            }\n          }\n          if (!vertical_1) {\n            var height = child.get(\"height\");\n            if (height instanceof Percent) {\n              child.setPrivate(\"height\", height.value * innerHeight);\n            }\n          }\n        });\n        $array.each(this._percentagePositionChildren, function (child) {\n          child.markDirtyPosition();\n          child.markDirtyBounds();\n        });\n        this._prevWidth = innerWidth;\n        this._prevHeight = innerHeight;\n        this._sizeDirty = true;\n        this.updateBackground();\n      }\n      this._handleStates();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      if (this.isDirty(\"html\")) {\n        var html = this.get(\"html\");\n        if (html && html !== \"\") {\n          this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\n        } else {\n          this._root._removeHTMLContent(this);\n        }\n        this._root._positionHTMLElement(this);\n      }\n      if (this.isDirty(\"verticalScrollbar\")) {\n        var verticalScrollbar_1 = this.get(\"verticalScrollbar\");\n        if (verticalScrollbar_1) {\n          verticalScrollbar_1._setParent(this);\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.startGrip);\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.endGrip);\n          this.set(\"maskContent\", true);\n          this.set(\"paddingRight\", verticalScrollbar_1.width() + verticalScrollbar_1.get(\"marginRight\", 0) + verticalScrollbar_1.get(\"marginLeft\", 0));\n          var background = this.get(\"background\");\n          if (!background) {\n            background = this.set(\"background\", Rectangle.new(this._root, {\n              themeTags: [\"background\"],\n              fillOpacity: 0,\n              fill: this._root.interfaceColors.get(\"alternativeBackground\")\n            }));\n          }\n          this._vsbd0 = this.events.on(\"wheel\", function (event) {\n            var wheelEvent = event.originalEvent;\n            // Ignore wheel event if it is happening on a non-chart element, e.g. if\n            // some page element is over the chart.\n            if ($utils.isLocalEvent(wheelEvent, _this)) {\n              wheelEvent.preventDefault();\n            } else {\n              return;\n            }\n            var shiftY = wheelEvent.deltaY / 5000;\n            var start = verticalScrollbar_1.get(\"start\", 0);\n            var end = verticalScrollbar_1.get(\"end\", 1);\n            if (start + shiftY > 0 && end + shiftY < 1) {\n              verticalScrollbar_1.set(\"start\", start + shiftY);\n              verticalScrollbar_1.set(\"end\", end + shiftY);\n            }\n          });\n          this._disposers.push(this._vsbd0);\n          this._vsbd1 = verticalScrollbar_1.events.on(\"rangechanged\", function () {\n            var h = _this._contentHeight;\n            var childrenDisplay = _this._childrenDisplay;\n            var contentMask = _this._contentMask;\n            childrenDisplay.y = -verticalScrollbar_1.get(\"start\") * h;\n            childrenDisplay.markDirtyLayer();\n            if (contentMask) {\n              contentMask._display.y = -childrenDisplay.y;\n              childrenDisplay.mask = contentMask._display;\n            }\n          });\n          this._disposers.push(this._vsbd1);\n          this._display.addChild(verticalScrollbar_1._display);\n        } else {\n          var previous = this._prevSettings.verticalScrollbar;\n          if (previous) {\n            this._display.removeChild(previous._display);\n            if (this._vsbd0) {\n              this._vsbd0.dispose();\n            }\n            if (this._vsbd1) {\n              this._vsbd1.dispose();\n            }\n            var childrenDisplay = this._childrenDisplay;\n            childrenDisplay.y = 0;\n            this.setPrivate(\"height\", undefined);\n            this.set(\"maskContent\", false);\n            this.set(\"paddingRight\", undefined);\n          }\n        }\n      }\n      if (this.isDirty(\"background\")) {\n        // TODO maybe this should dispose ?\n        var previous = this._prevSettings[\"background\"];\n        if (previous) {\n          this._display.removeChild(previous._display);\n        }\n        var background = this.get(\"background\");\n        if (background instanceof Sprite) {\n          background.set(\"isMeasured\", false);\n          background._setParent(this);\n          this._display.addChildAt(background._display, 0);\n        }\n      }\n      if (this.isDirty(\"mask\")) {\n        var mask = this.get(\"mask\");\n        var previous = this._prevSettings[\"mask\"];\n        if (previous) {\n          this._display.removeChild(previous._display);\n          if (previous != mask) {\n            previous.dispose();\n          }\n        }\n        if (mask) {\n          var parent = mask.parent;\n          if (parent) {\n            parent.children.removeValue(mask);\n          }\n          mask._setParent(this);\n          this._display.addChildAt(mask._display, 0);\n          this._childrenDisplay.mask = mask._display;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_processTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._processTemplateField.call(this);\n      this.children.each(function (child) {\n        child._processTemplateField();\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Container.prototype, \"walkChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      this.children.each(function (child) {\n        if (child instanceof Container) {\n          child.walkChildren(f);\n        }\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"eachChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      var background = this.get(\"background\");\n      if (background) {\n        f(background);\n      }\n      var verticalScrollbar = this.get(\"verticalScrollbar\");\n      if (verticalScrollbar) {\n        f(verticalScrollbar);\n      }\n      var mask = this.get(\"mask\");\n      if (mask) {\n        f(mask);\n      }\n      this.children.values.forEach(function (child) {\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"allChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var output = [];\n      this.eachChildren(function (x) {\n        output.push(x);\n      });\n      return output;\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_setDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var updated = dataItem !== this._dataItem;\n      _super.prototype._setDataItem.call(this, dataItem);\n      var html = this.get(\"html\", \"\");\n      if (html && html !== \"\" && updated) {\n        this._root._setHTMLContent(this, populateString(this, html));\n      }\n    }\n  });\n  Object.defineProperty(Container, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Container\"\n  });\n  Object.defineProperty(Container, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Sprite.classNames.concat([Container.className])\n  });\n  return Container;\n}(Sprite);\nexport { Container };","map":{"version":3,"mappings":"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","names":["Children","Percent","Sprite","Rectangle","HorizontalLayout","VerticalLayout","GridLayout","populateString","$array","$type","$utils","__extends","Object","_this","_root","_renderer","makeContainer","_super","_afterNew","_display","addChild","_childrenDisplay","eachReverse","allChildren","child","dispose","getPrivate","_removeHTMLContent","_dispose","_changed","isDirty","interactiveChildren","get","_prevWidth","_prevHeight","markDirtyBounds","_prevSettings","layout","children","each","removePrivate","markDirtyPosition","childrenDisplay","contentMask","_contentMask","new","width","height","addChildAt","mask","removeChild","undefined","_updateSize","_percentageSizeChildren","_percentagePositionChildren","updateBackground","background","bounds","_localBounds","isHidden","x","left","y","top","w","right","h","bottom","maxWidth","maxHeight","setAll","interactive","verticalScrollbar","set","_contentHeight","bg","visible","setPrivate","_applyThemes","eachChildren","name","_applyState","states","apply","duration","_applyStateAnimated","applyAnimate","pWidth","pHeight","horizontal","vertical","m","Number","MAX_VALUE","l_1","r_1","t_1","b_1","paddingLeft","paddingTop","paddingRight","paddingBottom","childBounds","adjustedLocalBounds","childX","childY","cl","cr","ct","cb","_contentWidth","isNumber","updateContainer","_updateBounds","markDirty","_addDirtyParent","innerWidth","innerHeight","horizontal_1","vertical_1","value","_sizeDirty","_handleStates","html","_setHTMLContent","_positionHTMLElement","verticalScrollbar_1","_setParent","removeValue","startGrip","endGrip","themeTags","fillOpacity","fill","interfaceColors","_vsbd0","events","on","event","wheelEvent","originalEvent","isLocalEvent","preventDefault","shiftY","deltaY","start","end","_disposers","push","_vsbd1","markDirtyLayer","previous","parent","_processTemplateField","f","Container","walkChildren","values","forEach","output","dataItem","updated","_dataItem","_setDataItem","classNames","concat","className"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\render\\Container.ts"],"sourcesContent":["import type { Graphics } from \"./Graphics\";\nimport type { Layout } from \"./Layout\";\nimport type { IContainer } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Scrollbar } from \"./Scrollbar\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite, ISpriteSettings, ISpritePrivate, ISpriteEvents } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport type { IDisposer } from \"../util/Disposer\";\n\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n\nexport interface IContainerSettings extends ISpriteSettings {\n\n\t/**\n\t * Left padding in pixels.\n\t */\n\tpaddingLeft?: number;\n\n\t/**\n\t * Right padding in pixels.\n\t */\n\tpaddingRight?: number;\n\n\t/**\n\t * Top padding in pixels.\n\t */\n\tpaddingTop?: number;\n\n\t/**\n\t * Bottom padding in pixels.\n\t */\n\tpaddingBottom?: number;\n\n\t/**\n\t * Background element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Background} for more info\n\t */\n\tbackground?: Graphics;\n\n\t/**\n\t * A method to layout\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Layout} for more info\n\t */\n\tlayout?: Layout | null;\n\n\t/**\n\t * An element to use as a container's mask (clipping region).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Masks} for more info\n\t */\n\tmask?: Graphics | null;\n\n\t/**\n\t * If set to `true` all content going outside the bounds of the container\n\t * will be clipped.\n\t */\n\tmaskContent?: boolean;\n\n\t/**\n\t * If set to `true` all descendants - not just direct children, but every\n\t * element in it - will become \"interactive\".\n\t */\n\tinteractiveChildren?: boolean;\n\n\t/**\n\t * If set to `true`, applying a state on a container will also apply the same\n\t * state on its children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#States} for more info\n\t */\n\tsetStateOnChildren?: boolean;\n\n\t/**\n\t * Setting this to an instance of [[Scrollbar]] will enable vertical\n\t * scrolling of content if it does not fit into the Container.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Scrollbar} for more info\n\t */\n\tverticalScrollbar?: Scrollbar;\n\n\t/**\n\t * If set to `true` its children will be laid out in opposite order.\n\t *\n\t * @since 5.1.1\n\t */\n\treverseChildren?: boolean;\n\n\t/**\n\t * HTML content of the container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/html-content/} for more info\n\t * @since 5.2.11\n\t */\n\thtml?: string;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\nexport interface IContainerPrivate extends ISpritePrivate {\n\n\t/**\n\t * A `<div>` element used for HTML content of the `Container`.\n\t */\n\thtmlElement?: HTMLDivElement;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\n/**\n * A basic element that can have child elements, maintain their layout, and\n * have a background.\n *\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\n * full-fledged charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n * @important\n */\nexport class Container extends Sprite {\n\n\tdeclare public _settings: IContainerSettings;\n\tdeclare public _privateSettings: IContainerPrivate;\n\tdeclare public _events: IContainerEvents;\n\n\tpublic _display: IContainer = this._root._renderer.makeContainer();\n\n\tpublic _childrenDisplay: IContainer = this._root._renderer.makeContainer();\n\n\t/**\n\t * List of Container's child elements.\n\t */\n\tpublic children: Children<Sprite> = new Children(this);\n\n\tpublic _percentageSizeChildren: Array<Sprite> = [];\n\tpublic _percentagePositionChildren: Array<Sprite> = [];\n\n\tpublic static className: string = \"Container\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Container.className]);\n\n\tpublic _prevWidth: number = 0;\n\tpublic _prevHeight: number = 0;\n\n\tprotected _contentWidth: number = 0;\n\tprotected _contentHeight: number = 0;\n\n\tprotected _contentMask: Rectangle | undefined;\n\n\tprotected _vsbd0: IDisposer | undefined;\n\tprotected _vsbd1: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._display.addChild(this._childrenDisplay);\n\t}\n\n\tprotected _dispose() {\n\t\t$array.eachReverse(this.allChildren(), (child) => {\n\t\t\tchild.dispose();\n\t\t});\n\n\t\tif (this.getPrivate(\"htmlElement\")) {\n\t\t\tthis._root._removeHTMLContent(this);\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"interactiveChildren\")) {\n\t\t\tthis._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"layout\")) {\n\t\t\tthis._prevWidth = 0;\n\t\t\tthis._prevHeight = 0;\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this._prevSettings.layout) {\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tchild.removePrivate(\"x\");\n\t\t\t\t\tchild.removePrivate(\"y\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n\t\t\tthis.children.each((child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"maskContent\")) {\n\n\t\t\tconst childrenDisplay = this._childrenDisplay;\n\n\t\t\tlet contentMask = this._contentMask;\n\t\t\tif (this.get(\"maskContent\")) {\n\t\t\t\tif (!contentMask) {\n\t\t\t\t\tcontentMask = Rectangle.new(this._root, {\n\t\t\t\t\t\twidth: this.width() + .5,\n\t\t\t\t\t\theight: this.height() + .5\n\t\t\t\t\t});\n\t\t\t\t\tthis._contentMask = contentMask;\n\t\t\t\t\tchildrenDisplay.addChildAt(contentMask._display, 0);\n\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (contentMask) {\n\t\t\t\t\tchildrenDisplay.removeChild(contentMask._display);\n\t\t\t\t\tchildrenDisplay.mask = null;\t\t\t\t\t\n\t\t\t\t\tcontentMask.dispose();\n\t\t\t\t\tthis._contentMask = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\tchild.markDirtyPosition();\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\tthis.updateBackground();\n\t}\n\n\tprotected updateBackground() {\n\t\tconst background = this.get(\"background\");\n\t\tlet bounds = this._localBounds;\n\n\t\tif (bounds && !this.isHidden()) {\n\t\t\tlet x = bounds.left;\n\t\t\tlet y = bounds.top;\n\t\t\tlet w = bounds.right - x;\n\t\t\tlet h = bounds.bottom - y;\n\n\t\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\t\tlet maxHeight = this.get(\"maxHeight\");\n\n\t\t\tif (maxHeight) {\n\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\th = maxHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (maxWidth) {\n\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\tw = maxWidth;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\n\t\t\tlet width = this.width();\n\t\t\tlet height = this.height();\n\n\t\t\tif (background) {\n\t\t\t\tbackground.setAll({ width: w, height: h, x: x, y: y });\n\t\t\t\tif (this._display.interactive) {\n\t\t\t\t\tbackground._display.interactive = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst contentMask = this._contentMask;\n\t\t\tif (contentMask) {\n\t\t\t\tcontentMask.setAll({ width:width + .5, height:height + .5 });\n\t\t\t}\n\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar.set(\"height\", height);\n\t\t\t\tverticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n\t\t\t\tverticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n\n\t\t\t\tconst bg = verticalScrollbar.get(\"background\");\n\t\t\t\tif (bg) {\n\t\t\t\t\tbg.setAll({ width: verticalScrollbar.width(), height: height })\n\t\t\t\t}\n\n\t\t\t\tlet visible = true;\n\t\t\t\tif (this._contentHeight <= height) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t\tverticalScrollbar.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tif (super._applyThemes()) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild._applyThemes();\n\t\t\t});\n\n\t\t\treturn true;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic _applyState(name: string): void {\n\t\tsuper._applyState(name);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.apply(name);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _applyStateAnimated(name: string, duration?: number): void {\n\t\tsuper._applyStateAnimated(name, duration);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.applyAnimate(name, duration);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns container's inner width (width without padding) in pixels.\n\t *\n\t * @return Inner width (px)\n\t */\n\tpublic innerWidth(): number {\n\t\treturn this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n\t}\n\n\t/**\n\t * Returns container's inner height (height without padding) in pixels.\n\t *\n\t * @return Inner height (px)\n\t */\n\tpublic innerHeight(): number {\n\t\treturn this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n\t}\n\n\tprotected _getBounds() {\n\n\t\tlet width = this.get(\"width\");\n\t\tlet height = this.get(\"height\");\n\t\tlet pWidth = this.getPrivate(\"width\");\n\t\tlet pHeight = this.getPrivate(\"height\");\n\n\t\tlet bounds: IBounds = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: this.width(),\n\t\t\tbottom: this.height(),\n\t\t};\n\n\t\tlet layout = this.get(\"layout\");\n\t\tlet horizontal = false;\n\t\tlet vertical = false;\n\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\thorizontal = true;\n\t\t}\n\n\t\tif (layout instanceof VerticalLayout) {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n\t\t\t// void\n\t\t}\n\t\telse {\n\t\t\tlet m = Number.MAX_VALUE;\n\n\t\t\tlet l = m;\n\t\t\tlet r = -m;\n\t\t\tlet t = m;\n\t\t\tlet b = -m;\n\n\t\t\tconst paddingLeft = this.get(\"paddingLeft\", 0);\n\t\t\tconst paddingTop = this.get(\"paddingTop\", 0);\n\t\t\tconst paddingRight = this.get(\"paddingRight\", 0);\n\t\t\tconst paddingBottom = this.get(\"paddingBottom\", 0);\n\n\t\t\tthis.children.each((child) => {\n\t\t\t\tif (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n\t\t\t\t\tlet childBounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet childX = child.x();\n\t\t\t\t\tlet childY = child.y();\n\t\t\t\t\tlet cl = childX + childBounds.left;\n\t\t\t\t\tlet cr = childX + childBounds.right;\n\t\t\t\t\tlet ct = childY + childBounds.top;\n\t\t\t\t\tlet cb = childY + childBounds.bottom;\n\n\t\t\t\t\tif (horizontal) {\n\t\t\t\t\t\tcl -= child.get(\"marginLeft\", 0);\n\t\t\t\t\t\tcr += child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\tct -= child.get(\"marginTop\", 0);\n\t\t\t\t\t\tcb += child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cl < l) {\n\t\t\t\t\t\tl = cl;\n\t\t\t\t\t}\n\t\t\t\t\tif (cr > r) {\n\t\t\t\t\t\tr = cr;\n\t\t\t\t\t}\n\t\t\t\t\tif (ct < t) {\n\t\t\t\t\t\tt = ct;\n\t\t\t\t\t}\n\t\t\t\t\tif (cb > b) {\n\t\t\t\t\t\tb = cb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (l == m) {\n\t\t\t\tl = 0;\n\t\t\t}\n\n\t\t\tif (r == -m) {\n\t\t\t\tr = 0;\n\t\t\t}\n\n\t\t\tif (t == m) {\n\t\t\t\tt = 0;\n\t\t\t}\n\n\t\t\tif (b == -m) {\n\t\t\t\tb = 0;\n\t\t\t}\n\n\t\t\tbounds.left = l - paddingLeft;\n\t\t\tbounds.top = t - paddingTop;\n\t\t\tbounds.right = r + paddingRight;\n\t\t\tbounds.bottom = b + paddingBottom;\n\t\t}\n\n\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = width;\n\t\t}\n\n\t\tif ($type.isNumber(pWidth)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = pWidth;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = height;\n\t\t}\n\n\t\tif ($type.isNumber(pHeight)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = pHeight;\n\t\t}\n\n\t\tthis._localBounds = bounds;\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst layout = this.get(\"layout\");\n\n\t\tif (layout) {\n\t\t\tlayout.updateContainer(this);\n\t\t}\n\n\t\tsuper._updateBounds();\n\n\t\tthis.updateBackground();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tsuper.markDirty();\n\t\tthis._root._addDirtyParent(this);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst innerWidth = this.innerWidth();\n\t\tconst innerHeight = this.innerHeight();\n\n\t\tif (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout) {\n\t\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t}\n\t\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\t\tif (!horizontal) {\n\t\t\t\t\tlet width = child.get(\"width\");\n\t\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"width\", width.value * innerWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!vertical) {\n\t\t\t\t\tlet height = child.get(\"height\");\n\t\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"height\", height.value * innerHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t\tchild.markDirtyBounds();\n\t\t\t})\n\n\t\t\tthis._prevWidth = innerWidth;\n\t\t\tthis._prevHeight = innerHeight;\n\n\t\t\tthis._sizeDirty = true;\n\t\t\tthis.updateBackground();\n\t\t}\n\n\t\tthis._handleStates();\n\t}\n\n\tpublic _updateChildren() {\n\n\t\tif(this.isDirty(\"html\")){\n\t\t\tconst html = this.get(\"html\");\n\t\t\tif (html && html !== \"\") {\n\t\t\t\tthis._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._removeHTMLContent(this);\n\t\t\t}\n\t\t\tthis._root._positionHTMLElement(this);\n\t\t}\t\t\n\n\t\tif (this.isDirty(\"verticalScrollbar\")) {\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar._setParent(this);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.startGrip);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.endGrip);\n\n\t\t\t\tthis.set(\"maskContent\", true);\n\t\t\t\tthis.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n\n\t\t\t\tlet background = this.get(\"background\");\n\n\t\t\t\tif (!background) {\n\t\t\t\t\tbackground = this.set(\"background\", Rectangle.new(this._root, {\n\t\t\t\t\t\tthemeTags: [\"background\"],\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfill: this._root.interfaceColors.get(\"alternativeBackground\")\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis._vsbd0 = this.events.on(\"wheel\", (event) => {\n\t\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t\t// some page element is over the chart.\n\t\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst shiftY = wheelEvent.deltaY / 5000;\n\t\t\t\t\tconst start = verticalScrollbar.get(\"start\", 0);\n\t\t\t\t\tconst end = verticalScrollbar.get(\"end\", 1);\n\t\t\t\t\tif (start + shiftY > 0 && end + shiftY < 1) {\n\t\t\t\t\t\tverticalScrollbar.set(\"start\", start + shiftY);\n\t\t\t\t\t\tverticalScrollbar.set(\"end\", end + shiftY);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd0);\n\n\t\t\t\tthis._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\n\t\t\t\t\tlet h = this._contentHeight;\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tconst contentMask = this._contentMask;\n\n\t\t\t\t\tchildrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\n\t\t\t\t\tchildrenDisplay.markDirtyLayer();\n\n\t\t\t\t\tif (contentMask) {\n\t\t\t\t\t\tcontentMask._display.y = -childrenDisplay.y;\n\t\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd1);\n\n\t\t\t\tthis._display.addChild(verticalScrollbar._display);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst previous = this._prevSettings.verticalScrollbar\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\t\tif (this._vsbd0) {\n\t\t\t\t\t\tthis._vsbd0.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._vsbd1) {\n\t\t\t\t\t\tthis._vsbd1.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tchildrenDisplay.y = 0;\n\n\t\t\t\t\tthis.setPrivate(\"height\", undefined);\n\t\t\t\t\tthis.set(\"maskContent\", false);\n\t\t\t\t\tthis.set(\"paddingRight\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"background\")) {\n\t\t\t// TODO maybe this should dispose ?\n\t\t\tconst previous = this._prevSettings[\"background\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t}\n\n\t\t\tconst background = this.get(\"background\");\n\t\t\tif (background instanceof Sprite) {\n\t\t\t\tbackground.set(\"isMeasured\", false);\n\t\t\t\tbackground._setParent(this);\n\t\t\t\tthis._display.addChildAt(background._display, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"mask\")) {\n\n\t\t\tconst mask = this.get(\"mask\");\n\n\t\t\tconst previous = this._prevSettings[\"mask\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\tif (previous != mask) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mask) {\n\t\t\t\tvar parent = mask.parent;\n\t\t\t\tif (parent) {\n\t\t\t\t\tparent.children.removeValue(mask);\n\t\t\t\t}\n\n\t\t\t\tmask._setParent(this);\n\t\t\t\tthis._display.addChildAt(mask._display, 0);\n\t\t\t\tthis._childrenDisplay.mask = mask._display;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tsuper._processTemplateField();\n\t\tthis.children.each((child) => {\n\t\t\tchild._processTemplateField();\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic walkChildren(f: (child: Sprite) => void): void {\n\t\tthis.children.each((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tchild.walkChildren(f);\n\t\t\t}\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic eachChildren(f: (child: Sprite) => void): void {\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tf(background);\n\t\t}\n\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\");\n\t\tif (verticalScrollbar) {\n\t\t\tf(verticalScrollbar);\n\t\t}\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tf(mask);\n\t\t}\n\n\t\tthis.children.values.forEach((child) => {\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic allChildren(): Array<Sprite> {\n\t\tconst output: Array<Sprite> = [];\n\n\t\tthis.eachChildren((x) => {\n\t\t\toutput.push(x);\n\t\t});\n\n\t\treturn output;\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst updated = (dataItem !== this._dataItem);\n\t\tsuper._setDataItem(dataItem);\n\t\tconst html = this.get(\"html\", \"\");\n\t\tif (html && html !== \"\" && updated) {\n\t\t\tthis._root._setHTMLContent(this, populateString(this, html));\n\t\t}\n\t}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}