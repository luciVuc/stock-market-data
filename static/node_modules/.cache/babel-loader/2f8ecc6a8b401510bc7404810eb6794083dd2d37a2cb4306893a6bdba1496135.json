{"ast":null,"code":"/**\r\n * Popup class is used to display information over chart area.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport popupCSS from \"./PopupCSS\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { BaseObjectEvents } from \"../Base\";\nimport { getInteraction } from \"../interaction/Interaction\";\nimport { keyboard } from \"../utils/Keyboard\";\nimport { MultiDisposer } from \"../utils/Disposer\";\nimport { getShadowRoot } from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\nimport * as $object from \"../utils/Object\";\n/**\r\n * Shows an HTML popup which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n * @todo Positioning over whole window\r\n */\nvar Popup = /** @class */function (_super) {\n  __extends(Popup, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Popup() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Adapter.\r\n     */\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Holds references to various HTML elements, Popup consists of.\r\n     */\n    _this._elements = {};\n    /**\r\n     * Holdes Interaction objects for various Popup's elements.\r\n     */\n    _this._IOs = {};\n    /**\r\n     * Contents of popup window.\r\n     */\n    _this._content = \"\";\n    /**\r\n     * Title of the popup window.\r\n     */\n    _this._title = \"\";\n    /**\r\n     * Prefix to apply to class names for popup elements.\r\n     */\n    _this._classPrefix = \"ampopup\";\n    /**\r\n     * If set to `true` [[Popup]] will use default styles.\r\n     */\n    _this._defaultStyles = true;\n    /**\r\n     * If set to `true` [[Popup]] will dim out all chart content behind it by\r\n     * showing a semi-transparent fill. (curtain)\r\n     */\n    _this._showCurtain = false;\n    /**\r\n     * Indicates whether popup can be dragged.\r\n     */\n    _this._draggable = true;\n    /**\r\n     * Horizontal position of the content window.\r\n     */\n    _this._align = \"center\";\n    /**\r\n     * Resize popup as images are being loaded.\r\n     */\n    _this._dynamicResize = true;\n    /**\r\n     * Vertical position of the content window.\r\n     */\n    _this._verticalAlign = \"middle\";\n    /**\r\n     * Shift in position of the element. (used for dragging)\r\n     */\n    _this._shift = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * Temporary shift in position of the element. (used for dragging)\r\n     */\n    _this._tempShift = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * A title for screen readers. It is very highly recommended to set that title\r\n     * so that people using screen reader tools can get an immediate summary of\r\n     * the information in the popup.\r\n     */\n    _this._readerTitle = \"\";\n    /**\r\n     * Is popup closable?\r\n     */\n    _this._closable = true;\n    /**\r\n     * Was CSS already loaded?\r\n     */\n    _this._cssLoaded = false;\n    /**\r\n     * If set to other than \"none\" will try to re-adjust the position of the\r\n     * popop to fit within chart container or browser window.\r\n     *\r\n     * @ignore Feature not yet implemented\r\n     * @todo Implement\r\n     */\n    _this._fitTo = \"window\";\n    /**\r\n     * Identifies if this object is a \"template\" and should not be treated as\r\n     * real object that is drawn or actually used in the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    _this.isTemplate = false;\n    /**\r\n     * Indicates if the element was already sized and should not be measured for\r\n     * size again, saving some precious resources.\r\n     */\n    _this._sized = false;\n    _this.className = \"Popup\";\n    return _this;\n  }\n  /**\r\n   * Shows popup window.\r\n   */\n  Popup.prototype.open = function () {\n    if (this.container) {\n      if (this._elements.wrapper) {\n        this.container.appendChild(this._elements.wrapper);\n      }\n      if (this._elements.curtain) {\n        this.container.appendChild(this._elements.curtain);\n        this.showCurtain = this.showCurtain;\n      }\n      this.positionElement();\n      this.dispatchImmediately(\"opened\");\n    }\n  };\n  /**\r\n   * Hides popup window.\r\n   */\n  Popup.prototype.close = function () {\n    if (this._elements.wrapper) {\n      if (this._elements.wrapper.parentElement) {\n        this._elements.wrapper.parentElement.removeChild(this._elements.wrapper);\n      }\n    }\n    if (this._elements.curtain) {\n      if (this._elements.curtain.parentElement) {\n        this._elements.curtain.parentElement.removeChild(this._elements.curtain);\n      }\n    }\n    this.dispatchImmediately(\"closed\");\n    this.releasePointers();\n  };\n  /**\r\n   * Destroy (dispose) popup.\r\n   */\n  Popup.prototype.dispose = function () {\n    this.close();\n    _super.prototype.dispose.call(this);\n  };\n  /**\r\n   * Positions content element in the center of popup based on its actual size.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Popup.prototype.positionElement = function (forceResize) {\n    var _this = this;\n    if (forceResize === void 0) {\n      forceResize = true;\n    }\n    if (!this._elements.wrapper) {\n      return;\n    }\n    setTimeout(function () {\n      if (!_this._elements.wrapper) {\n        return;\n      }\n      if (forceResize || !_this._sized) {\n        _this._elements.wrapper.style.opacity = \"0.01\";\n        _this._elements.wrapper.style.left = \"0\";\n        _this._elements.wrapper.style.top = \"0\";\n        _this._elements.wrapper.style.margin = \"0 0 0 0\";\n        _this._elements.wrapper.style.width = \"\";\n        _this._elements.wrapper.style.height = \"\";\n        var bbox = _this._elements.wrapper.getBoundingClientRect();\n        _this._elements.wrapper.style.width = bbox.width + \"px\";\n        _this._elements.wrapper.style.height = bbox.height + \"px\";\n        _this._sized = true;\n      }\n      // Check for any images that are not yet loaded\n      if (_this.dynamicResize) {\n        var images = _this._elements.wrapper.getElementsByTagName(\"img\");\n        for (var i = 0; i < images.length; i++) {\n          var image = images[i];\n          if (!image.complete) {\n            // Resize popup once again when image is loaded\n            image.addEventListener(\"load\", function () {\n              _this.positionElement(true);\n            });\n            // Do this for one image only as it will be checked again next time\n            // anyway\n            break;\n          }\n        }\n      }\n      setTimeout(function () {\n        if (!_this._elements.wrapper) {\n          return;\n        }\n        var bbox;\n        if ((forceResize || !_this._sized) && _this._bbox) {\n          bbox = _this._bbox;\n        } else {\n          bbox = _this._elements.wrapper.getBoundingClientRect();\n          _this._elements.wrapper.style.opacity = \"\";\n        }\n        // Set horizontal positioning\n        switch (_this.align) {\n          case \"left\":\n            _this._elements.wrapper.style.left = \"0\";\n            _this._elements.wrapper.style.right = \"auto\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\n            break;\n          case \"center\":\n            _this._elements.wrapper.style.left = \"50%\";\n            _this._elements.wrapper.style.right = \"auto\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(Math.round(-bbox.width / 2) + (_this._shift.x + _this._tempShift.x));\n            break;\n          case \"right\":\n            _this._elements.wrapper.style.left = \"auto\";\n            _this._elements.wrapper.style.right = \"0\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\n            break;\n          default:\n            _this._elements.wrapper.style.left = _this.toStyle(_this.left) || \"auto\";\n            _this._elements.wrapper.style.right = _this.toStyle(_this.right) || \"auto\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\n            break;\n        }\n        // Set vertical positioning\n        switch (_this.verticalAlign) {\n          case \"top\":\n            _this._elements.wrapper.style.top = \"0\";\n            _this._elements.wrapper.style.bottom = \"auto\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\n            break;\n          case \"middle\":\n            _this._elements.wrapper.style.top = \"50%\";\n            _this._elements.wrapper.style.bottom = \"auto\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(Math.round(-bbox.height / 2) + (_this._shift.y + _this._tempShift.y));\n            break;\n          case \"bottom\":\n            _this._elements.wrapper.style.top = \"auto\";\n            _this._elements.wrapper.style.bottom = \"0\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\n            break;\n          default:\n            _this._elements.wrapper.style.top = _this.toStyle(_this.top) || \"auto\";\n            _this._elements.wrapper.style.bottom = _this.toStyle(_this.bottom) || \"auto\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\n            break;\n        }\n      }, 1);\n    }, 1);\n  };\n  Popup.prototype.setupDragging = function () {\n    var _this = this;\n    if (this.draggable) {\n      if (!this._IOs.header.events.has(\"drag\")) {\n        this._IOs.header.events.on(\"drag\", function (ev) {\n          _this._tempShift.x = ev.shift.x;\n          _this._tempShift.y = ev.shift.y;\n          _this.positionElement(false);\n        });\n      }\n      if (!this._IOs.header.events.has(\"dragstop\")) {\n        this._IOs.header.events.on(\"dragstop\", function (ev) {\n          _this._shift.x += _this._tempShift.x;\n          _this._shift.y += _this._tempShift.y;\n          _this._tempShift.x = 0;\n          _this._tempShift.y = 0;\n          _this.positionElement(false);\n        });\n      }\n    } else {\n      if (this._IOs.header) {\n        getInteraction().unprepElement(this._IOs.header);\n        if (this._IOs.header.events.has(\"drag\")) {\n          this._IOs.header.events.off(\"drag\");\n        }\n        if (this._IOs.header.events.has(\"dragstop\")) {\n          this._IOs.header.events.off(\"dragstop\");\n        }\n      }\n    }\n  };\n  Popup.prototype.toStyle = function (value) {\n    if (!$type.hasValue(value)) {\n      return null;\n    } else if ($type.isNumber(value)) {\n      return \"\" + value + \"px\";\n    } else {\n      return value.toString();\n    }\n  };\n  Object.defineProperty(Popup.prototype, \"classPrefix\", {\n    /**\r\n     * A prefix that is applied to class names of various popup elements.\r\n     *\r\n     * @return Class name prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"classPrefix\", this._classPrefix);\n    },\n    /**\r\n     * @param value Class name prefix\r\n     */\n    set: function (value) {\n      this._classPrefix = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"classPrefixRaw\", {\n    /**\r\n     * Returns raw prefix (without adapters applied).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Class name prefix\r\n     */\n    get: function () {\n      return this._classPrefix;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"content\", {\n    /**\r\n     * @return Popup content\r\n     */\n    get: function () {\n      return this.adapter.apply(\"content\", this._content);\n    },\n    /**\r\n     * Popup content.\r\n     *\r\n     * Popup content can be any valid HTML, including CSS.\r\n     *\r\n     * @param value Popup content\r\n     */\n    set: function (value) {\n      if (this._content != value) {\n        this._content = value;\n        if (!this._elements.content) {\n          this.createContentElement();\n        }\n        this._elements.content.innerHTML = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Popup.prototype.getClassNames = function () {\n    return this.adapter.apply(\"classNames\", {\n      wrapperClass: this.classPrefix + \"\",\n      headerClass: this.classPrefix + \"-header\",\n      titleClass: this.classPrefix + \"-title\",\n      contentClass: this.classPrefix + \"-content\",\n      insideClass: this.classPrefix + \"-inside\",\n      curtainClass: this.classPrefix + \"-curtain\",\n      closeClass: this.classPrefix + \"-close\"\n    });\n  };\n  /**\r\n   * Creates content element.\r\n   */\n  Popup.prototype.createContentElement = function () {\n    // Check if it's created already\n    if (this._elements.wrapper) {\n      return;\n    }\n    // Get class names for popup elements\n    var classNames = this.getClassNames();\n    // Create content element\n    var wrapper = document.createElement(\"div\");\n    wrapper.className = classNames.contentClass;\n    wrapper.style.opacity = \"0.01\";\n    // Create close button\n    var close = document.createElement(\"a\");\n    close.className = classNames.closeClass;\n    // header title\n    var header = document.createElement(\"div\");\n    header.className = classNames.headerClass;\n    // Content title\n    var title = document.createElement(\"div\");\n    title.innerHTML = this.title;\n    title.className = classNames.titleClass;\n    if (!this.title) {\n      title.style.display = \"none\";\n    }\n    // Content div\n    var content = document.createElement(\"div\");\n    content.className = classNames.insideClass;\n    content.innerHTML = this.content;\n    // Set up events for content\n    this._IOs.wrapper = getInteraction().getInteraction(wrapper);\n    this._IOs.header = getInteraction().getInteraction(header);\n    this._disposers.push(this._IOs.wrapper);\n    // Set hover/out events\n    this._IOs.wrapper.events.on(\"over\", this.disablePointers, this);\n    this._IOs.wrapper.events.on(\"out\", this.releasePointers, this);\n    // Create an InteractionObject for close\n    this._IOs.close = getInteraction().getInteraction(close);\n    this._disposers.push(this._IOs.close);\n    // Hide close for now\n    close.style.visibility = \"hidden\";\n    // Add accessible stuff\n    wrapper.setAttribute(\"role\", \"dialog\");\n    // Add to wrapper\n    header.appendChild(close);\n    header.appendChild(title);\n    wrapper.appendChild(header);\n    wrapper.appendChild(content);\n    this.container.appendChild(wrapper);\n    // Save for later access\n    this._elements.wrapper = wrapper;\n    this._elements.header = header;\n    this._elements.content = content;\n    this._elements.title = title;\n    this._elements.close = close;\n    // Load CSS\n    if (this.defaultStyles) {\n      this.loadDefaultCSS();\n    }\n    // Create curtain as well\n    this.createCurtainElement();\n    // Apply events\n    this.applyEvents();\n    this.applyReaderSettings();\n    // Draggable?\n    this.setupDragging();\n  };\n  Object.defineProperty(Popup.prototype, \"title\", {\n    /**\r\n     * @return Popup title\r\n     */\n    get: function () {\n      return this.adapter.apply(\"title\", this._title);\n    },\n    /**\r\n     * Popup title.\r\n     *\r\n     * Popup title can be any valid HTML, including CSS.\r\n     *\r\n     * @param value  Popup title\r\n     */\n    set: function (value) {\n      if (this._title != value) {\n        this._title = value;\n        if (!this._elements.content) {\n          this.createContentElement();\n        }\n        this._elements.title.innerHTML = value;\n        this.positionElement();\n        this.applyReaderSettings();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"readerTitle\", {\n    /**\r\n     * @return Popup content\r\n     */\n    get: function () {\n      return this.adapter.apply(\"readerTitle\", this._readerTitle != \"\" ? this._readerTitle : this.title);\n    },\n    /**\r\n     * A title for screen readers. It is very highly recommended to set that title\r\n     * so that people using screen reader tools can get an immediate summary of\r\n     * the information in the popup.\r\n     *\r\n     * @param value  Reader title\r\n     */\n    set: function (value) {\n      if (this._readerTitle != value) {\n        this._readerTitle = value;\n        this.applyReaderSettings();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"closable\", {\n    /**\r\n     * @return Closable?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"closable\", this._closable);\n    },\n    /**\r\n     * Is popup closable?\r\n     *\r\n     * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,\r\n     * clicking curtain, or clicking the close button.\r\n     *\r\n     * If it is not closable, the only way to close it is via `close()` call.\r\n     *\r\n     * @param value Closable?\r\n     */\n    set: function (value) {\n      if (value !== this._closable) {\n        this._closable = value;\n        this.applyEvents();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"fitTo\", {\n    /**\r\n     * @ignore\r\n     * @todo Implement\r\n     * @return Fit option\r\n     */\n    get: function () {\n      return this.adapter.apply(\"fitTo\", this._fitTo);\n    },\n    /**\r\n     * If set to other than \"none\" will try to re-adjust the position of the\r\n     * popop to fit within chart container or browser window.\r\n     *\r\n     * @ignore\r\n     * @todo Implement\r\n     * @default \"window\"\r\n     * @param value  Fit option\r\n     */\n    set: function (value) {\n      if (value != this._fitTo) {\n        this._fitTo = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"defaultStyles\", {\n    /**\r\n     * @return Use default CSS?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"defaultStyles\", this._defaultStyles);\n    },\n    /**\r\n     * Should popup use default CSS?\r\n     *\r\n     * If default CSS is disabled, an external CSS should handle the look of the\r\n     * popup, since it will look quite out of place otherwise.\r\n     *\r\n     * @default true\r\n     * @param Use default CSS?\r\n     */\n    set: function (value) {\n      if (this._defaultStyles != value) {\n        this._defaultStyles = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"showCurtain\", {\n    /**\r\n     * @return Show curtain?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"showCurtain\", this._showCurtain);\n    },\n    /**\r\n     * Should popup use dim out all content behind it?\r\n     *\r\n     * @default false\r\n     * @param Show curtain?\r\n     */\n    set: function (value) {\n      if (this._showCurtain != value) {\n        this._showCurtain = value;\n        if (this._elements.curtain) {\n          this._elements.curtain.style.display = value ? \"block\" : \"none\";\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates curtain element.\r\n   */\n  Popup.prototype.createCurtainElement = function () {\n    // Get class names for popup elements\n    var classNames = this.getClassNames();\n    // Create the curtain\n    var curtain = document.createElement(\"div\");\n    curtain.className = classNames.curtainClass;\n    // Append curtain to wrapper\n    this.container.appendChild(curtain);\n    // Create an InteractionObject for curtain because we might need to\n    // set interactions on it\n    this._IOs.curtain = getInteraction().getInteraction(curtain);\n    // Add Curtain IO to disposers\n    this._disposers.push(this._IOs.curtain);\n    // Set events to disable underlying interactivity\n    this._IOs.curtain.events.on(\"over\", this.disablePointers, this);\n    this._IOs.curtain.events.on(\"out\", this.releasePointers, this);\n    // Hide it?\n    curtain.style.display = this.showCurtain ? \"block\" : \"none\";\n    // Save for later\n    this._elements.curtain = curtain;\n  };\n  Object.defineProperty(Popup.prototype, \"draggable\", {\n    /**\r\n     * @return Show curtain?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"draggable\", this._draggable);\n    },\n    /**\r\n     * Can the popup be dragged with a pointer?\r\n     *\r\n     * @default false\r\n     * @param Show curtain?\r\n     */\n    set: function (value) {\n      if (this._draggable != value) {\n        this._draggable = value;\n        this.setupDragging();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"dynamicResize\", {\n    /**\r\n     * @return Resize dynamically?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"dynamicResize\", this._dynamicResize);\n    },\n    /**\r\n     * Resize popup as images are being loaded.\r\n     *\r\n     * @default true\r\n     * @since 4.9.17\r\n     * @param Resize dynamically?\r\n     */\n    set: function (value) {\n      if (this._dynamicResize != value) {\n        this._dynamicResize = value;\n        this.positionElement(true);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"align\", {\n    /**\r\n     * @return Horizontal position\r\n     */\n    get: function () {\n      return this.adapter.apply(\"align\", this._align);\n    },\n    /**\r\n     * Horizontal positioning of the content window.\r\n     *\r\n     * Available options: \"left\", \"center\" (default), \"right\", and \"none\".\r\n     *\r\n     * @default \"center\"\r\n     * @param Horizontal position\r\n     */\n    set: function (value) {\n      if (this._align != value) {\n        this._align = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"verticalAlign\", {\n    /**\r\n     * @return Vertical position\r\n     */\n    get: function () {\n      return this.adapter.apply(\"verticalAlign\", this._verticalAlign);\n    },\n    /**\r\n     * Vertical positioning of the content window.\r\n     *\r\n     * Available options: \"top\", \"middle\" (default), \"bottom\", and \"none\".\r\n     *\r\n     * @default \"middle\"\r\n     * @param Vertical position\r\n     */\n    set: function (value) {\n      if (this._verticalAlign != value) {\n        this._verticalAlign = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"left\", {\n    /**\r\n     * @return Left\r\n     */\n    get: function () {\n      return this.adapter.apply(\"left\", this._left);\n    },\n    /**\r\n     * \"left\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `align` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Left\r\n     */\n    set: function (value) {\n      if (this.left != value) {\n        this._left = value;\n        this._align = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"right\", {\n    /**\r\n     * @return Right\r\n     */\n    get: function () {\n      return this.adapter.apply(\"right\", this._right);\n    },\n    /**\r\n     * \"right\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `align` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Right\r\n     */\n    set: function (value) {\n      if (this.right != value) {\n        this._right = value;\n        this._align = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"top\", {\n    /**\r\n     * @return Top\r\n     */\n    get: function () {\n      return this.adapter.apply(\"top\", this._top);\n    },\n    /**\r\n     * \"top\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `verticalAlign` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Top\r\n     */\n    set: function (value) {\n      if (this.top != value) {\n        this._top = value;\n        this._verticalAlign = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"bottom\", {\n    /**\r\n     * @return Bottom\r\n     */\n    get: function () {\n      return this.adapter.apply(\"bottom\", this._bottom);\n    },\n    /**\r\n     * \"bottom\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `verticalAlign` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Bottom\r\n     */\n    set: function (value) {\n      if (this.bottom != value) {\n        this._bottom = value;\n        this._verticalAlign = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"elements\", {\n    /**\r\n     * Returns an object with references to various elements of the Popup.\r\n     *\r\n     * * `wrapper`\r\n     * * `title`\r\n     * * `content`\r\n     * * `close`\r\n     * * `curtain`\r\n     */\n    get: function () {\n      return this._elements;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads popup CSS.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Popup.prototype.loadDefaultCSS = function () {\n    if (!this._cssLoaded) {\n      this._disposers.push(popupCSS(getShadowRoot(this.container), this.classPrefix));\n      $object.each(this._elements, function (key, el) {\n        el.style.display = \"\";\n      });\n      this._cssLoaded = true;\n    }\n  };\n  /**\r\n   * If popup is closable, this method adds various events to popup elements.\r\n   */\n  Popup.prototype.applyEvents = function () {\n    var _this = this;\n    if (this._IOs.close) {\n      if (this.closable) {\n        this._IOs.close.element.style.visibility = \"visible\";\n        var disposers = [getInteraction().body.events.on(\"keyup\", function (ev) {\n          if (keyboard.isKey(ev.event, \"esc\") && _this.closable) {\n            _this.close();\n          }\n        }), this._IOs.close.events.on(\"hit\", function (ev) {\n          _this.close();\n        })];\n        disposers.push(this._IOs.curtain.events.on(\"hit\", function (ev) {\n          if (_this.showCurtain && _this.closable) {\n            _this.close();\n          }\n        }));\n        this._disposers.push(new MultiDisposer(disposers));\n      } else {\n        this._IOs.close.element.style.visibility = \"hidden\";\n      }\n    }\n  };\n  /**\r\n   * Disables interactivity on parent chart.\r\n   */\n  Popup.prototype.disablePointers = function () {\n    if (this.sprite) {\n      this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\n      this.sprite.interactionsEnabled = false;\n    }\n  };\n  /**\r\n   * Releases temporarily disabled pointers on parent chart.\r\n   */\n  Popup.prototype.releasePointers = function () {\n    if ($type.hasValue(this._spriteInteractionsEnabled)) {\n      this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\n      this._spriteInteractionsEnabled = undefined;\n    }\n  };\n  /**\r\n   * Sets screen reader related settings.\r\n   */\n  Popup.prototype.applyReaderSettings = function () {\n    this.elements.wrapper.setAttribute(\"aria-label\", this.readerTitle);\n  };\n  /**\r\n   * Copies all properties and related data from different element.\r\n   *\r\n   * @param object Source element\r\n   */\n  Popup.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.container = source.container;\n    this.sprite = source.sprite;\n    this.classPrefix = source.classPrefixRaw;\n    this.content = source.content;\n    this.title = source.title;\n    this.readerTitle = source.readerTitle;\n    this.defaultStyles = source.defaultStyles;\n    this.showCurtain = source.showCurtain;\n    this.align = source.align;\n    this.verticalAlign = source.verticalAlign;\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.adapter.copyFrom(source.adapter);\n  };\n  return Popup;\n}(BaseObjectEvents);\nexport { Popup };","map":{"version":3,"mappings":"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","names":["popupCSS","Adapter","BaseObjectEvents","getInteraction","keyboard","MultiDisposer","getShadowRoot","$type","$object","__extends","_super","_this","x","y","className","Popup","container","_elements","wrapper","appendChild","curtain","showCurtain","positionElement","dispatchImmediately","parentElement","removeChild","releasePointers","close","dispose","forceResize","setTimeout","_sized","style","opacity","left","top","margin","width","height","bbox","getBoundingClientRect","dynamicResize","images","getElementsByTagName","i","length","image","complete","addEventListener","_bbox","align","right","marginLeft","toStyle","_shift","_tempShift","Math","round","verticalAlign","bottom","marginTop","draggable","_IOs","header","events","has","on","ev","shift","unprepElement","off","value","hasValue","isNumber","toString","Object","adapter","apply","_classPrefix","_content","content","createContentElement","innerHTML","wrapperClass","classPrefix","headerClass","titleClass","contentClass","insideClass","curtainClass","closeClass","classNames","getClassNames","document","createElement","title","display","_disposers","push","disablePointers","visibility","setAttribute","defaultStyles","loadDefaultCSS","createCurtainElement","applyEvents","applyReaderSettings","setupDragging","_title","_readerTitle","_closable","_fitTo","_defaultStyles","_showCurtain","_draggable","_dynamicResize","_align","_verticalAlign","_left","_right","_top","_bottom","_cssLoaded","each","key","el","closable","element","disposers","body","isKey","event","sprite","_spriteInteractionsEnabled","interactionsEnabled","undefined","elements","readerTitle","source","copyFrom","classPrefixRaw"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\elements\\Popup.ts"],"sourcesContent":["/**\r\n * Popup class is used to display information over chart area.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport popupCSS from \"./PopupCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { getShadowRoot } from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n/**\r\n * Represents a list of available adapters for Export.\r\n */\r\nexport interface IPopupAdapters {\r\n\r\n\t/**\r\n\t * Applied to the class prefixes.\r\n\t */\r\n\tclassPrefix: string,\r\n\r\n\t/**\r\n\t * Applied to popup content before it is shown.\r\n\t */\r\n\tcontent: string,\r\n\r\n\t/**\r\n\t * Applied to popup title before it is shown.\r\n\t */\r\n\ttitle: string,\r\n\r\n\t/**\r\n\t * Applied to the screen reader title.\r\n\t */\r\n\treaderTitle: string,\r\n\r\n\t/**\r\n\t * Applied to default `defaultStyles` property before it is retrieved.\r\n\t */\r\n\tdefaultStyles: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `showCurtain` property before it is retrieved.\r\n\t */\r\n\tshowCurtain: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `draggable` property before it is retrieved.\r\n\t */\r\n\tdraggable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `closable` property before it is retrieved.\r\n\t */\r\n\tclosable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `dynamicResize` property before it is retrieved.\r\n\t */\r\n\tdynamicResize: boolean,\r\n\r\n\t/**\r\n\t * Applied to `fitTo` property before it's retrieved.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t */\r\n\tfitTo: \"none\" | \"container\" | \"window\",\r\n\r\n\t/**\r\n\t * Applied to horizontal alignment of the popup.\r\n\t */\r\n\talign: Optional<Align>;\r\n\r\n\t/**\r\n\t * Applied to vertical alignment of the popup.\r\n\t */\r\n\tverticalAlign: Optional<VerticalAlign>;\r\n\r\n\t/**\r\n\t * Applied to `left` position value.\r\n\t */\r\n\tleft: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `right` position value.\r\n\t */\r\n\tright: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `top` position value.\r\n\t */\r\n\ttop: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `bottom` position value.\r\n\t */\r\n\tbottom: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to class names list that are added as class for various popup\r\n\t * elements.\r\n\t */\r\n\tclassNames: {\r\n\t\twrapperClass: string,\r\n\t\ttitleClass: string,\r\n\t\theaderClass: string,\r\n\t\tcontentClass: string,\r\n\t\tinsideClass: string,\r\n\t\tcurtainClass: string,\r\n\t\tcloseClass: string\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for Popup.\r\n */\r\nexport interface IPopupEvents {\r\n\r\n\t/**\r\n\t * Invoked when Popup is opened.\r\n\t */\r\n\topened: {};\r\n\r\n\t/**\r\n\t * Invoked when Popup is closed.\r\n\t */\r\n\tclosed: {};\r\n\r\n}\r\n\r\n/**\r\n * Shows an HTML popup which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n * @todo Positioning over whole window\r\n */\r\nexport class Popup extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPopupEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPopupAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<Popup, IPopupAdapters> = new Adapter<Popup, IPopupAdapters>(this);\r\n\r\n\t/**\r\n\t * A reference to an HTML element to be used for container. If not set, popup\r\n\t * will cover the whole window.\r\n\t */\r\n\tpublic container: $type.Optional<HTMLElement | Document>;\r\n\r\n\t/**\r\n\t * A parent element this Popup belongs to.\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds references to various HTML elements, Popup consists of.\r\n\t */\r\n\tprotected _elements: {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\theader?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Holdes Interaction objects for various Popup's elements.\r\n\t */\r\n\tprotected _IOs: {\r\n\t\twrapper?: InteractionObject;\r\n\t\tcontent?: InteractionObject;\r\n\t\theader?: InteractionObject;\r\n\t\tclose?: InteractionObject;\r\n\t\tcurtain?: InteractionObject;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Contents of popup window.\r\n\t */\r\n\tprotected _content: string = \"\";\r\n\r\n\t/**\r\n\t * Title of the popup window.\r\n\t */\r\n\tprotected _title: string = \"\";\r\n\r\n\t/**\r\n\t * Prefix to apply to class names for popup elements.\r\n\t */\r\n\tprotected _classPrefix: string = \"ampopup\"\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will use default styles.\r\n\t */\r\n\tprotected _defaultStyles: boolean = true;\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will dim out all chart content behind it by\r\n\t * showing a semi-transparent fill. (curtain)\r\n\t */\r\n\tprotected _showCurtain: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether popup can be dragged.\r\n\t */\r\n\tprotected _draggable: boolean = true;\r\n\r\n\t/**\r\n\t * Horizontal position of the content window.\r\n\t */\r\n\tprotected _align: Optional<Align> = \"center\";\r\n\r\n\t/**\r\n\t * Resize popup as images are being loaded.\r\n\t */\r\n\tprotected _dynamicResize: boolean = true;\r\n\r\n\t/**\r\n\t * Vertical position of the content window.\r\n\t */\r\n\tprotected _verticalAlign: Optional<VerticalAlign> = \"middle\";\r\n\r\n\t/**\r\n\t * Shift in position of the element. (used for dragging)\r\n\t */\r\n\tprotected _shift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * Temporary shift in position of the element. (used for dragging)\r\n\t */\r\n\tprotected _tempShift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * \"left\" position of the popup content.\r\n\t */\r\n\tprotected _left: number | Percent;\r\n\r\n\t/**\r\n\t * \"right\" position of the popup content.\r\n\t */\r\n\tprotected _right: number | Percent;\r\n\r\n\t/**\r\n\t * \"top\" position of the popup content.\r\n\t */\r\n\tprotected _top: number | Percent;\r\n\r\n\t/**\r\n\t * \"bottom\" position of the popup content.\r\n\t */\r\n\tprotected _bottom: number | Percent;\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t */\r\n\tpublic _readerTitle: string = \"\";\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t */\r\n\tprivate _closable: boolean = true;\r\n\r\n\t/**\r\n\t * Was CSS already loaded?\r\n\t */\r\n\tprivate _cssLoaded: boolean = false;\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t * @todo Implement\r\n\t */\r\n\tprivate _fitTo: \"none\" | \"container\" | \"window\" = \"window\";\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if the element was already sized and should not be measured for\r\n\t * size again, saving some precious resources.\r\n\t */\r\n\tprivate _sized: boolean = false;\r\n\r\n\t/**\r\n\t * Cached bounding rectangle info.\r\n\t */\r\n\tprivate _bbox: $type.Optional<DOMRect | ClientRect>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Popup\";\r\n\t}\r\n\r\n\t/**\r\n\t * Shows popup window.\r\n\t */\r\n\tpublic open(): void {\r\n\t\tif (this.container) {\r\n\t\t\tif (this._elements.wrapper) {\r\n\t\t\t\tthis.container.appendChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis.container.appendChild(this._elements.curtain);\r\n\t\t\t\tthis.showCurtain = this.showCurtain;\r\n\t\t\t}\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.dispatchImmediately(\"opened\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides popup window.\r\n\t */\r\n\tpublic close(): void {\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\tif (this._elements.wrapper.parentElement) {\r\n\t\t\t\tthis._elements.wrapper.parentElement.removeChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._elements.curtain) {\r\n\t\t\tif (this._elements.curtain.parentElement) {\r\n\t\t\t\tthis._elements.curtain.parentElement.removeChild(this._elements.curtain);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dispatchImmediately(\"closed\");\r\n\t\tthis.releasePointers();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy (dispose) popup.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.close();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Positions content element in the center of popup based on its actual size.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic positionElement(forceResize: boolean = true): void {\r\n\r\n\t\tif (!this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (forceResize || !this._sized) {\r\n\t\t\t\tthis._elements.wrapper.style.opacity = \"0.01\";\r\n\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.margin = \"0 0 0 0\";\r\n\r\n\t\t\t\tthis._elements.wrapper.style.width = \"\";\r\n\t\t\t\tthis._elements.wrapper.style.height = \"\";\r\n\r\n\t\t\t\tlet bbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\tthis._elements.wrapper.style.width = bbox.width + \"px\";\r\n\t\t\t\tthis._elements.wrapper.style.height = bbox.height + \"px\";\r\n\r\n\t\t\t\tthis._sized = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for any images that are not yet loaded\r\n\t\t\tif (this.dynamicResize) {\r\n\t\t\t\tconst images = this._elements.wrapper.getElementsByTagName(\"img\");\r\n\t\t\t\tfor (let i = 0; i < images.length; i++) {\r\n\t\t\t\t\tconst image = images[i];\r\n\t\t\t\t\tif (!image.complete) {\r\n\t\t\t\t\t\t// Resize popup once again when image is loaded\r\n\t\t\t\t\t\timage.addEventListener(\"load\", () => {\r\n\t\t\t\t\t\t\tthis.positionElement(true);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Do this for one image only as it will be checked again next time\r\n\t\t\t\t\t\t// anyway\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet bbox: DOMRect | ClientRect;\r\n\t\t\t\tif ((forceResize || !this._sized) && this._bbox) {\r\n\t\t\t\t\tbbox = this._bbox;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\t\tthis._elements.wrapper.style.opacity = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set horizontal positioning\r\n\t\t\t\tswitch (this.align) {\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(Math.round(-bbox.width / 2) + (this._shift.x + this._tempShift.x));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = this.toStyle(this.left) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = this.toStyle(this.right) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set vertical positioning\r\n\t\t\t\tswitch (this.verticalAlign) {\r\n\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(Math.round(-bbox.height / 2) + (this._shift.y + this._tempShift.y));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = this.toStyle(this.top) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = this.toStyle(this.bottom) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}, 1);\r\n\t\t}, 1);\r\n\r\n\t}\r\n\r\n\tprotected setupDragging(): void {\r\n\t\tif (this.draggable) {\r\n\t\t\tif (!this._IOs.header.events.has(\"drag\")) {\r\n\t\t\t\tthis._IOs.header.events.on(\"drag\", (ev) => {\r\n\t\t\t\t\tthis._tempShift.x = ev.shift.x;\r\n\t\t\t\t\tthis._tempShift.y = ev.shift.y;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (!this._IOs.header.events.has(\"dragstop\")) {\r\n\t\t\t\tthis._IOs.header.events.on(\"dragstop\", (ev) => {\r\n\t\t\t\t\tthis._shift.x += this._tempShift.x;\r\n\t\t\t\t\tthis._shift.y += this._tempShift.y;\r\n\t\t\t\t\tthis._tempShift.x = 0;\r\n\t\t\t\t\tthis._tempShift.y = 0;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._IOs.header) {\r\n\t\t\t\tgetInteraction().unprepElement(this._IOs.header);\r\n\t\t\t\tif (this._IOs.header.events.has(\"drag\")) {\r\n\t\t\t\t\tthis._IOs.header.events.off(\"drag\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this._IOs.header.events.has(\"dragstop\")) {\r\n\t\t\t\t\tthis._IOs.header.events.off(\"dragstop\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toStyle(value: number | Percent): string | null {\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\telse if ($type.isNumber(value)) {\r\n\t\t\treturn \"\" + value + \"px\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.toString();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A prefix that is applied to class names of various popup elements.\r\n\t *\r\n\t * @return Class name prefix\r\n\t */\r\n\tpublic get classPrefix(): string {\r\n\t\treturn this.adapter.apply(\"classPrefix\", this._classPrefix);\r\n\t}\r\n\r\n\t/**\r\n\t * @param value Class name prefix\r\n\t */\r\n\tpublic set classPrefix(value: string) {\r\n\t\tthis._classPrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns raw prefix (without adapters applied).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Class name prefix\r\n\t */\r\n\tpublic get classPrefixRaw(): string {\r\n\t\treturn this._classPrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Popup content.\r\n\t *\r\n\t * Popup content can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param value Popup content\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\tif (this._content != value) {\r\n\t\t\tthis._content = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.content.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup content\r\n\t */\r\n\tpublic get content(): string {\r\n\t\treturn this.adapter.apply(\"content\", this._content);\r\n\t}\r\n\r\n\tprotected getClassNames() {\r\n\t\treturn this.adapter.apply(\"classNames\", {\r\n\t\t\twrapperClass: this.classPrefix + \"\",\r\n\t\t\theaderClass: this.classPrefix + \"-header\",\r\n\t\t\ttitleClass: this.classPrefix + \"-title\",\r\n\t\t\tcontentClass: this.classPrefix + \"-content\",\r\n\t\t\tinsideClass: this.classPrefix + \"-inside\",\r\n\t\t\tcurtainClass: this.classPrefix + \"-curtain\",\r\n\t\t\tcloseClass: this.classPrefix + \"-close\"\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates content element.\r\n\t */\r\n\tprotected createContentElement(): void {\r\n\r\n\t\t// Check if it's created already\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create content element\r\n\t\tlet wrapper = document.createElement(\"div\");\r\n\t\twrapper.className = classNames.contentClass;\r\n\t\twrapper.style.opacity = \"0.01\";\r\n\r\n\t\t// Create close button\r\n\t\tlet close = document.createElement(\"a\");\r\n\t\tclose.className = classNames.closeClass;\r\n\r\n\t\t// header title\r\n\t\tconst header = document.createElement(\"div\");\r\n\t\theader.className = classNames.headerClass;\r\n\r\n\t\t// Content title\r\n\t\tlet title = document.createElement(\"div\");\r\n\t\ttitle.innerHTML = this.title;\r\n\t\ttitle.className = classNames.titleClass;\r\n\t\tif (!this.title) {\r\n\t\t\ttitle.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t// Content div\r\n\t\tlet content = document.createElement(\"div\");\r\n\t\tcontent.className = classNames.insideClass;\r\n\t\tcontent.innerHTML = this.content;\r\n\r\n\t\t// Set up events for content\r\n\t\tthis._IOs.wrapper = getInteraction().getInteraction(wrapper);\r\n\t\tthis._IOs.header = getInteraction().getInteraction(header);\r\n\t\tthis._disposers.push(this._IOs.wrapper);\r\n\r\n\t\t// Set hover/out events\r\n\t\tthis._IOs.wrapper.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.wrapper.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Create an InteractionObject for close\r\n\t\tthis._IOs.close = getInteraction().getInteraction(close);\r\n\t\tthis._disposers.push(this._IOs.close);\r\n\r\n\t\t// Hide close for now\r\n\t\tclose.style.visibility = \"hidden\";\r\n\r\n\t\t// Add accessible stuff\r\n\t\twrapper.setAttribute(\"role\", \"dialog\");\r\n\r\n\t\t// Add to wrapper\r\n\t\theader.appendChild(close);\r\n\t\theader.appendChild(title);\r\n\t\twrapper.appendChild(header);\r\n\t\twrapper.appendChild(content);\r\n\t\tthis.container.appendChild(wrapper);\r\n\r\n\t\t// Save for later access\r\n\t\tthis._elements.wrapper = wrapper;\r\n\t\tthis._elements.header = header;\r\n\t\tthis._elements.content = content;\r\n\t\tthis._elements.title = title;\r\n\t\tthis._elements.close = close;\r\n\r\n\t\t// Load CSS\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis.loadDefaultCSS();\r\n\t\t}\r\n\r\n\t\t// Create curtain as well\r\n\t\tthis.createCurtainElement();\r\n\r\n\t\t// Apply events\r\n\t\tthis.applyEvents();\r\n\r\n\t\tthis.applyReaderSettings();\r\n\r\n\t\t// Draggable?\r\n\t\tthis.setupDragging();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Popup title.\r\n\t *\r\n\t * Popup title can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param value  Popup title\r\n\t */\r\n\tpublic set title(value: string) {\r\n\t\tif (this._title != value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.title.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup title\r\n\t */\r\n\tpublic get title(): string {\r\n\t\treturn this.adapter.apply(\"title\", this._title);\r\n\t}\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t *\r\n\t * @param value  Reader title\r\n\t */\r\n\tpublic set readerTitle(value: string) {\r\n\t\tif (this._readerTitle != value) {\r\n\t\t\tthis._readerTitle = value;\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup content\r\n\t */\r\n\tpublic get readerTitle(): string {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"readerTitle\",\r\n\t\t\tthis._readerTitle != \"\" ? this._readerTitle : this.title\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t *\r\n\t * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,\r\n\t * clicking curtain, or clicking the close button.\r\n\t *\r\n\t * If it is not closable, the only way to close it is via `close()` call.\r\n\t *\r\n\t * @param value Closable?\r\n\t */\r\n\tpublic set closable(value: boolean) {\r\n\t\tif (value !== this._closable) {\r\n\t\t\tthis._closable = value;\r\n\t\t\tthis.applyEvents();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Closable?\r\n\t */\r\n\tpublic get closable(): boolean {\r\n\t\treturn this.adapter.apply(\"closable\", this._closable);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @default \"window\"\r\n\t * @param value  Fit option\r\n\t */\r\n\tpublic set fitTo(value: \"none\" | \"container\" | \"window\") {\r\n\t\tif (value != this._fitTo) {\r\n\t\t\tthis._fitTo = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @return Fit option\r\n\t */\r\n\tpublic get fitTo(): \"none\" | \"container\" | \"window\" {\r\n\t\treturn this.adapter.apply(\"fitTo\", this._fitTo);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use default CSS?\r\n\t *\r\n\t * If default CSS is disabled, an external CSS should handle the look of the\r\n\t * popup, since it will look quite out of place otherwise.\r\n\t *\r\n\t * @default true\r\n\t * @param Use default CSS?\r\n\t */\r\n\tpublic set defaultStyles(value: boolean) {\r\n\t\tif (this._defaultStyles != value) {\r\n\t\t\tthis._defaultStyles = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default CSS?\r\n\t */\r\n\tpublic get defaultStyles(): boolean {\r\n\t\treturn this.adapter.apply(\"defaultStyles\", this._defaultStyles);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use dim out all content behind it?\r\n\t *\r\n\t * @default false\r\n\t * @param Show curtain?\r\n\t */\r\n\tpublic set showCurtain(value: boolean) {\r\n\t\tif (this._showCurtain != value) {\r\n\t\t\tthis._showCurtain = value;\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis._elements.curtain.style.display = value ? \"block\" : \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show curtain?\r\n\t */\r\n\tpublic get showCurtain(): boolean {\r\n\t\treturn this.adapter.apply(\"showCurtain\", this._showCurtain);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates curtain element.\r\n\t */\r\n\tprotected createCurtainElement(): void {\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create the curtain\r\n\t\tlet curtain = document.createElement(\"div\");\r\n\t\tcurtain.className = classNames.curtainClass;\r\n\r\n\t\t// Append curtain to wrapper\r\n\t\tthis.container.appendChild(curtain);\r\n\r\n\t\t// Create an InteractionObject for curtain because we might need to\r\n\t\t// set interactions on it\r\n\t\tthis._IOs.curtain = getInteraction().getInteraction(curtain);\r\n\r\n\t\t// Add Curtain IO to disposers\r\n\t\tthis._disposers.push(this._IOs.curtain);\r\n\r\n\t\t// Set events to disable underlying interactivity\r\n\t\tthis._IOs.curtain.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.curtain.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Hide it?\r\n\t\tcurtain.style.display = this.showCurtain ? \"block\" : \"none\";\r\n\r\n\t\t// Save for later\r\n\t\tthis._elements.curtain = curtain;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Can the popup be dragged with a pointer?\r\n\t *\r\n\t * @default false\r\n\t * @param Show curtain?\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tif (this._draggable != value) {\r\n\t\t\tthis._draggable = value;\r\n\t\t\tthis.setupDragging();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show curtain?\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this.adapter.apply(\"draggable\", this._draggable);\r\n\t}\r\n\r\n\t/**\r\n\t * Resize popup as images are being loaded.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.17\r\n\t * @param Resize dynamically?\r\n\t */\r\n\tpublic set dynamicResize(value: boolean) {\r\n\t\tif (this._dynamicResize != value) {\r\n\t\t\tthis._dynamicResize = value;\r\n\t\t\tthis.positionElement(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Resize dynamically?\r\n\t */\r\n\tpublic get dynamicResize(): boolean {\r\n\t\treturn this.adapter.apply(\"dynamicResize\", this._dynamicResize);\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal positioning of the content window.\r\n\t *\r\n\t * Available options: \"left\", \"center\" (default), \"right\", and \"none\".\r\n\t *\r\n\t * @default \"center\"\r\n\t * @param Horizontal position\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tif (this._align != value) {\r\n\t\t\tthis._align = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal position\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.adapter.apply(\"align\", this._align);\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical positioning of the content window.\r\n\t *\r\n\t * Available options: \"top\", \"middle\" (default), \"bottom\", and \"none\".\r\n\t *\r\n\t * @default \"middle\"\r\n\t * @param Vertical position\r\n\t */\r\n\tpublic set verticalAlign(value: VerticalAlign) {\r\n\t\tif (this._verticalAlign != value) {\r\n\t\t\tthis._verticalAlign = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical position\r\n\t */\r\n\tpublic get verticalAlign(): VerticalAlign {\r\n\t\treturn this.adapter.apply(\"verticalAlign\", this._verticalAlign);\r\n\t}\r\n\r\n\t/**\r\n\t * \"left\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Left\r\n\t */\r\n\tpublic set left(value: number | Percent) {\r\n\t\tif (this.left != value) {\r\n\t\t\tthis._left = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Left\r\n\t */\r\n\tpublic get left(): number | Percent {\r\n\t\treturn this.adapter.apply(\"left\", this._left);\r\n\t}\r\n\r\n\t/**\r\n\t * \"right\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Right\r\n\t */\r\n\tpublic set right(value: number | Percent) {\r\n\t\tif (this.right != value) {\r\n\t\t\tthis._right = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Right\r\n\t */\r\n\tpublic get right(): number | Percent {\r\n\t\treturn this.adapter.apply(\"right\", this._right);\r\n\t}\r\n\r\n\t/**\r\n\t * \"top\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Top\r\n\t */\r\n\tpublic set top(value: number | Percent) {\r\n\t\tif (this.top != value) {\r\n\t\t\tthis._top = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Top\r\n\t */\r\n\tpublic get top(): number | Percent {\r\n\t\treturn this.adapter.apply(\"top\", this._top);\r\n\t}\r\n\r\n\t/**\r\n\t * \"bottom\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Bottom\r\n\t */\r\n\tpublic set bottom(value: number | Percent) {\r\n\t\tif (this.bottom != value) {\r\n\t\t\tthis._bottom = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bottom\r\n\t */\r\n\tpublic get bottom(): number | Percent {\r\n\t\treturn this.adapter.apply(\"bottom\", this._bottom);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object with references to various elements of the Popup.\r\n\t *\r\n\t * * `wrapper`\r\n\t * * `title`\r\n\t * * `content`\r\n\t * * `close`\r\n\t * * `curtain`\r\n\t */\r\n\tpublic get elements(): {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} {\r\n\t\treturn this._elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads popup CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tif (!this._cssLoaded) {\r\n\t\t\tthis._disposers.push(popupCSS(getShadowRoot(this.container), this.classPrefix));\r\n\t\t\t$object.each(this._elements, (key, el) => {\r\n\t\t\t\tel.style.display = \"\";\r\n\t\t\t});\r\n\t\t\tthis._cssLoaded = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If popup is closable, this method adds various events to popup elements.\r\n\t */\r\n\tprotected applyEvents(): void {\r\n\t\tif (this._IOs.close) {\r\n\t\t\tif (this.closable) {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"visible\";\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\t\t\tif (keyboard.isKey(ev.event, \"esc\") && this.closable) {\r\n\t\t\t\t\t\t\tthis.close()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis._IOs.close.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t})\r\n\t\t\t\t];\r\n\t\t\t\tdisposers.push(this._IOs.curtain.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\tif (this.showCurtain && this.closable) {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tthis._disposers.push(new MultiDisposer(disposers));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"hidden\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected disablePointers(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t\tthis.sprite.interactionsEnabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t\tthis._spriteInteractionsEnabled = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets screen reader related settings.\r\n\t */\r\n\tprotected applyReaderSettings(): void {\r\n\t\tthis.elements.wrapper.setAttribute(\"aria-label\", this.readerTitle);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from different element.\r\n\t *\r\n\t * @param object Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.container = source.container;\r\n\t\tthis.sprite = source.sprite;\r\n\t\tthis.classPrefix = source.classPrefixRaw;\r\n\t\tthis.content = source.content;\r\n\t\tthis.title = source.title;\r\n\t\tthis.readerTitle = source.readerTitle;\r\n\t\tthis.defaultStyles = source.defaultStyles;\r\n\t\tthis.showCurtain = source.showCurtain;\r\n\t\tthis.align = source.align;\r\n\t\tthis.verticalAlign = source.verticalAlign;\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.adapter.copyFrom(source.adapter);\r\n\t}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}