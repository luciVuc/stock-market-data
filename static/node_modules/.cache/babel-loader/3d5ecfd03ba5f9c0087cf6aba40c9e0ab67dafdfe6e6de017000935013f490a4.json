{"ast":null,"code":"/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Container } from \"../../core/Container\";\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\nimport { registry } from \"../../core/Registry\";\nimport { percent } from \"../../core/utils/Percent\";\nimport * as $math from \"../../core/utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar Column = /** @class */function (_super) {\n  __extends(Column, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Column() {\n    var _this = _super.call(this) || this;\n    _this.className = \"Column\";\n    _this.width = percent(80);\n    _this.height = percent(80);\n    //this.isMeasured = true; // for correct position of the tooltip\n    _this.events.disableType(\"transformed\"); // not to bug parent\n    _this.applyOnClones = true;\n    _this.strokeOpacity = 1;\n    _this.layout = \"none\";\n    _this.createAssets();\n    // otherwise users will have to set layout themselves if they'll want to align, scale etc children\n    _this.events.on(\"childadded\", _this.handleKidAdded, _this, false);\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Column.prototype.handleKidAdded = function () {\n    if (this.layout == \"none\") {\n      this.layout = \"absolute\";\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n  Column.prototype.createAssets = function () {\n    this.column = this.createChild(RoundedRectangle);\n    this.column.shouldClone = false;\n    this.column.isMeasured = false;\n    this.column.cornerRadius(0, 0, 0, 0);\n    this._disposers.push(this.column);\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n  Column.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n    var column = this.column;\n    if (column) {\n      column.width = $math.min(this.pixelWidth, this.maxWidth);\n      column.height = $math.min(this.pixelHeight, this.maxHeight);\n      if (column.invalid) {\n        column.validate(); // important!\n      }\n    }\n  };\n  /**\r\n   * Copies all parameters from another [[Column]].\r\n   *\r\n   * @param source Source Column\r\n   */\n  Column.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    if (this.column) {\n      this.column.copyFrom(source.column);\n    }\n  };\n  Object.defineProperty(Column.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n      if (this.column) {\n        return {\n          x: 0,\n          y: 0,\n          width: this.column.measuredWidth,\n          height: this.column.measuredHeight\n        };\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: $math.min(this.pixelWidth, this.maxWidth),\n          height: $math.min(this.pixelHeight, this.maxHeight)\n        };\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Column;\n}(Container);\nexport { Column };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"Column\"] = Column;","map":{"version":3,"mappings":"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","names":["Container","RoundedRectangle","registry","percent","$math","__extends","_super","_this","className","width","height","events","disableType","applyOnClones","strokeOpacity","layout","createAssets","on","handleKidAdded","Column","column","createChild","shouldClone","isMeasured","cornerRadius","_disposers","push","validate","min","pixelWidth","maxWidth","pixelHeight","maxHeight","invalid","source","copyFrom","Object","definedBBox","x","y","measuredWidth","measuredHeight","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\elements\\Column.ts"],"sourcesContent":["/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column]].\r\n */\r\nexport interface IColumnProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[Column]].\r\n */\r\nexport interface IColumnEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumnAdapters extends IContainerAdapters, IColumnProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumnProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumnAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumnEvents;\r\n\r\n\t/**\r\n\t * column element\r\n\t */\r\n\tpublic column: RoundedRectangle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realX: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic realY: number;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column\";\r\n\r\n\t\tthis.width = percent(80);\r\n\t\tthis.height = percent(80);\r\n\r\n\t\t//this.isMeasured = true; // for correct position of the tooltip\r\n\t\tthis.events.disableType(\"transformed\"); // not to bug parent\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.createAssets();\r\n\r\n\t\t// otherwise users will have to set layout themselves if they'll want to align, scale etc children\r\n\t\tthis.events.on(\"childadded\", this.handleKidAdded, this, false);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleKidAdded() {\r\n\t\tif (this.layout == \"none\") {\r\n\t\t\tthis.layout = \"absolute\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.column = this.createChild(RoundedRectangle);\r\n\t\tthis.column.shouldClone = false;\r\n\t\tthis.column.isMeasured = false;\r\n\t\tthis.column.cornerRadius(0, 0, 0, 0);\r\n\t\tthis._disposers.push(this.column);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet column = this.column;\r\n\t\tif (column) {\r\n\t\t\tcolumn.width = $math.min(this.pixelWidth, this.maxWidth);\r\n\t\t\tcolumn.height = $math.min(this.pixelHeight, this.maxHeight);\r\n\t\t\tif(column.invalid){\r\n\t\t\t\tcolumn.validate(); // important!\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Copies all parameters from another [[Column]].\r\n\t *\r\n\t * @param source Source Column\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.column) {\r\n\t\t\tthis.column.copyFrom(source.column);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\tif (this.column) {\r\n\t\t\treturn { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: $math.min(this.pixelWidth, this.maxWidth), height: $math.min(this.pixelHeight, this.maxHeight) };\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column\"] = Column;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}