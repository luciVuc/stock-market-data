{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Entity } from \"../util/Entity\";\nexport function eachChildren(container, f) {\n  if (container.get(\"reverseChildren\", false)) {\n    container.children.eachReverse(f);\n  } else {\n    container.children.each(f);\n  }\n}\n/**\r\n * Base class for [[Container]] layouts.\r\n */\nvar Layout = /** @class */function (_super) {\n  __extends(Layout, _super);\n  function Layout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Layout, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Layout\"\n  });\n  Object.defineProperty(Layout, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Entity.classNames.concat([Layout.className])\n  });\n  return Layout;\n}(Entity);\nexport { Layout };","map":{"version":3,"mappings":";AAEA,SAASA,MAAM,QAAyC,gBAAgB;AAQxE,OAAM,SAAUC,YAAY,CAACC,SAAoB,EAAEC,CAA2B;EAC1E,IAAID,SAAS,CAACE,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,EAAE;IACzCF,SAAS,CAACG,QAAQ,CAACC,WAAW,CAACH,CAAC,CAAC;GACpC,MAAM;IACHD,SAAS,CAACG,QAAQ,CAACE,IAAI,CAACJ,CAAC,CAAC;;AAElC;AAEA;;;AAGA;EAAqCK;EAArC;;EAWA;EAPCC;;;;WAAkC;;EAClCA;;;;WAA0CT,MAAM,CAACU,UAAU,CAACC,MAAM,CAAC,CAACC,MAAM,CAACC,SAAS,CAAC;;EAMtF,aAAC;CAAA,CAXoCb,MAAM;SAArBY,MAAM","names":["Entity","eachChildren","container","f","get","children","eachReverse","each","__extends","Object","classNames","concat","Layout","className"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\render\\Layout.ts"],"sourcesContent":["import type { Container } from \"./Container\";\nimport type { Sprite } from \"./Sprite\";\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../util/Entity\";\n\nexport interface ILayoutSettings extends IEntitySettings {\n}\n\nexport interface ILayoutPrivate extends IEntityPrivate {\n}\n\nexport function eachChildren(container: Container, f: (sprite: Sprite) => void): void {\n    if (container.get(\"reverseChildren\", false)) {\n        container.children.eachReverse(f);\n    } else {\n        container.children.each(f);\n    }\n}\n\n/**\n * Base class for [[Container]] layouts.\n */\nexport abstract class Layout extends Entity {\n\tdeclare public _settings: ILayoutSettings;\n\tdeclare public _privateSettings: ILayoutPrivate;\n\n\tpublic static className: string = \"Layout\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Layout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateContainer(_container: Container): void;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}