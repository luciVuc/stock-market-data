{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Scrollbar } from \"./Scrollbar\";\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\nvar Slider = /** @class */function (_super) {\n  __extends(Slider, _super);\n  function Slider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Slider.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._addOrientationClass();\n      _super.prototype._afterNew.call(this);\n      this.endGrip.setPrivate(\"visible\", false);\n      this.thumb.setPrivate(\"visible\", false);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Slider.prototype, \"updateGrips\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.updateGrips.call(this);\n      var startGrip = this.startGrip;\n      this.endGrip.setAll({\n        x: startGrip.x(),\n        y: startGrip.y()\n      });\n      this.setRaw(\"end\", this.get(\"start\"));\n    }\n  });\n  Object.defineProperty(Slider, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Slider\"\n  });\n  Object.defineProperty(Slider, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Scrollbar.classNames.concat([Slider.className])\n  });\n  return Slider;\n}(Scrollbar);\nexport { Slider };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAiE,aAAa;AAWhG;;;;AAIA;EAA4BC;EAA5B;;EA2BA;;;;;WAjBC;MACC,IAAI,CAACC,oBAAoB,EAAE;MAC3BC,iBAAMC,SAAS,WAAE;MAEjB,IAAI,CAACC,OAAO,CAACC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC;MACzC,IAAI,CAACC,KAAK,CAACD,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC;IACxC;;EAEA;;;;;;;WAGA;MACCH,iBAAMK,WAAW,WAAE;MACnB,IAAMC,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAI,CAACJ,OAAO,CAACK,MAAM,CAAC;QAAEC,CAAC,EAAEF,SAAS,CAACE,CAAC,EAAE;QAAEC,CAAC,EAAEH,SAAS,CAACG,CAAC;MAAE,CAAE,CAAC;MAC3D,IAAI,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC;;EApBAC;;;;WAAkC;;EAClCA;;;;WAA0Cf,SAAS,CAACgB,UAAU,CAACC,MAAM,CAAC,CAACC,MAAM,CAACC,SAAS,CAAC;;EAoBzF,aAAC;CAAA,CA3B2BnB,SAAS;SAAxBkB,MAAM","names":["Scrollbar","__extends","_addOrientationClass","_super","_afterNew","endGrip","setPrivate","thumb","updateGrips","startGrip","setAll","x","y","setRaw","get","Object","classNames","concat","Slider","className"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\core\\render\\Slider.ts"],"sourcesContent":["import { Scrollbar, IScrollbarPrivate, IScrollbarSettings, IScrollbarEvents } from \"./Scrollbar\";\r\n\r\nexport interface ISliderSettings extends IScrollbarSettings {\r\n}\r\n\r\nexport interface ISliderPrivate extends IScrollbarPrivate {\r\n}\r\n\r\nexport interface ISliderEvents extends IScrollbarEvents {\r\n}\r\n\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\tdeclare public _settings: ISliderSettings;\r\n\tdeclare public _privateSettings: ISliderPrivate;\r\n\tdeclare public _events: ISliderEvents;\r\n\r\n\tpublic static className: string = \"Slider\";\r\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([Slider.className]);\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._addOrientationClass();\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.endGrip.setPrivate(\"visible\", false);\r\n\t\tthis.thumb.setPrivate(\"visible\", false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGrips() {\r\n\t\tsuper.updateGrips();\r\n\t\tconst startGrip = this.startGrip;\r\n\t\tthis.endGrip.setAll({ x: startGrip.x(), y: startGrip.y() });\r\n\t\tthis.setRaw(\"end\", this.get(\"start\"));\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}