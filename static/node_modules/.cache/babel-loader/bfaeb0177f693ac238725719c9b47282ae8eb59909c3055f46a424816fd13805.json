{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { Bullet } from \"./Bullet\";\nimport { Circle } from \"../../core/elements/Circle\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\nvar CircleBullet = /** @class */function (_super) {\n  __extends(CircleBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CircleBullet() {\n    var _this = _super.call(this) || this;\n    _this.className = \"CircleBullet\";\n    var circle = _this.createChild(Circle);\n    circle.shouldClone = false;\n    circle.radius = 5;\n    circle.isMeasured = false;\n    _this.circle = circle;\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[CircleBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n  CircleBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n    this.circle.copyFrom(source.circle);\n  };\n  return CircleBullet;\n}(Bullet);\nexport { CircleBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;AAMA,SAASA,MAAM,QAA2D,UAAU;AACpF,SAASC,MAAM,QAAQ,4BAA4B;AACnD,SAASC,QAAQ,QAAQ,qBAAqB;AA4B9C;;;;;;AAOA;;;;;;;;;;;AAWA;EAAkCC;EAsBjC;;;EAGA;IAAA,YACCC,iBAAO;IAEPC,KAAI,CAACC,SAAS,GAAG,cAAc;IAE/B,IAAIC,MAAM,GAAGF,KAAI,CAACG,WAAW,CAACP,MAAM,CAAC;IACrCM,MAAM,CAACE,WAAW,GAAG,KAAK;IAC1BF,MAAM,CAACG,MAAM,GAAG,CAAC;IACjBH,MAAM,CAACI,UAAU,GAAG,KAAK;IACzBN,KAAI,CAACE,MAAM,GAAGA,MAAM;IAEpBF,KAAI,CAACO,UAAU,EAAE;;EAClB;EAEA;;;;;;EAMOC,+BAAQ,GAAf,UAAgBC,MAAY;IAC3BV,iBAAMW,QAAQ,YAACD,MAAM,CAAC;IACtB,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAACD,MAAM,CAACP,MAAM,CAAC;EACpC,CAAC;EACF,mBAAC;AAAD,CAAC,CAjDiCP,MAAM;;AAmDxC;;;;;;AAMAE,QAAQ,CAACc,iBAAiB,CAAC,cAAc,CAAC,GAAGH,YAAY","names":["Bullet","Circle","registry","__extends","_super","_this","className","circle","createChild","shouldClone","radius","isMeasured","applyTheme","CircleBullet","source","copyFrom","registeredClasses"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\elements\\CircleBullet.ts"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface ICircleBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface ICircleBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICircleBulletAdapters extends IBulletAdapters, ICircleBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class CircleBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICircleBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICircleBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICircleBulletEvents;\r\n\r\n\t/**\r\n\t * A label (textual) element for the bullet.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CircleBullet\";\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.radius = 5;\r\n\t\tcircle.isMeasured = false;\r\n\t\tthis.circle = circle;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[CircleBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.circle.copyFrom(source.circle);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}