{"ast":null,"code":"/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\nvar CurvedColumnSeriesDataItem = /** @class */function (_super) {\n  __extends(CurvedColumnSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CurvedColumnSeriesDataItem() {\n    var _this = _super.call(this) || this;\n    _this.className = \"CurvedColumnSeriesDataItem\";\n    _this.applyTheme();\n    return _this;\n  }\n  return CurvedColumnSeriesDataItem;\n}(ColumnSeriesDataItem);\nexport { CurvedColumnSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\nvar CurvedColumnSeries = /** @class */function (_super) {\n  __extends(CurvedColumnSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n  function CurvedColumnSeries() {\n    var _this = _super.call(this) || this;\n    _this.className = \"CurvedColumnSeries\";\n    _this.applyTheme();\n    return _this;\n  }\n  /**\r\n   * Returns an element to use for the curved column.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Element.\r\n   */\n  CurvedColumnSeries.prototype.createColumnTemplate = function () {\n    return new CurvedColumn();\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n  CurvedColumnSeries.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n    var column = dataItem.column;\n    column = dataItem.column;\n    if (column) {\n      var curvedColumn = dataItem.column.curvedColumn;\n      curvedColumn.fill = dataItem.column.fill;\n      if (this.baseAxis == this.yAxis) {\n        column.orientation = \"horizontal\";\n      } else {\n        column.orientation = \"vertical\";\n      }\n    }\n  };\n  return CurvedColumnSeries;\n}(ColumnSeries);\nexport { CurvedColumnSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;","map":{"version":3,"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,SAASA,YAAY,EAAgGC,oBAAoB,QAAQ,gBAAgB;AACjK,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,QAAQ,QAAQ,qBAAqB;AAG9C;;;;;;AAOA;;;;;AAKA;EAAgDC;EAY/C;;;EAGA;IAAA,YACCC,iBAAO;IACPC,KAAI,CAACC,SAAS,GAAG,4BAA4B;IAC7CD,KAAI,CAACE,UAAU,EAAE;;EAClB;EAED,iCAAC;AAAD,CAAC,CArB+CP,oBAAoB;;AAsDpE;;;;;;AAOA;;;;;;;AAOA;EAAwCG;EAgCvC;;;EAGA;IAAA,YACCC,iBAAO;IAEPC,KAAI,CAACC,SAAS,GAAG,oBAAoB;IACrCD,KAAI,CAACE,UAAU,EAAE;;EAClB;EAEA;;;;;;EAMUC,iDAAoB,GAA9B;IACC,OAAO,IAAIP,YAAY,EAAE;EAC1B,CAAC;EAGD;;;;;;EAMOO,oDAAuB,GAA9B,UAA+BC,QAA2B;IACzDL,iBAAMM,uBAAuB,YAACD,QAAQ,CAAC;IAEvC,IAAIE,MAAM,GAAGF,QAAQ,CAACE,MAAM;IAC5BA,MAAM,GAAGF,QAAQ,CAACE,MAAM;IAExB,IAAIA,MAAM,EAAE;MACX,IAAIC,YAAY,GAAGH,QAAQ,CAACE,MAAM,CAACC,YAAY;MAE/CA,YAAY,CAACC,IAAI,GAAGJ,QAAQ,CAACE,MAAM,CAACE,IAAI;MAExC,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,KAAK,EAAE;QAChCJ,MAAM,CAACK,WAAW,GAAG,YAAY;OACjC,MACI;QACJL,MAAM,CAACK,WAAW,GAAG,UAAU;;;EAGlC,CAAC;EACF,yBAAC;AAAD,CAAC,CA9EuCjB,YAAY;;AAgFpD;;;;;;AAMAG,QAAQ,CAACe,iBAAiB,CAAC,oBAAoB,CAAC,GAAGT,kBAAkB;AACrEN,QAAQ,CAACe,iBAAiB,CAAC,4BAA4B,CAAC,GAAGC,0BAA0B","names":["ColumnSeries","ColumnSeriesDataItem","CurvedColumn","registry","__extends","_super","_this","className","applyTheme","CurvedColumnSeries","dataItem","validateDataElementReal","column","curvedColumn","fill","baseAxis","yAxis","orientation","registeredClasses","CurvedColumnSeriesDataItem"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\.internal\\charts\\series\\CurvedColumnSeries.ts"],"sourcesContent":["/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CurvedColumnSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: CurvedColumnSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurvedColumnSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICurvedColumnSeriesAdapters extends IColumnSeriesAdapters, ICurvedColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CurvedColumnSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines type of the data item.\r\n\t */\r\n\tpublic _dataItem: CurvedColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ICurvedColumnSeriesDataFields\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICurvedColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICurvedColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICurvedColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CurvedColumnSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for the curved column.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new CurvedColumn();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\r\n\t\tlet column = dataItem.column;\r\n\t\tcolumn = dataItem.column;\r\n\r\n\t\tif (column) {\r\n\t\t\tlet curvedColumn = dataItem.column.curvedColumn;\r\n\r\n\t\t\tcurvedColumn.fill = dataItem.column.fill;\r\n\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tcolumn.orientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumn.orientation = \"vertical\";\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\r\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}