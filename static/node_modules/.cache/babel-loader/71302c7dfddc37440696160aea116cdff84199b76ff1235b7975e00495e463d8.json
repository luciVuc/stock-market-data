{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require(\"react\");\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require(\"prop-types\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\nvar _GenericComponent = require(\"../GenericComponent\");\nvar _utils = require(\"../utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar PointAndFigureSeries = function (_Component) {\n  _inherits(PointAndFigureSeries, _Component);\n  function PointAndFigureSeries(props) {\n    _classCallCheck(this, PointAndFigureSeries);\n    var _this = _possibleConstructorReturn(this, (PointAndFigureSeries.__proto__ || Object.getPrototypeOf(PointAndFigureSeries)).call(this, props));\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n  _createClass(PointAndFigureSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n        yScale = moreProps.chartConfig.yScale,\n        plotData = moreProps.plotData;\n      var columns = getColumns(xScale, xAccessor, yScale, plotData);\n      _drawOnCanvas(ctx, this.props, columns);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: clip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n        yScale = moreProps.chartConfig.yScale,\n        plotData = moreProps.plotData;\n      var _props = this.props,\n        stroke = _props.stroke,\n        fill = _props.fill,\n        strokeWidth = _props.strokeWidth,\n        className = _props.className;\n      var columns = getColumns(xScale, xAccessor, yScale, plotData);\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, columns.map(function (col, idx) {\n        return _react2.default.createElement(\"g\", {\n          key: idx,\n          className: col.className,\n          transform: \"translate(\" + col.offset[0] + \", \" + col.offset[1] + \")\"\n        }, col.boxes.map(function (box, i) {\n          if (col.direction > 0) {\n            return _react2.default.createElement(\"g\", {\n              key: idx + \"-\" + i\n            }, _react2.default.createElement(\"line\", {\n              className: \"up\",\n              strokeWidth: strokeWidth,\n              stroke: stroke.up,\n              fill: fill.up,\n              x1: 0,\n              y1: box.open,\n              x2: box.columnWidth,\n              y2: box.close\n            }), _react2.default.createElement(\"line\", {\n              className: \"up\",\n              strokeWidth: strokeWidth,\n              stroke: stroke.up,\n              fill: fill.up,\n              x1: 0,\n              y1: box.close,\n              x2: box.columnWidth,\n              y2: box.open\n            }));\n          }\n          return _react2.default.createElement(\"ellipse\", {\n            key: idx + \"-\" + i,\n            className: \"down\",\n            strokeWidth: strokeWidth,\n            stroke: stroke.down,\n            fill: fill.down,\n            cx: box.columnWidth / 2,\n            cy: (box.open + box.close) / 2,\n            rx: box.columnWidth / 2,\n            ry: box.boxHeight / 2\n          });\n        }));\n      }));\n    }\n  }]);\n  return PointAndFigureSeries;\n}(_react.Component);\nPointAndFigureSeries.propTypes = {\n  className: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  stroke: _propTypes2.default.object.isRequired,\n  fill: _propTypes2.default.object.isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nPointAndFigureSeries.defaultProps = {\n  className: \"react-stockcharts-point-and-figure\",\n  strokeWidth: 1,\n  stroke: {\n    up: \"#6BA583\",\n    down: \"#FF0000\"\n  },\n  fill: {\n    up: \"none\",\n    down: \"none\"\n  },\n  clip: true\n};\nfunction _drawOnCanvas(ctx, props, columns) {\n  var stroke = props.stroke,\n    fill = props.fill,\n    strokeWidth = props.strokeWidth;\n  ctx.lineWidth = strokeWidth;\n  columns.forEach(function (col) {\n    var _col$offset = _slicedToArray(col.offset, 2),\n      offsetX = _col$offset[0],\n      offsetY = _col$offset[1];\n    col.boxes.forEach(function (box) {\n      if (col.direction > 0) {\n        ctx.fillStyle = fill.up;\n        ctx.strokeStyle = stroke.up;\n        ctx.beginPath();\n        ctx.moveTo(offsetX, offsetY + box.open);\n        ctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\n        ctx.moveTo(offsetX, offsetY + box.close);\n        ctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\n        ctx.stroke();\n      } else {\n        ctx.fillStyle = fill.down;\n        ctx.strokeStyle = stroke.down;\n        ctx.beginPath();\n        var x = offsetX + box.columnWidth / 2,\n          y = offsetY + box.open + box.boxHeight / 2;\n        var rx = box.columnWidth / 2,\n          ry = box.boxHeight / 2;\n        ctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\n        ctx.stroke();\n      }\n    });\n  });\n  ctx.stroke();\n}\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\n  var width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n  var columnWidth = width / (plotData.length - 1);\n  var anyBox = void 0,\n    j = 0;\n  while ((0, _utils.isNotDefined)(anyBox)) {\n    if ((0, _utils.isDefined)(plotData[j].close)) {\n      anyBox = plotData[j].boxes[0];\n    } else {\n      break;\n    }\n    j++;\n  }\n  var boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\n  var columns = plotData.filter(function (d) {\n    return (0, _utils.isDefined)(d.close);\n  }).map(function (d) {\n    var boxes = d.boxes.map(function (box) {\n      return {\n        columnWidth: columnWidth,\n        boxHeight: boxHeight,\n        open: yScale(box.open),\n        close: yScale(box.close)\n      };\n    });\n    var xOffset = xScale(xAccessor(d)) - columnWidth / 2;\n    return {\n      boxes: boxes,\n      direction: d.direction,\n      offset: [xOffset, 0]\n    };\n  });\n  return columns;\n}\nexports.default = PointAndFigureSeries;","map":{"version":3,"mappings":"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","names":["PointAndFigureSeries","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","columns","getColumns","clip","_react2","svgDraw","canvasDraw","canvasToDraw","drawOn","stroke","fill","strokeWidth","className","map","col","idx","key","transform","offset","boxes","box","i","direction","up","x1","y1","open","x2","columnWidth","y2","close","down","cx","cy","rx","ry","boxHeight","propTypes","_propTypes2","string","number","isRequired","object","bool","defaultProps","lineWidth","forEach","offsetX","offsetY","fillStyle","strokeStyle","beginPath","moveTo","lineTo","x","y","ellipse","Math","PI","width","length","anyBox","j","abs","filter","d","xOffset"],"sources":["C:\\Users\\Lucian\\Documents\\DEV\\nodejs\\stock-market-api\\dev\\static\\node_modules\\src\\lib\\series\\PointAndFigureSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass PointAndFigureSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\tdrawOnCanvas(ctx, this.props, columns);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { stroke, fill, strokeWidth, className } = this.props;\n\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{columns.map((col, idx) => (\n\t\t\t\t\t<g key={idx} className={col.className} transform={`translate(${ col.offset[0] }, ${ col.offset[1] })`}>\n\t\t\t\t\t\t{col.boxes.map((box, i) => {\n\t\t\t\t\t\t\tif (col.direction > 0) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<g key={`${ idx }-${ i }`}>\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.open} x2={box.columnWidth} y2={box.close} />\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.close} x2={box.columnWidth} y2={box.open} />\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ellipse key={`${ idx }-${ i }`}\n\t\t\t\t\t\t\t\t\tclassName=\"down\" strokeWidth={strokeWidth} stroke={stroke.down} fill={fill.down}\n\t\t\t\t\t\t\t\t\tcx={box.columnWidth / 2} cy={(box.open + box.close) / 2}\n\t\t\t\t\t\t\t\t\trx={box.columnWidth / 2} ry={box.boxHeight / 2} />\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</g>\n\t\t\t\t))}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nPointAndFigureSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstroke: PropTypes.object.isRequired,\n\tfill: PropTypes.object.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nPointAndFigureSeries.defaultProps = {\n\tclassName: \"react-stockcharts-point-and-figure\",\n\tstrokeWidth: 1,\n\tstroke: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#FF0000\"\n\t},\n\tfill: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, props, columns) {\n\tconst { stroke, fill, strokeWidth } = props;\n\n\tctx.lineWidth = strokeWidth;\n\n\tcolumns.forEach(col => {\n\t\tconst [offsetX, offsetY] = col.offset;\n\t\tcol.boxes.forEach(box => {\n\t\t\tif (col.direction > 0) {\n\t\t\t\tctx.fillStyle = fill.up;\n\t\t\t\tctx.strokeStyle = stroke.up;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.open);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.close);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\n\n\t\t\t\tctx.stroke();\n\t\t\t} else {\n\t\t\t\tctx.fillStyle = fill.down;\n\t\t\t\tctx.strokeStyle = stroke.down;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tconst [x, y] = [offsetX + box.columnWidth / 2, offsetY + box.open + box.boxHeight / 2];\n\t\t\t\tconst [rx, ry] = [box.columnWidth / 2, box.boxHeight / 2];\n\n\t\t\t\tctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t});\n\t});\n\n\tctx.stroke();\n}\n\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\n\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst columnWidth = (width / (plotData.length - 1));\n\n\tlet anyBox, j = 0;\n\twhile (isNotDefined(anyBox)) {\n\t\tif (isDefined(plotData[j].close)) {\n\t\t\tanyBox = plotData[j].boxes[0];\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\n\tconst boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\n\n\tconst columns = plotData\n\t\t.filter(d => isDefined(d.close))\n\t\t.map(d => {\n\t\t\tconst boxes = d.boxes.map((box) => ({\n\t\t\t\tcolumnWidth: columnWidth,\n\t\t\t\tboxHeight: boxHeight,\n\t\t\t\topen: yScale(box.open),\n\t\t\t\tclose: yScale(box.close),\n\t\t\t}));\n\n\t\t\tconst xOffset = (xScale(xAccessor(d)) - (columnWidth / 2));\n\t\t\treturn {\n\t\t\t\tboxes: boxes,\n\t\t\t\tdirection: d.direction,\n\t\t\t\toffset: [xOffset, 0],\n\t\t\t};\n\t\t});\n\treturn columns;\n}\n\nexport default PointAndFigureSeries;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}